/* Globdcl   $title  global primitive items   modified:   11/15/91 - PF  - Added XFER.PTR   02/28/91 - MWH - Add AEE's 20 saved mark points to the protocol   07/10/90 - PF  - Added some Meter Map Globals   05/31/90 - cj  - added sampled.move, sampled.move.speed   06/20/89 - MWH - Add SCRUB.PTR   05/02/89 - TSS - Merged changes for Optical disk to DTD transfer project   03/14/89 - PF  - Added PACKET.BAS.PTR, PACKET.FREE.PTR   01/27/89 - MWH - Add SECT.PTR   09/21/88 - TSS - Added dcl for DIAGNOSICS.ENABLED   09/14/88 - TSS - ADDED DCL FOR PACKET.PTR*//* begin by generating an error message if *//* someone forgets to insert 'comlits':    */_pdl(pdl_size)/* Variables in 'globdcl': */extern	fixed	modc;							/* 1 = Modc processor in system					*/extern	fixed	examount;						/* Sectors of external memory avail				*/extern	fixed	d54bits;						/* Bit controls for d54 bits					*/extern	fixed	real_milliseconds;				/* Used for millisec timer						*/extern	fixed	system_voices;					/* Holds # of voices							*/extern	fixed	fm_voices;						/* Holds # of fm voices							*/extern	fixed	diagnostics_enabled;			/* 1 = Diagnostics enabled (4x program)			*/extern	fixed	max_diagnose_voices;			/* The magic "wrap" number for incrementing through voices to test	*/extern	fixed	power_off;						/* Set to non-zero if keyboard ever becomes disconnected from d130	*/extern	array	misc_buf;						/* Used everywhere								*/extern	fixed	extbuf_ptr;						/* 4 Sector buffer in xmem						*/extern	fixed	packet_bas_ptr;					/* Rotary buffer for protocol packets			*/extern	fixed	packet_free_ptr;				/* Pointer to next available packet sector		*/extern	fixed	packet_ptr;extern	fixed	misc_ptr;						/* 1 Sector buffer in xmem - primarily for sending protocol packets	*/extern	fixed	sect_ptr;						/* Buffer for setbuf during d115 download		*/extern	fixed	locate_stack_ptr;				/* Buffer for saved mark points					*/extern	fixed	scrub_ptr;						/* Buffer to save start scrub packet if dtd not ready	*/extern	fixed	within_scan;					/* Used to avoid re-entered intrpts				*/extern	fixed	xfer_ptr;						/* Buffer to build and receive transfer blocks	*/extern	fixed	lcap_ptr;						/* For receipt of long caption strings			*/extern	fixed	pcache_ptr;						/* Protocol catalog cache for sequence name scrolling	*/extern	fixed	tok_ptr;						/* Byte ptr into token							*/extern	array	token;							/* Global string buffer							*/extern	array	fnbuf;							/* Global file name buffer						*/extern	fixed	ertyp;							/* Global holds code for current error status	*/extern	array	ersym;							/* Holds string associated with current error	*/extern	fixed	vk_error_code;					/* Coded ident of vk error message displayed	*//* Special synclavier variables put here *//* To simplify module construction       *//* Needed by get next event and lod module:      */extern	fixed	play;							/* Set true if sequencer is running				*/extern	fixed	recd;							/* Recording									*/extern	fixed	move;							/* Ff/rewind									*/extern	fixed	pnch;							/* Punching in									*/extern	fixed	sampled_actual_play_time_msb;	/* Sampled once per main loop					*/extern	fixed	sampled_actual_play_time_lsb;	/* Correspond to the actual						*/extern	fixed	sampled_actual_play_time_acu;	/* Microsecond time accumulator					*/extern	fixed	sampled_actual_next_click;		/* Values of play time vars						*/extern	fixed	sampled_actual_beat_number;		/* At start of main loop						*/extern	fixed	sampled_move;					/* Provide sampled versions of ff/rew variables so	*/extern	fixed	sampled_move_speed;				/* Intrtp routine can estimate sequencer motion	*/extern	fixed	sampled_actually_emit_click;extern	fixed	sampled_actual_sequence_time_msb;	/* Computed once per main loop					*/extern	fixed	sampled_actual_sequence_time_lsb;extern	fixed	sampled_real_time_of_prior_click_lsb;extern	fixed	sampled_real_time_of_next_click_lsb;extern	array	cursor_scroll_begin;extern	array	cursor_scroll_end;extern	array	screen_scroll_begin;extern	array	screen_scroll_end;extern	fixed	trd_ptr, trd_len;				/* Sec # in xmem for terminal disp				*/extern	data	hexpowers;						/* 4096,256,16,1								*/extern	data	powers;							/* 10000,1000,100,10,1							*/extern	data	bits;							/* 1,2,4,8,...,16384,32768						*/extern	data	r_look;							/* 2,4,8,64,128,16								*/extern	void	alloc_examount(fixed);			/* Allocate & zero out external memory			*/extern	fixed	stop_held();					/* Returns true if stop button held				*/extern	void	set_error(fixed, array);		/* Sets ertyp & saves error string in ersym		*/extern	void	stop_disk();					/* Stop disk io for mono sampling				*/extern	void	run_syn_loop();extern	fixed	aee_screen_state;				/*  0 = Aee never has been activated			*/												/*  1 = Aee is now running						*/												/* -1 = Aee was run but is closed now			*//* Note !!! - push.pdl and pop.pdl can only be called from recursive *//* procedures that declare at least one recursive variable inside    *//* themselves                                                        */extern	fixed	measure_pdl();extern	void	zero_pdl();extern	void	push_pdl_to_xmem_routine(fixed);extern	void	pop_pdl_from_xmem_routine();#define	push_system_pdl	begin;dcl a label;call push.pdl.to.xmem.routine(read("312")); goto a;a:; end;#define	pop_system_pdl	begin;dcl a label;call pop.pdl.from.xmem.routine; goto a;a:; end;#include "gmodlits.h"_library(":SYNLIBS:GLOBLIB")					/* Library the code								*/