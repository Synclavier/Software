/* Getvdcl   $title  define global variables for get.next.event   modified:   04/26/91 - cj  - Defined bit for new tempo/meter events   01/30/91 - MWH - Report which tracks have had new notes   11/09/89 - MWH - Auto punch mode change on new.seq.info sync mode change   09/19/89 - MWH - Added new.dtd.info bit for "cue created after recording"   09/08/89 - MWH - Added new.seq.info bit for "sequence was saved"   06/27/89 - cj  - Moved many events around for release 2.2   09/16/88 - TSS - Added NEW.CLAVIER.INFO dcl*//* The following variables are set by the Synclavier Operating             *//* System when the contents of various data structures change:             *//* Note: see SYNMODS:GETVDCL for a description of these                    *//* variables                                                               */extern	fixed	new_timbre_info;				/*  new timbre/partial							*/												/*     1 = timbre recalled						*//* new.timbre.info is set when a new  *//*         to keyboard           *//* timbre is called to the keybaoard, *//*     2 = partial selected      *//* or when a new timbre name is       *//*     4 = new timbre name       *//* entered for the keyboard timbre,   *//*         entered for kbd       *//* or when a new partial is selected. *//*         timbre                */extern	fixed	new_seq_info;					/*  new sequencer information					*/												/*     1 = new sequece recalled.				*/												/*         Note: everything						*/												/*         about the sequence					*/												/*         may have changed!					*/												/*     2 = new timbre name						*/												/*         assigned to sequencer				*/												/*         track.								*/												/*     4 = a note was added or					*/												/*         or deleted on a track.				*/												/*     8 = new constant (speed,					*/												/*         smpte start time,					*/												/*         etc.).  All time						*/												/*         displays may need to					*/												/*         be refreshed. Also					*/												/*         set if MIDI routing					*/												/*         changes & any change					*/												/*         in click track/rate.					*/												/*         Also set if DTD turns				*/												/*         on or off.							*/												/*    16 = new tempo or meter					*/												/*         is now in effect						*/												/*    32 = reserved for ABLE.					*/												/*         will always be 0.					*/												/*    64 = reserved for ABLE.					*/												/*         will always be 0.					*/												/*   128 = change in sequencer					*/												/*         motion (start, stop).				*/												/*         Also set if change in				*/												/*         current MARK START.					*/												/*   256 = change in solo state					*/												/*         for any track.						*/												/*         Also set if INFO MODE				*/												/*         changes.								*/												/*   512 = change in sync mode					*/												/*         (smpte on/off, auto-					*/												/*         punch mode change...)				*/												/*         Also change in MIDI					*/												/*         sync output channel					*/												/*         number.								*/												/*  1024 = d34 remote ctrl						*/												/*  2048 = Means the muted						*/												/*         state of a synclavier				*/												/*         track has changed.					*/												/*  4096 = new safe/ready for					*/												/*         seq or dtd track.					*/												/*         Used for multi-track					*/												/*         midi recording & DTD.				*/												/*  8192 = This special event					*/												/*         is created when a					*/												/*         note is placed in					*/												/*         the sequence using					*/												/*         Vitc placing.  The					*/												/*         screen software can					*/												/*         find that note using					*/												/*         some variables that					*/												/*         are set up, and then					*/												/*         automatically scroll					*/												/*         to that new note.					*/												/* 16384 = change in DTD track					*/												/*         mode (input, repro).					*/												/* 32768 = sequence was saved.					*/extern	fixed	new_entry_writes;				/*     new bank/entry write						*/												/*     holds bits for 8 bnks					*/extern	fixed	new_prm_info;					/*     new parameter info						*/												/*     1 = partial 1 change						*/												/*     2 = partial 2 change						*/												/*     4 = partial 3 change						*/												/*     8 = partial 4 change						*/												/*    16 = misc area change						*/												/*    32 = patch list change					*/												/*         or new project						*/												/*    64 = Change in track						*/												/*         volume,  track						*/												/*         routing.								*/												/*   256 = New seq path name set				*/												/*         (motion panel)						*/extern	fixed	new_dtd_info;					/*     new info from dtd						*/												/*     1 = This bit is set when					*/												/*         a new song directory					*/												/*         has been stored in					*/												/*         the TRD area. This					*/												/*         bit is also set when					*/												/*         a new INITIALIZE						*/												/*         record is received.					*/												/*     2 = This bit is set when					*/												/*         the button assignmnts				*/												/*         for DTD tracks has					*/												/*         changed.								*/												/*     4 = This bit is set when					*/												/*         a new track directory				*/												/*         has been stored in					*/												/*         the trd area.						*/												/*     8 = This bit is set when					*/												/*         a "Scroll Time"						*/												/*         message is received					*/												/*         from the DTD. It						*/												/*         basically means that					*/												/*         Cur.DTD.Ms() has						*/												/*         changed.								*/												/*    16 = This bit is set when					*/												/*         any aspect of DTD					*/												/*         recording is changed.				*/												/*         Ie: changes in the					*/												/*         Dtd safe/ready state,				*/												/*         Armed for DTD						*/												/*         recording, Actually					*/												/*         doing DTD recording.					*/												/*    32 = This bit is set when					*/												/*         a load/backup command				*/												/*         is finished,  also					*/												/*         when a DSP process is				*/												/*         finished.  It is also				*/												/*         set when the current					*/												/*         Dtd project is						*/												/*         changed.								*/												/*    64 = Reserved for use by					*/												/*         Able screens.  Will					*/												/*         always be zero.						*/												/*   128 = This bit is set when					*/												/*         a new reel is						*/												/*         selected by the user.				*/												/*   256 = This bit is set when					*/												/*         some element of the					*/												/*         current cue is						*/												/*         changed (for example					*/												/*         a new cue in time).					*/												/*   512 = This bit is set when					*/												/*         a new scrubbing						*/												/*         "Anchor" time is set.				*/												/*  1024 = This bit is set when					*/												/*         the region of the DTD				*/												/*         that is represented					*/												/*         by the FINE bar is					*/												/*         changed. Basically					*/												/*         tells you to update					*/												/*         the wave display.					*/												/*  2048 = This bit is set when					*/												/*         the region of the DTD				*/												/*         that is represented					*/												/*         by the COARSE bar is					*/												/*         changed.								*/												/*  4096 = This bit is set when					*/												/*         on of the parameters					*/												/*         that affects the						*/												/*         current cue is						*/												/*         chnaged:								*/												/*   Audition mode turned on/off				*/												/*   Cue place track changed					*/												/*  8192 = This bit is set when					*/												/*         a cue is saved or					*/												/*         unsaved in the cue					*/												/*         directory.							*/												/* 16384 = This bit is set when					*/												/*         a parameter of a						*/												/*         track (such as						*/												/*         an STM assignment)					*/												/*         is changed.  It is					*/												/*         also set on new DTD					*/												/*         In or OUT routing,					*/												/*         volume, gain, xfade					*/												/*         and DDT output						*/												/*         routing changes.						*/												/* 32768 = This bit is set when					*/												/*         a cue is created						*/												/*         after DTD recording.					*/extern	fixed	new_poly_contents;				/*     1 = file list in poly					*/												/*         has changed							*/												/*     2 = amount of poly						*/												/*         free has changed						*/												/*     4 = different optical					*/												/*         disk is now mounted					*/												/*     8 = contents of optical					*/												/*         disk has changed						*/												/*    16 = poly cache has chnged				*/												/*         (new file saved)						*/extern	fixed	new_ertyp;						/*     1 = an error msg has						*/												/*         been generated.						*/												/*         Latched.ertyp						*/												/*         holds code.							*/												/*         Used for 1-line						*/												/*         Synclavier error msgs.				*/												/*     2 = An Audio Event Editor				*/												/*         style error message					*/												/*         has occured.							*/												/*         The following						*/												/*         variables describe					*/												/*         the error:							*//*     Protocol.Error.ID    = holds id# of error message                   *//*     Protocol.Error.Attr  = attribute set for display (ie HIGHLIGHT)     *//*     Protocol.Error.Arg0  = ABLE string format argument                  *//*     Protocol.Error.Arg1  = fixed point first argument                   *//*     Protocol.Error.Arg2  = fixed point second argument                  *//*     Protocol.Error.Arg3  = fixed point third argument                   */extern	fixed	new_smpte_event;				/*     1 = incoming SMPTE						*/												/*         time has changed.					*/												/*         Generated every						*/												/*         .5 sec if SMPTE						*/												/*         is running.							*/extern	fixed	new_clavier_info;				/*     new clavier status						*/												/*    Bits  0- 9: new button status				*/												/*    Bits 10-13: new window status				*//* The following array holds copies of these the Operating System    *//* event variables (plus the event variables for the ABLE screen     *//* code):                                                            */extern	array	get_able_array;extern	fixed	new_able_in_char;extern	fixed	new_able_mouse_button;extern	fixed	new_able_mouse_movement;extern	fixed	new_able_timbre_info;extern	fixed	new_able_seq_info;extern	fixed	new_able_entry_writes;extern	fixed	new_able_prm_info;extern	fixed	new_able_dtd_info;extern	fixed	new_able_poly_contents;extern	fixed	new_able_ertyp;extern	fixed	new_able_smpte_event;extern	fixed	new_able_screen_event;extern	fixed	new_able_clavier_info;/* provide these literals for earlier software: */#define	new_in_char		new_able_in_char#define	new_mouse_button	new_able_mouse_button#define	new_mouse_movement	new_able_mouse_movement#define	new_screen_event	new_able_screen_event/* note: for new.play.scrolling and new.dtd.scrolling - these are events *//* that ABLE screens enable for.  These events are never reported with   *//* a discreet event code.  They appear as bits in new seq info or new    *//* dtd info.                                                             *//* The D50 termulator is only interested in New.Clavier.Info at the      *//* moment:                                                               */extern	fixed	d50_termulator_clavier_info;/* One sector of external memory is used to hold a list of which events *//* the various protocl devices have enabled for:                        */extern	fixed	d115d_event_enable_ptr;extern	fixed	d115d_note_change_tracks;/* misc synclav variables */extern	fixed	latched_ertyp;extern	fixed	new_smpte_info;					/* set to 1 whenever a new SMPTE time is latched into CUR.HRS, CUR.MIN, etc. (once every 100 msec usually)	*/extern	fixed	winchester_error;extern	fixed	output_underrun;_library(":synlibs:globlib")					/* put glob mod first so examount gets set		*/_library(":synlibs:getvlib")