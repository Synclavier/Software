/* Polydcl   $title  polydcl - poly memory routines   modified:   12/13/88 - TSS - Moved & renamed PEEK_STM_CONFIG to READ.STM.CONFIG   04/13/88 - MWH - Add routine to do general fade-in or fade-out   02/01/88 - MWH - Expand crossfade times to 65.535 seconds   07/30/87 - MWH - Add POLY.WRITEDATA   07/17/87 - MWH - GET OLD :SYNLITS:POLYLITS HERE (TEMPORARILY) INSTEAD   07/15/87 - MWH - PUT ARGS TO POLY.READDATA IN MORE SENSIBLE ORDER   07/14/87 - MWH - SET.BIN.FROM.BASE TAKES (ARRAY), NOT (FIXED)   07/02/87 - MWH - GET LITERALS FROM :SYNAUXS:POLYLITS   06/15/87 - MWH - UPDATED FOR EXPANDED POLY   */extern	array	sfile_base;						/* Returns sector of poly/ext mem in global variables					*/extern	array	psfirsts;						/* Pointer to start of sound files in poly mem							*/extern	array	pslasts;						/* Pointer to start of free space after the last sound file				*/extern	array	psmaxs;							/* Pointer to the end of poly memory									*/extern	array	psfrees;						/* # Sectors unused (even if containing a sound file					*/extern	array	psheres;						/* Rotary pointer telling where to start loading files-lru of unused	*/extern	array	polyamounts;					/* How much poly memory exists in each bin								*/extern	array	polyadcs;						/* Set to 1 if poly a/d controller is present							*/extern	array	adconfigs;						/* Num boxes a/d map													*/extern	array	polynumvs;						/* How many voices in this poly bin										*/extern	array	polyused;						/* Used to keep track of channel useage									*/extern	fixed	polynums;						/* How many poly bins exist												*/extern	fixed	_cbincode;						/* Which bin we are accessing											*/extern	fixed	poly_read_aborted;				/* Set to abort poly io													*/extern	fixed	xfade_sec;						/* Sectors in crossfade													*/extern	fixed	xfade_wrd;						/* Words   in crossfade													*/extern	fixed	allow_poly_stop;				/* Set true to allow break reporting from copy.poly.mem					*/extern	void	set_cur_bin(fixed);				/* Set poly bin number													*/extern	void	set_bin_from_base(array);		/* Set poly bin from 32 bit base										*/extern	fixed	read_stm_config(fixed);			/* Get stm configuration info											*/extern	void	psmread(array, fixed, fixed);	/* Set up for poly synth memory read									*/extern	void	psmwrite(array, fixed, fixed);	/* Poly synth memory write												*/extern	void	poly_out(fixed*, fixed);		/* Copy block to poly mem - set up write address before calling			*/extern	void	poly_in(fixed*, fixed);extern	fixed	copy_poly_mem(array, fixed, fixed, array, fixed, fixed, fixed, fixed);extern	fixed	copy_poly_mem_sec(array, fixed, array, fixed, fixed);		/* High speed copies - copies up or down, any length, in poly memory - length in sectors	*/extern	void	poly_readdata(fixed, fixed, array, fixed, fixed, fixed);	/* Diskread into poly memory				*/extern	void	poly_writedata(fixed, fixed, array, fixed, fixed, fixed);	/* Disk write into poly memory				*/extern	void	get_crossfade_wrd_len(fixed, fixed, fixed);extern	void	poly_cross_fade(array, fixed, fixed, array, fixed, fixed, array, fixed, fixed, fixed, fixed, fixed);extern	void	poly_fade(array, fixed, fixed, array, fixed, fixed, fixed, fixed, fixed, fixed);extern	void	construct_short_fadein(array, fixed, fixed);extern	void	construct_short_fadeout(array, fixed, fixed);extern	fixed	ps_search();					/* See if file name is in memory										*/extern	void	ps_lock();						/* Lock poly memory when changing items									*/extern	void	ps_unlock();					/* Save info in poly memory												*/extern	void	ps_users(array, fixed);			/* Update user field for file record in ext mem							*/void	polymod_main();							/* main startup code for polymod 										*/#include "polylits.h"							/* bring in the literals												*/