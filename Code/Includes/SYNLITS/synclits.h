/* Synclits  $title  a whole bunch of general synclavier literals   modified:   12/15/91 - PF -  Added MIDISUST.DISP   03/22/91 - cj -  Changed kbd.spl.time to fix Lee Kopp FM retrigger clicks   02/14/91 - cj -  Added ET.DISP (erase tempo)   02/01/91 - PF  - Made DIVISIONS literal = SAMP.CLICK.RATE   11/06/90 - PF  - Add bit literals for THD.SUSTAIN   10/23/90 - PF  - Add TEMPO.DISP and METER.DISP   09/27/90 - cj  - added literals for startup control (size of gpdt)   09/06/90 - TSS - ADDED LITS FOR REV 2 PRESSURE MAPPING UPGRADE   08/27/90 - PF  - Support all MIDI controllers   02/01/90 - MWH - Add pre-roll literal   06/05/89 - TSS - Added offset literals for .SMAP-7 file   04/30/89 - PF  - Removed "MIDI.NOTE.OFF lit MIDI.NOTE.ON" dcl   03/16/89 - TSS - Changed KBD.SYNC.DELAY from 15 msec to 0!   03/14/89 - PF  - Increase LIST.SIZE from 10 to 15   12/02/88 - CJ  - added used.disp   09/21/88 - TSS - Changed Clavier button state lits for BSTAT.PTR   09/15/88 - TSS - Added TBUT.PTR bit literals for Clavier Emulation*//* Keyboard: */#define	frame_disp		( -1)					/* -1  Means frame   display					*/#define	lines_disp		( -2)					/* -2  Means lines   display					*/#define	start_disp		( -3)					/* -3  Means start   display					*/ /* (Track start time) */#define	beats_disp		( -4)					/* -4  Means beats   display					*/#define	smpte_disp		( -5)					/* -5  Means smpte   display					*/#define	loadm_disp		( -6)					/* -6  Loading sf    message					*/#define	smode_disp		( -7)					/* -7  Smpte mode    display					*/#define	loopl_disp		( -8)					/* -8  'Seconds'     display					*/#define	dsel_disp		( -9)					/* -9  Drive select  display					*/#define	ext_disp		(-10)					/* -10 External sync display					*/#define	lod_disp		(-11)					/* -11 Ready for lod display					*/#define	time_disp		(-12)					/* -12 Time parameter display					*/#define	err_disp		(-13)					/* -13 Error display							*/#define	loop_disp		(-14)					/* -14 Loop parameter display					*/#define	smpte_e_disp	(-15)					/* -15 Smpte mode error							*/#define	polyphony_disp	(-16)					/* -16 Autophrasing mode disp					*/#define	midipoly_disp	(-17)					/* -17 MIDI polytimbre mode						*/#define	midiskt_disp	(-18)					/* -18 Mipgm on skt mode						*/#define	kbdtrack_disp	(-19)					/* -19 Kbd track - for multirecd mode			*/#define	used_disp		(-20)					/* -20 Voices used display						*/#define	tempo_disp		(-21)					/* -21 Insert/delete tempo event				*/#define	meter_disp		(-22)					/* -22 Insert/delete meter event				*/#define	et_disp			(-23)					/* -23 Erase tempo/meter info					*/#define	midisust_disp	(-24)					/* -24 MIDI sustain mode						*/#define	stopping_disp	(-25)					/* -25 Stopping... One moment...				*/#define	midisel_disp	(-26)					/* -26 Select patching (lower)					*/#define	tpanreset_disp	(-27)					/* -27 Track buttons reset (both)				*/#define	eras_disp		(-28)					/* -28 Erase button display						*/#define	tpan_disp		(-29)					/* -29 Track pan setting display				*/#define	tgroup_disp		(-30)					/* -30 Create/modify track group				*/#define	num_glob_pars	10						/* Number of global parameters					*/#define	tbase			gpdt[0]					/* Tuning base									*/#define	octratio		gpdt[1]					/* Octave ratio									*/#define	tb_dmax			gpdt[2]					/* Tone bend sensitivity - old keyboard only	*/#define	v_s_min			gpdt[3]					/* Velocity sensitivity min						*/#define	v_s_con			gpdt[4]					/* Velocity sensitivity constant				*/#define	sync_delay		gpdt[5]					/* Sync to click delay							*/#define	numpoints		gpdt[6]					/* Numpoints for loop search					*/#define	startup_value	gpdt[7]					/* Notes to search during start up				*/#define	kbd_sync_delay	0						/* Msecs of keyboard sync delay					*//* Keyboard literals */#define	num_octaves		5						/* # Superoctaves (16 key)						*/#define	num_sw_pans		10						/* # Button banks								*/#define	num_alpha_chars	32						/* # Alpha chars								*/#define	num_track_buttons	32					/* # Track buttons								*//* From 072-newi */#define	list_size		15#define	rte_list_size	100#define	left_just		0#define	right_just		1/* from 137-comp */#define	min_samp		560						/* Min for mono sampling computation			*/#define	max_samp		4095					/* Max for mono sampling computation			*//* from 141-gdef */#define	new_max			15						/* size of new string list						*//* from 144-tim1 */#define	epkqf			epqbuf[timer_phase  ]	/* One que for each phase						*/#define	epkqb			epqbuf[timer_phase+1]#define	ipkqf			ipqbuf[timer_phase  ]#define	ipkqb			ipqbuf[timer_phase+1]/* Configuration literals (further config lits are in 0-monoio and are only used there) */#define	ms_table_sector	(able_core(loc_p3+1))	/* Sector location of .stab file				*/#define	ls_table_sector	(able_core(loc_p3  ))#define	frqtable_offset	0						/* Data offsets in .stab file					*/#define	sintable_offset	8#define	logtable_offset	9#define	poly_frqtable_offset	13/* Data offsets into .smap-7 file for kbd maps */#define	pressure_cal_data	0					/* Offset to the pressure calibration data		*/#define	pressure_map	1						/* Offset to the pressure to vol map			*/#define	ttime_maps		2						/* Offset into file to the 10 ttime to vol maps	*/#define	midi_maps		12						/* Offset into file to the MIDI velocity to vol map	*/#define	loc_pressure_version	255				/* Offset into pressure.cal.data table of current version of map	*/#define	loc_pressure_saturation	254				/* Offset into pressure.cal.data of saturation constant	*//* Pressure version history:                                            *//* Version = 0  original version of pressure map for use with original  *//*              Tripp kbd on which a 1lb weight produced 90% saturation *//* Version = 1  version of pressure map for use with rev 2 tripp kbd    *//*              On which a 1lb weight produced 55% saturation           */#define	default_pressure_version	1			/* Current pressure map revision				*/#define	default_pressure_saturation	55			/* Saturation (goes with 1lb weight on 2lb kbd)	*//* $Page - note record description *//*   For each note that is recorded in the sequencer memory, a two word or a.  Four word record is stored in memory.   Two word records are used for most.  Simple notes (i.e. Notes without real time effects or volume), while four.  Word records are required for notes with real time effects or volume data..  .    A bit in the record indicates whether the record is two words or four .  Words long.   To facilitate scanning the note list backwards (during.  Rewind),  all four word records are flagged with a special byte (i.e..  'Vel.note') in their last word..  .    A two word note record is as follows:.  .       [10 Bits - time delta, ms. ]   [4 Bits - duration msb ]  [2 bits - record type].       [10 Bits - duration lsb    ]   [6 bits - key #        ]..    A four word note record is as follows:..       [10 Bits - time delta, ms. ]   [4 Bits - duration msb ]  [2 bits - record type].       [10 Bits - duration lsb    ]   [6 bits - key #        ].       [ 8 Bits - sbits           ]   [8 bits - rte data     ].       [ 8 Bits - volume/other    ]   [2 raise/lower]  [6 bits - 62 decimal - vel.note]...sub fields:..    Record type field:..       0 - Two  word basic    record.       1 - Four word basic    record.       2 - Two  word expanded record.       3 - Four word expanded record.    Encoded duration data - 14 bits:..       Upper  4 bits:    [ 2 bits - power of 4 exponent                    ].                         [ 2 Bits - upper  2 bits of 12 bit duration (ms.) ]..       Lower 10 bits:    [10 bits - lower 10 bits of 12 bit duration (ms.) ]. .    Switch and flag bits  -  8 bits:  (see definitions)..            Bit 0 - glide foot switch (kbd)       |.            Bit 1 - repeat foot switch (kbd)      |==> string number if b.gui=1.            Bit 2 - arpeggiate foot switch (kbd)  |.            Bit 3 - indicates a guitar note.            Bit 4 - indicates tied note.  Slur from previous note.            Bit 5 - indicates valid volume data..            Bit 6 - indicates to re-articulate after tied note .            Bit 7 - indicates an 'update' record. |==> Redefines lower bits...    Raise/lower bits - 2 bit field from last word of 4 word record:..            Bit 0 - indicates lower the note by 1 octave (lower.key= 64).            Bit 1 - indicates rease the note by 1 octave (raise.key=128).$page - update record format..    Format for update records:..            - Update records are always 4 word records.            - B.upd (bit 7) is always set in an update record.            - Update records for guitar: b.gui is set.                 1. Duration field - holds 10-bit two's complement.                    Pitch delta (-512 through +511).  Records changes.                    In the guitar pitch..                 2. Key number field - holds key number nearest to.                    The new pitch (used mostly by channel stealing.                    Algorithm).                 3. Rte field        - holds possible new rte knob.                    Value for guitar.                 4. Volume field     - holds possible new volume data.                    For guitar.                 5. Bits field - b.upd + b.gui + string# (0-5).                    Note: string 6 is used to indicate guitar hold.                          Switch..            - Update records for keyboard:.                 1. B.upd is set, b.gui is zero. All other bits reserved..                 2. Used for recording changes in real time effects.                 3. Key number field - holds key number if pressure change.                                       Otherwise unused (set to c2).                 4. Duration field (10) bits..                    Divided into a 2 bit (lower 2 bits) and an 8 bit (upper 8.                    Bits) field.  2 Bit field describes type..                       A. Type 0:  indicates real time effects update.                                   Record.   Upper 8 bits contain two 4-bit.                                   Routing fields.  They route the rte data field.                                   And the volume field to two separate.                                   Effects..                       B. Type 1:  toggle bits.  Upper 8 bits is a bits.                                   Word for the tbits array.  Used for.                                   Real time recording of repeat/arpeggiate.                                   Buttons,  foot switches..                       C. Type 2:  pressure record..									upper 8 bits are the new pressure for this key.	<<===	INCORRECT!.									key # field identifies the key..									vol field is unused..									rte field is unused.							<<===	INCORRECT!.                       D. Type 3:  MIDI data record..                 5. Rte field, vol field - see (4)*//* $Page - note record bit & field definitions     *//* Definitions for 2-word and 4-word note records: */#define	vel_note		62						/* Note # 62 means velocity data when scanning backwards	*/#define	rest_note		63						/* Note # 63 means a rest						*/#define	lower_key		64						/* This bit is set in 4-word records to lower key by 1 octave	*/#define	raise_key		128						/* This bit is set in 4-word records to raise key one octave	*//* Bit definitions for lower half of 'sbits'       *//* Stored in upper half of word 2 of 4-word record */#define	b_gli			1						/* Foot switch - glide							*/#define	b_rep			2						/* Foot switch - repeat							*/#define	b_arp			4						/* Foot switch - arpeggiate						*/#define	b_gui			8						/* Indicates guitar note - means lower 3 bits are string number instead of pedal	*/#define	b_tie			16						/* Constructs a slur from previous note to this note	*/#define	b_vol			32						/* Indicates valid volume data stored in record	*/#define	b_art			64						/* Indicates an articulated tie					*/#define	b_upd			128						/* Indicates update record						*/#define	repscan2		(20+inc_mono*kbd_mono3)	/* Repeat/arpeg prescan for keyboard - fixed at 20 msec regardless of speed	*/#define	kbd_spl_tim		5						/* Splice time for poly notes					*/#define	kbd_fm1			3						/* Splice #1 for fm notes						*/#define	kbd_fm2			2						/* Splice #2 for fm notes						*/#define	kbd_mono1		10						/* 10 Msec ramp down							*/#define	kbd_mono2		5						/* 5  Msec to load and ramp up					*/#define	kbd_mono3		15						/* 10 Msec total								*//* midi stuff from 142-midi */#define	midi_subsys		16						/* Subsystems are addressed 16 to 23 (8 cards)	*//* Synclavier switch index numbers (switchdata) */#define	r_hold_sw		0						/* Hold switch									*/#define	r_rep_sw		1						/* Repeat switch								*/#define	r_glide_sw		2						/* Glide switch									*/#define	r_sust_sw		3						/* Sustain switch								*/#define	r_arp_sw		4						/* Arpeggiate switch							*/#define	r_punch_sw		5						/* Punch in/punch out							*/#define	r_phrase_sw		6						/* Phrase switch								*/#define	r_mute_sw		7						/* Mute switch									*//* Bit literals corresponding to above index numbers */#define	b_hold_sw		1						/* Hold switch									*/#define	b_rep_sw		2						/* Repeat switch								*/#define	b_glide_sw		4						/* Glide switch									*/#define	b_sust_sw		8						/* Sustain switch								*/#define	b_arp_sw		16						/* Arpeggiate switch							*/#define	b_punch_sw		32						/* Punch in/punch out							*/#define	b_phrase_sw		64						/* Phrase switch								*/#define	b_mute_sw		128						/* Mute switch									*//* From 171-prf1 *//* Bits defined for the external memory clav.ptr array:   */#define	active			1						/* Bit set to keep note sounding				*/#define	down			2						/* Bit set if key is still down					*/#define	held			4						/* Bit set if key is held						*/#define	sustd			8						/* Bit set if key is sustained					*//* Bit literals for thd.sustain */#define	b_current_sustain	1					/* Bit set if sust currently on					*/#define	b_loop_sustain	2						/* Bit set if sust is on at loop				*/#define	b_ils_sustain	4						/* Bit set if sust is on at ils					*/#define	b_ile_sustain	8						/* Bit set if sust is on at ile					*/#define	holdswitch		switchdata[0]			/* Hold switch									*/#define	repswitch		switchdata[1]			/* Repeat switch								*/#define	glideswitch		switchdata[2]			/* Glide switch									*/#define	sustswitch		switchdata[3]			/* Sustain switch								*/#define	arpswitch		switchdata[4]			/* Arpeggiate switch							*/#define	punchswitch		switchdata[5]			/* Punch in/punch out							*/#define	phraseswitch	switchdata[6]			/* Phrase switch								*/#define	muteswitch		switchdata[7]			/* Mute switch									*/#define	raw_knob_pos	analog_in[0]#define	raw_ribbon_pos	analog_in[1]#define	raw_pedal2_pos	analog_in[2]#define	raw_pedal1_pos	analog_in[3]#define	raw_pwheel_pos	analog_in[4]#define	raw_mwheel_pos	analog_in[5]#define	raw_breath_pos	analog_in[6]#define	raw_unused_pos	analog_in[7]#define	silent_pre_roll_value	7				/* 100'S of msec to back up sequencer			*//***** from 12-EDIT  *****//* Cut, copy, move, paste, merge, fill operation literals */#define	edit_cut		0#define	edit_copy		1#define	edit_move		2#define	edit_paste		0#define	edit_merge		1#define	edit_fill		2#define	edit_insert		3/* error literals from bounce, cut.copy.move, paste.merge.fill */#define	e_nofindclip	1						/* couldn't find clipboard file					*/#define	e_noopenclip	2						/* couldn't open clipboard file					*/#define	e_noroom		3						/* not enough memory for operation				*/#define	e_oldseq		4						/* can't recall track from old format sequence	*/#define	e_lengtherr		5						/* can't figure out what length should be (no overall loop)	*/#define	e_zerolength	6						/* empty pattern being pasted					*/#define	e_toolong		7						/* seq. will be too long once repetition count is figured in	*/#define	e_timbnomatch	8						/* timbres don't match for bounce				*//* Terminal literals -- from 500-cat *//*   9/12/86 - Added literals for MOUSE function codes   8/14/86 - BSW removed patch display literals and put them back in 550-assn                 removed error literals and put them back in 525-err as well   8/8/86  - BSW added error declaration   7/25/86 - BSW added two new states for direct-to-disk   7/10/86 - TSS - ADDED STATE FOR DEBUG SCREEN (S.DEBUG)   6/15/86 - cj - added lod error declaration   5/15/86 - "official" creation of release-M modules*//* from 550-ASSN *//* the following literals mix up the meanings of x and y */#define	kbdtx			9						/* cursor position for keyboard timbre name		*/#define	kbdty			20/* from 557-REC0   */#define	note_start		0 #define	note_key	1 #define	note_dur	2#define	colwidth		27						/* Each column of track display is this wide	*/#define	moderow			5						/* Row of display mode (seconds, smpte)			*/#define	modecol			68						/* Col of display mode							*/#define	enable_mouse	mouse_cursor_on == 1#define	disable_mouse	mouse_cursor_on == 0/* Info for pre-computed   *//* Keyboard partial blocks */#define	kbd_pre_nump	4						/* Number of partials precomputed				*/#define	kbd_pre_str1	29						/* 29 Words of partial info						*/#define	kbd_pre_str2	6						/*  6 Words of chorus hz info					*/#define	kbd_pre_str		(kbd_pre_str1+kbd_pre_str2)	/* Stride (words)								*/#define	kbd_pre_len		(((fixed) (((fixed) (kbd_pre_nump*kbd_pre_str))*num_keys)))	/* Length (words)								*//* The tbut.ptr array contains a mapping of physical track buttons    *//* To logical track number (lower 8 bits).  In addition, the upper 8  *//* Bits may be used to hold other state information relevant to the   *//* The track buttons or the tracks.  Definitions for these bits       *//* Should be put here.                                                *//* Note that the tbut area is used in a rather confusing way.  It		 *//* Is indexed both by button number (e.g. 0 To 31) and by track		 *//* Number (e.g. 0-255, With track 2 being the first track of the		 *//* Sequencer.																			 */#define	b_held_trk		256						/* Set if corresponding track button held   	 **index by button number **	*/#define	b_soloed_trk	512						/* Set if corresponding track soloed 			 **index by track  number **	*/#define	b_ready_trk		1024					/* Set if corresponding track armed     	    **index by track  number **	*/#define	b_muted_trk		2048					/* Set if corresponding track muted     		 **index by track  number **	*/#define	b_input_trk		((fixed) 4096)			/* Set if corresponding track is in input mode **index by track  number **	*/#define	b_auto_cue_trk	((fixed) 8192)			/* Set if corresponding track is in auto  mode **index by track  number **	*/#define	b_pushd_trk		((fixed) 16384)			/* Set when soloes are 'pushed' and 'popped'   **index by track  number **	*/#define	b_grpsel_trk	((fixed) 32768)			/* Set as part of track group processing       **index by track  number **	*//* Three status bits used to keep track of clavier button         *//* Panel state.  Indexed into bstat.ptr by physical button number */#define	b_lit_button	1						/* Set if corresponding kbd button is lit		*/#define	b_blink_button	2						/* Set if corresponding kbd button is blinking	*/#define	b_held_button	4						/* Set if corresponding kbd button is held down	*//* Divisions: number of sequencer delta divisions per MIDI quarter note  *//* Used in all tempo mapping calculations - store in place of click.rate */#define	divisions		samp_click_rate/* Literals for erase button function codes */#define	erase_no_style	0						/* None defined									*/#define	erase_tempo_map	1						/* Erase tempo map								*/#define	erase_recd_track	2					/* Erase recording trk							*/#define	erase_held_tracks	3					/* Erase held tracks							*/#define	erase_soloed_tracks	4					/* Erase soled tracks							*/#define	erase_all_tracks	5					/* Erase sequencer								*/