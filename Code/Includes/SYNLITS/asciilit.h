/* Asciilit  $title  synclavier ASCII Code Literals (Differs from -XPL:ASCIILIT) *//* Modified:   05/26/88 - TSS - added PF & FKEY lits   05/25/88 - LSS - added ASC.SCREEN.REFRESH for Macintosh support   05/24/88 - TSS - Renumbered ASC.CALL.CONVERT & ASC.CALL.TERMINATE*//* Define the ASCII character set (and some special VT100 characters) *//* control characters */#define	c_a				0x0001					/* ctrl-a										*/#define	c_b				0x0002					/* ctrl-b										*/#define	c_c				0x0003					/* ctrl-c										*/#define	c_d				0x0004					/* ctrl-d										*/#define	c_e				0x0005					/* ctrl-e										*/#define	c_f				0x0006					/* ctrl-f										*/#define	c_g				0x0007					/* ctrl-g										*/#define	c_h				0x0008					/* ctrl-h										*/#define	c_i				0x0009					/* ctrl-i										*/#define	c_j				0x000A					/* ctrl-j										*/#define	c_k				0x000B					/* ctrl-k										*/#define	c_l				0x000C					/* ctrl-l										*/#define	c_m				0x000D					/* ctrl-m										*/#define	c_n				0x000E					/* ctrl-n										*/#define	c_o				0x000F					/* ctrl-o										*/#define	c_p				0x0010					/* ctrl-p										*/#define	c_q				0x0011					/* ctrl-q										*/#define	c_r				0x0012					/* ctrl-r										*/#define	c_s				0x0013					/* ctrl-s										*/#define	c_t				0x0014					/* ctrl-t										*/#define	c_u				0x0015					/* ctrl-u										*/#define	c_v				0x0016					/* ctrl-v										*/#define	c_w				0x0017					/* ctrl-w										*/#define	c_x				0x0018					/* ctrl-x										*/#define	c_y				0x0019					/* ctrl-y										*/#define	c_z				0x001A					/* ctrl-z										*/#define	a_nul			0x0000					/* null											*/#define	a_null			0x0000					/* null											*/#define	a_soh			0x0001					/* soh											*/#define	a_stx			0x0002					/* stx											*/#define	a_etx			0x0003					/* etx											*/#define	a_eot			0x0004					/* eot											*/#define	a_enq			0x0005					/* enq											*/#define	a_ack			0x0006					/* ack											*/#define	a_bel			0x0007					/* bell											*/#define	a_bs			0x0008					/* backspace									*/#define	a_ht			0x0009					/* tab											*/#define	a_lf			0x000A					/* linefeed										*/#define	a_vt			0x000B					/* vert. tab									*/#define	a_ff			0x000C					/* formfeed										*/#define	a_cr			0x000D					/* return										*/#define	a_so			0x000E					/* so											*/#define	a_si			0x000F					/* si											*/#define	a_dle			0x0010					/* dle											*/#define	a_dc1			0x0011					/* dc1											*/#define	a_xon			0x0011					/* xon											*/#define	a_dc2			0x0012					/* dc2											*/#define	a_dc3			0x0013					/* dc3											*/#define	a_xoff			0x0013					/* xoff											*/#define	a_dc4			0x0014					/* dc4											*/#define	a_nak			0x0015					/* nak											*/#define	a_syn			0x0016					/* syn											*/#define	a_etb			0x0017					/* etb											*/#define	a_can			0x0018					/* can											*/#define	a_em			0x0019					/* em											*/#define	a_sub			0x001A					/* sub											*/#define	a_esc			0x001B					/* escape										*/#define	a_fs			0x001C					/* file separator								*/#define	a_gs			0x001D					/* group separator								*/#define	a_rs			0x001E					/* record separator								*/#define	a_us			0x001F					/* unit separator								*//* punctuation */#define	a_sp			0x0020					/* space										*/#define	a_space			0x0020					/* space										*/#define	a_exclam		0x0021					/*   !											*/#define	a_quote			0x0022					/*   "											*/#define	a_sharp			0x0023					/*   #											*/#define	a_dollar		0x0024					/*   $											*/#define	a_percent		0x0025					/*   %											*/#define	a_and			0x0026					/*   &											*/#define	a_apost			0x0027					/*   '											*/#define	a_lparen		0x0028					/*   (											*/#define	a_rparen		0x0029					/*   )											*/#define	a_star			0x002A					/*   *											*/#define	a_plus			0x002B					/*   +											*/#define	a_comma			0x002C					/*   ,											*/#define	a_minus			0x002D					/*   -											*/#define	a_period		0x002E					/*   .											*/#define	a_slash			0x002F					/*   /											*/#define	a_colon			0x003A					/*   :											*/#define	a_semicolon		0x003B					/*   ;											*/#define	a_less			0x003C					/*   <											*/#define	a_equals		0x003D					/*   =											*/#define	a_greater		0x003E					/*   >											*/#define	a_question		0x003F					/*   ?											*/#define	a_at			0x0040					/*   @											*/#define	a_lbracket		0x005B					/*   [											*/#define	a_backslash		0x005C					/*   \											*/#define	a_rbracket		0x005D					/*   ]											*/#define	a_cflex			0x005E					/*   ^											*/#define	a_score			0x005F					/*   _											*/#define	a_grave			0x0060					/*   `											*/#define	a_lbrace		0x007B					/*   {											*/#define	a_bar			0x007C					/*   |											*/#define	a_rbrace		0x007D					/*   }											*/#define	a_tilde			0x007E					/*   ~											*/#define	a_del			0x007F					/* delete										*/#define	a_delete		0x007F					/* delete										*//* digits */#define	a_0				0x0030					/* 0											*/#define	a_1				0x0031					/* 1											*/#define	a_2				0x0032					/* 2											*/#define	a_3				0x0033					/* 3											*/#define	a_4				0x0034					/* 4											*/#define	a_5				0x0035					/* 5											*/#define	a_6				0x0036					/* 6											*/#define	a_7				0x0037					/* 7											*/#define	a_8				0x0038					/* 8											*/#define	a_9				0x0039					/* 9											*//* uppercase letters */#define	a_a				0x0041					/* A											*/#define	a_b				0x0042					/* B											*/#define	a_c				0x0043					/* C											*/#define	a_d				0x0044					/* D											*/#define	a_e				0x0045					/* E											*/#define	a_f				0x0046					/* F											*/#define	a_g				0x0047					/* G											*/#define	a_h				0x0048					/* H											*/#define	a_i				0x0049					/* I											*/#define	a_j				0x004A					/* J											*/#define	a_k				0x004B					/* K											*/#define	a_l				0x004C					/* L											*/#define	a_m				0x004D					/* M											*/#define	a_n				0x004E					/* N											*/#define	a_o				0x004F					/* O											*/#define	a_p				0x0050					/* P											*/#define	a_q				0x0051					/* Q											*/#define	a_r				0x0052					/* R											*/#define	a_s				0x0053					/* S											*/#define	a_t				0x0054					/* T											*/#define	a_u				0x0055					/* U											*/#define	a_v				0x0056					/* V											*/#define	a_w				0x0057					/* W											*/#define	a_x				0x0058					/* X											*/#define	a_y				0x0059					/* Y											*/#define	a_z				0x005A					/* Z											*//* lowercase letters */#define	l_a				0x0061					/* a											*/#define	l_b				0x0062					/* b											*/#define	l_c				0x0063					/* c											*/#define	l_d				0x0064					/* d											*/#define	l_e				0x0065					/* e											*/#define	l_f				0x0066					/* f											*/#define	l_g				0x0067					/* g											*/#define	l_h				0x0068					/* h											*/#define	l_i				0x0069					/* i											*/#define	l_j				0x006A					/* j											*/#define	l_k				0x006B					/* k											*/#define	l_l				0x006C					/* l											*/#define	l_m				0x006D					/* m											*/#define	l_n				0x006E					/* n											*/#define	l_o				0x006F					/* o											*/#define	l_p				0x0070					/* p											*/#define	l_q				0x0071					/* q											*/#define	l_r				0x0072					/* r											*/#define	l_s				0x0073					/* s											*/#define	l_t				0x0074					/* t											*/#define	l_u				0x0075					/* u											*/#define	l_v				0x0076					/* v											*/#define	l_w				0x0077					/* w											*/#define	l_x				0x0078					/* x											*/#define	l_y				0x0079					/* y											*/#define	l_z				0x007A					/* z											*//* meta characters for VT100 escape sequences */#define	cur_up			0x0081					/* cursor up									*/#define	cur_down		0x0082					/* cursor down									*/#define	cur_right		0x0083					/* cursor right									*/#define	cur_left		0x0084					/* cursor left									*/#define	cur_home		0x0085					/* cursor home									*/#define	pf_1			0x0086					/* pf key 1										*/#define	pf_2			0x0087					/* pf key 2										*/#define	pf_3			0x0088					/* pf key 3										*/#define	pf_4			0x0089					/* pf key 4										*/#define	kp_0			0x008A					/* keypad 0										*/#define	kp_1			0x008B					/* keypad 1										*/#define	kp_2			0x008C					/* keypad 2										*/#define	kp_3			0x008D					/* keypad 3										*/#define	kp_4			0x008E					/* keypad 4										*/#define	kp_5			0x008F					/* keypad 5										*/#define	kp_6			0x0090					/* keypad 8										*/#define	kp_7			0x0091					/* keypad 7										*/#define	kp_8			0x0092					/* keypad 8										*/#define	kp_9			0x0093					/* keypad 9										*/#define	kp_comma		0x0094					/* keypad comma									*/#define	kp_minus		0x0095					/* keypad minus									*/#define	kp_dot			0x0096					/* keypad dot									*/#define	kp_enter		0x0097					/* keypad enter									*/#define	a_refresh		0x0098					/* refresh display								*/#define	l_arr			0x0008 #define	r_arr	0x000C	/* Ascii codes to which arrow keys get mapped	*/#define	u_arr			0x000B #define	d_arr	0x000A#define	home			0x001E					/* home: CTRL-~ (TILDE) on VT100				*/#define	brk				0						/* break key									*/#define	soh				1						/* ctrl-a										*/#define	stx				2						/* ctrl-b										*/#define	etx				3						/* ctrl-c										*/#define	bel				7						/* terminal bell								*/#define	bs				8						/* backspace, same as L.ARR, CTRL-H				*/#define	tab				9						/* tab,       same as        CTRL-I				*/#define	lf				10						/* line feed, same as D.ARR, CTRL-J				*/#define	vt				11						/* vert. tab, same as U.ARR, CTRL-K				*/#define	ff				12						/* right,     same as R.ARR, CTRL-L				*/#define	cret			13						/* return,    same as        CTRL-M				*/#define	dle				16						/* ctrl-p										*/#define	nak				21						/* ctrl-u										*/#define	can				24						/* can											*/#define	sub				26						/* ctrl-z										*/#define	esc				27						/* escape character								*/#define	fs				28						/* file separator								*/#define	gs				29						/* group separator								*/#define	rs				30						/* ctrl-										*/#define	us				31						/* unit separator								*/#define	sp				32						/* space										*/#define	asc_exclam		33#define	dquote			34#define	asc_sharp		35#define	asc_dollr		36#define	percent			37#define	asc_amp			38#define	asc_rparen		40#define	asc_lparen		41#define	asc_star		42#define	asc_plus		43#define	comma			44#define	asc_min			45#define	dot				46#define	slash			47#define	asc_0			48#define	asc_1			49#define	asc_2			50#define	asc_3			51#define	asc_4			52#define	asc_5			53#define	asc_6			54#define	asc_7			55#define	asc_8			56#define	asc_9			57#define	colon			58#define	scolon			59#define	asc_less		60#define	asc_equ			61#define	asc_great		62#define	asc_quest		63#define	asc_at			64#define	asc_a			65#define	asc_b			66#define	asc_c			67#define	asc_d			68#define	asc_e			69#define	asc_f			70#define	asc_g			71#define	asc_h			72#define	asc_i			73#define	asc_j			74#define	asc_k			75#define	asc_l			76#define	asc_m			77#define	asc_n			78#define	asc_o			79#define	asc_p			80#define	asc_q			81#define	asc_r			82#define	asc_s			83#define	asc_t			84#define	asc_u			85#define	asc_v			86#define	asc_w			87#define	asc_x			88#define	asc_y			89#define	asc_z			90#define	asc_lbr			91#define	asc_bsl			92#define	backslash		92#define	asc_rbr			93#define	asc_unl			95#define	asc_grave		96#define	lower_a			97#define	lower_b			98#define	lower_c			99#define	lower_d			100#define	lower_e			101#define	lower_f			102#define	lower_g			103#define	lower_h			104#define	lower_i			105#define	lower_j			106#define	lower_k			107#define	lower_l			108#define	lower_m			109#define	lower_n			110#define	lower_o			111#define	lower_p			112#define	lower_r			114#define	lower_s			115#define	lower_t			116#define	lower_u			117#define	lower_v			118#define	lower_w			119#define	lower_x			120#define	lower_y			121#define	lower_z			122#define	lbrace			123#define	vert_bar		124#define	rbrace			125#define	asc_tilde		126#define	del				127/* special characters returned by get.next.d50.in.char *//* start with "231" octal (152 decimal) since          *//* -Xpl:asciilit uses "230" for A.REFRESH              */#define	asc_call_convert	152					/* 152 - 183: Special function keys				*/#define	asc_pf1			(asc_call_convert +  1)	/* 153 - 156: Pf keys or esc/digit				*/#define	asc_pf2			(asc_call_convert +  2)#define	asc_pf3			(asc_call_convert +  3)#define	asc_pf4			(asc_call_convert +  4)#define	asc_fkey1		(asc_call_convert + 10)	/* 162 - 183: Extra function keys				*/#define	asc_fkey2		(asc_call_convert + 11)#define	asc_fkey3		(asc_call_convert + 12)#define	asc_fkey4		(asc_call_convert + 13)#define	asc_fkey5		(asc_call_convert + 14)#define	asc_fkey6		(asc_call_convert + 15)#define	asc_fkey7		(asc_call_convert + 16)#define	asc_fkey8		(asc_call_convert + 17)#define	asc_fkey9		(asc_call_convert + 18)#define	asc_fkey10		(asc_call_convert + 19)#define	asc_fkey11		(asc_call_convert + 20)#define	asc_fkey12		(asc_call_convert + 21)#define	asc_fkey13		(asc_call_convert + 22)#define	asc_fkey14		(asc_call_convert + 23)#define	asc_fkey15		(asc_call_convert + 24)#define	asc_fkey16		(asc_call_convert + 25)/* room for 6 more special keys here */#define	asc_screen_refresh	(asc_call_convert + 32)	/* Refresh from mac termulator					*/#define	asc_call_terminate	(asc_call_convert + 33)	/* Break key									*/