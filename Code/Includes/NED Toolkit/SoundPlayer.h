/*	NED Toolkit - Sound Play		Copyright © 1992 by New England Digital Corp.  All rights reserved.		This module plays sampled sound using the double-buffered Sound manager interface.	Instantiate this with methods to provide 8-bit stereo sample frames on demand.	The methods provided with this class provide minimal sample rate and precision	conversion.	*/#ifndef NED__PLAYER#define NED__PLAYER#include	<Types.h>#include	<Sound.h>#include	"cplus.h"struct StereoFrame { unsigned char l,r; };	// currently only 8-bit samples supported// Prototypesvoid DBPost (SndDoubleBufferPtr dbp, unsigned frames);SndDoubleBufferPtr newSndDoubleBufferPtr(unsigned size);// memory allocation, buffer management, refill callbacksclass SoundPlayer{public:										// calls to use	SoundPlayer (unsigned buffercount = 32*1024);	~SoundPlayer ();	short		Start (double rate, bool stereo, unsigned samplesize);	// start play	void		Run ();						// play more	short		Stop();						// stop play	bool		Busy();						// return status	protected:									// sample conversion features	virtual unsigned	Read (void *data, unsigned size) = 0;	// method to read sound data	uint8		*rdata;						// read buffer	unsigned	rsize;						// read buffer size	unsigned	fsize;						// input frame size	unsigned	ssize;						// input sample size	uint8		bias;						// input sample bias	virtual unsigned	frames (StereoFrame *frames,unsigned count);	// method to reload buffersprivate:	SndChannel		chan;					// sound channel interface	SndDoubleBufferHeader	bhdr;			// buffer interface	unsigned		bcount;					// frame count for double buffers	SndDoubleBufferPtr	bptr[2];			// buffers	unsigned		b;						// buffer number	bool			active;					// currently playing	short			enable();				// enable playback	short			disable();				// disable playback	void			refill (SndDoubleBufferPtr bptr);};#endif	// NED__PLAYER