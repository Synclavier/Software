/* header file for fractional multiply/divide *//*;**********************************************************************;This is a C routine which will accept a numerator, denominator,;	an array of long ints, and the amount of precision, and whether;	to round or not.;void	fractdiv32(int32 num, int32 denom, int32 * x, int32 precis,;					bool round);;**********************************************************************fractdiv32	PROC*/void	fractdiv32(uint32 num, uint32 denom, 	               uint32 * x, uint32 precision, uint32 roundoff);/*;**********************************************************************;This is a C routine which will accept an address for the;	numerator, denominator, and will return the quotient in the num_lsb;	and the remainder in the num_msb.;void	divide64(int32 * num_msb, int32 * num_lsb,;				int32 denom);;***********************************************************************/void	divide64(uint32 *num_msb, 	             uint32 *num_lsb, uint32 denom);/*;**********************************************************************;This is a C routine which will accept an address for two 32 bit numbers;	and will return a 64 bit integer.;void	multiply64(int32 * num_msb, int32 * num_lsb);;***********************************************************************/void	multiply64(uint32 * num_msb, uint32 * num_lsb);