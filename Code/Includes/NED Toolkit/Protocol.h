/*	NED Toolkit - Protocol Abstract Class Definitions		Copyright © 1990-1991 by New England Digital Corp.  All rights reserved.		This file defines the abstract class that all objects that handle specific	communications protocols are derived from.		Modification History:		07/29/90	KJC	Created this file*/#ifndef NED__PROTOCOL#define NED__PROTOCOL#ifndef NED__CPLUS#include "cplus.h"#endif#ifndef NED__CONDITION#include "Condition.h"#endifclass /*PascalObj*/ Protocol;#include <Events.h>class Protocol /*: public NED_Object*/ {public:	enum Protocol_Type {						// protocols supported		SYNCNET,		SONY,		AMPEX	};		Protocol  (Protocol_Type type);				// protocol comes up disabled	~Protocol (void);		virtual void enable (void);					// enable protocol	virtual void disable (void);				// disable protocol	bool enabled (void) { return enable_flag; }	// TRUE if protocol enabled		// the following functions should be overridden in specific protocol classes		virtual bool connected (void);				// TRUE if connection established	virtual bool get_event (EventRecord *event);	// get events specific to this protocol	virtual bool handle_event (EventRecord *event);	// and handle them	virtual void run (void);					// run background activity without generating events	Condition		connection_change;			// connection state changeprotected:	inline Protocol_Type get_protocol_type (void) { return (type); }	inline void		 set_protocol_type (Protocol_Type new_type) { type = new_type; }private:	Protocol_Type	type;						// type of protocol	bool			enable_flag;				// whether protocol is enabled (initialized to FALSE)};#endif	// NED__PROTOCOL