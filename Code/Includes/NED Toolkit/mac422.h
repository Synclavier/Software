/* NED Toolkit - Mac422 Hardware Definitions   Copyright © 1990 by New England Digital Corporation      By:  Karim J. Chichakly on 5/4/89 (mostly copied from ABLE literals)*/#ifndef NED__MAC422#define NED__MAC422#ifndef NED__C#include "c.h"#endif/* sResource definitions absent from ROMequ.a */#define catCommunication	0x0006			/* official category */#define typRS422		0x0006			/* official type */#define drSwMac422		0x0101			/* official software interface ID */#define drHwMac422		0x0100			/* official hardware interface ID *//* Mac422 hardware interface */#define	MAC422_CMD	0xF0000002		/* mac422 command (write) */#define	MAC422_STAT	0xF0000002		/* mac422 status (read) */#define	MAC422_DATA	0xF0000006		/* mac422 data */#define	MAC422_ROM	0xF0FFFE00		/* mac422 ROM (byte lane 0 in 32-bit mode) */#define MAC422_BOARD_ID	0x0201			/* official board ID *//* communication processor commands (opcodes to write to CP_CMD) */#define	CP_NOP			0x0000		/* no operation */#define	CP_RESET_68K		0x0001		/* set "reset 68K" */#define	CP_RESET_FIFO		0x0002		/* set "reset FIFO" */#define	CP_UNRESET_FIFO	0x0003		/* unset "reset FIFO" */#define	CP_UNRESET_68K		0x0004		/* unset "reset 68K" */#define	CP_DISABLE		0x0005		/* disable all Mac422 interrupts */#define	CP_DECREMENT		0x0006		/* decrement Mac Rx frame counter */#define	CP_INCREMENT		0x0007		/* increment Mac Tx frame counter */#define	CP_DISABLE_RX		0x0008		/* disable Rx interrupts */#define	CP_ENABLE_RX_A		0x0009		/* enable Rx interrupt on A (message present) *//*						0x000A	  	 undefined */#define	CP_LOOP_BACK		0x000B		/* transfer one word from Tx to Rx FIFO (diagnostic) */#define	CP_DISABLE_TX		0x000C		/* disable Tx interrupts */#define	CP_ENABLE_TX_C		0x000D		/* enable Tx interrupt on C (transition to FIFO < half full) */#define	CP_ENABLE_TX_D		0x000E		/* enable Tx interrupt on D (FIFO < half full) */#define	CP_ENABLE_TX_E		0x000F		/* enable Tx interrupt on E (frame counter non-zero) *//* communication processor statuses (bits read from MAC422_CMD) */#define	CP_DATA_PRESENT	0x0001		/* data present in FIFO */#define	CP_PACKET_PRESENT	0x0002		/* packet present in FIFO */#define	CP_RX_INTERRUPT	0x0004		/* receive interrupt */#define	CP_TX_HALF_FULL	0x0008		/* transmit FIFO half full */	#define	CP_TX_FULL		0x0010		/* transmit FIFO full */#define	CP_TX_INTERRUPT	0x0020		/* transmit interrupt *//* interface functions */#ifdef __cplusplusextern "C" {#endifint	find_mac422 (int slot);				/* find Mac422 board */bool select_mac422 (int slot);			/* select Mac422 card */bool	load_mac422 (char *loader, char *main, int slot);	/* load program into Mac422 */uint16	cp_status  (int16 stat);			/* check status */void		cp_command (int16 cmd);			/* send command */uint16	cp_read    (void);				/* read next word */void		cp_write   (uint16 data);		/* write a word */#ifdef __cplusplus}#endif#ifndef __cplusplus	/* C++ cannot handle volatiles *//* interface globals (do not use these - they are here for the macros) */extern volatile uint16 *cp_cmd;			/* command of selected board */extern volatile uint16 *cp_stat;			/* status of selected board */extern volatile uint16 *cp_data;			/* data of selected board */#define cp_status(stat)	(*cp_stat & (stat))	/* read status from communications processor */#define cp_command(cmd)	(*cp_cmd = (cmd))	/* send command to communications processor */#define cp_read()		(*cp_data)		/* read next word from communications processor */#define cp_write(data)	(*cp_data = (data))	/* write word to communications processor */#endif	/* volatiles */#endif			/* NED__MAC422 */