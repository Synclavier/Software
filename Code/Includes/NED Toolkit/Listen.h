/*	NED Toolkit - SYNCnet Listener Class Definitions		Copyright © 1990-1992 by New England Digital Corp.  All rights reserved.		This class defines an event listener, which is called on any of	a set of events.	To use it, construct one with a (this) pointer and a pointer to	a static member callout function that takes one (this) argument.	When enabled events occur, the function is called with the pointer.	It should latch out (dequeue) the pending events and time of occurance.	Remember, any number of ennabled events may occur simultaneously.	The created listener has all events initially disabled.	Call enable with a set to specify the interesting events.	Call enable with an event type and a flag to enable/disable	individual event types.		Modification History:		07/27/90	MAC		Created this file*/#ifndef NED_LISTEN#define NED_LISTEN#ifndef NED__CPLUS#include "cplus.h"#endif#ifndef NED__SET#include "nedset.h"#endif#ifndef NED__HANDLER#include "handler.h"#endifstruct LSN;											// opaque typeclass Listener {	public:	Listener(void *that = (void *) NULL,			 Handler *out = NULL);					// constructor with defaults	~Listener(void);								// destructor	void	enable(SET &e);							// set event mask	void	enable(set_type evt, bool up = TRUE);	// enable(disable) event	void	dequeue(SET &pend, uint32 &when);		// latch out events	bool	dequeue(set_type evt);					// latch out an event	int32	when();									// time of last event since dequeueprivate:	LSN		*lptr;									// pointer to data};#endif	// NED_LISTEN