/*	NED Toolkit - Time Library interface file		Copyright © 1990 by New England Digital Corporation		Created by :	DSY	5/21/89	Modified by :					DSY 11/14/90	Added three fields in the numberIO struct					DSY 9/20/89		Modified the package to use the envrionment's									aesthetics package. The two prototypes changed									(set_time_display() and set_time_title_display())*/#ifndef NED__NUMBERIO#define	NED__NUMBERIO#include <Types.h>#include <TextEdit.h>#ifndef NED__C#include "c.h"#endif#ifndef NED__CONVERT#include "convert.h"#endif#define	TMMR_BASE_MILLISECONDS		1#define	TMMR_BASE_SBITS				2#define	TMMR_BASE_FBITS				3#define	TMMR_BASE_SAMPLE			4#define	TMMR_BASE_SND_FILE			5#define	TMMR_BASE_FIXED_PT			100#define	TMMR_DISPLAY_SECONDS		F_SEC#define	TMMR_DISPLAY_BEATS			F_BEAT#define	TMMR_DISPLAY_MEASURES		F_MEAS#define	TMMR_DISPLAY_SMPTE			F_SMPTE#define	TMMR_DISPLAY_FEET			F_FEET#define	TMMR_DISPLAY_MINUTES		F_MIN#define	TMMR_DISPLAY_FIXED_PT		100#define	TMMR_DISPLAY_DUR			0x80#define	TMMR_DISPLAY_FORMAT			0x7F#define	TMMR_CDEF					256#define TMMR_CDEF_LT_TITLE			257		/* left justified title */#define TMMR_CDEF_CT_TITLE			258		/* center justified title */#define TMMR_CDEF_RT_TITLE			259		/* right justified title */#define	TMMR_IN_JOG_UP				0x11			#define	TMMR_IN_JOG_DOWN			0x12#define	TMMR_IN_TITLE				0x14#define	TMMR_IN_DISPLAY				0x20#define	ERR_CVT_FORMAT				100struct TMMR_time_globals {	int		footage_mode;	int		footage_offset;	int		smpte_mode;	int		smpte_offset;	int		sequence_speed;	int		click_rate;	int		beat_meas;	int		sample_rate;};struct time_ctrl_record {	bool		activated_control;	int8		time_base;	int32		time_value;	int32		undo_time_value;	TEHandle	time_display;	int16		display_format;	int16		title_font;	int16		title_size;	int16		title_face;	RGBColor	text_color;	RGBColor	background_color;	bool		color_active;		/* a flag to let the CDEF know */									/* NOT to set the color */};typedef	struct time_ctrl_record time_ctrl_record;#ifdef __cplusplusextern "C" {#endifvoid			idle_time_ctrl(ControlHandle the_control);void			activate_time_ctrl(ControlHandle the_control);bool			deactivate_time_ctrl(ControlHandle the_control);bool			track_time_ctrl(ControlHandle the_control, Point the_point);bool			key_time_ctrl(ControlHandle the_control, int32 key_char);void			set_time_format(ControlHandle the_control, int mode);void			set_time_display(ControlHandle the_control, int16 style_id );void			set_time_title_display(ControlHandle the_control, int16 style_id);void			set_time_justification(ControlHandle the_control, int justification);void			set_time_value(ControlHandle the_control, int base, int32 time);		/* return an error if incompatible bases */int32			get_time_value(ControlHandle the_control, int base, int32 *time);		/* return an error if incompatible bases */void			set_trim_values (int32 coarse_trim_value, int32 fine_trim_value);void			get_trim_values (int32 *coarse_trim_value, int32 *fine_trim_value);void			undo_time_edit(ControlHandle the_control);void			set_time_cvt_globals( int footage_mode, int footage_offset, int smpte_mode,					int smpte_offset, int sequence_speed, int click_rate, int beat_meas, int sample_rate);void 			set_text_color (ControlHandle the_control, RGBColor text_color, RGBColor back_color);#ifdef __cplusplus}#endif#endif	/* NED__NUMBERIO */