/* 00-xsubs - subroutines for internal/external memory */dcl mam  lit '"60"';     /* memory address msb */dcl mal  lit '"61"';     /* memory address lsb */dcl md   lit '"62"';     /* memory data */dcl mdi  lit '"63"';     /* memory data with increment *//* NOTE - THESE ROUTINES ARE QUITE DIFFERENT IN CHARACTER THAN THOSE          OF THE SAME NAME IN THE SYNCLAVIER REAL TIME PROGRAM */N.LOOKUP:PROC(PTR);       /* LOOK UP SINGLE WORD FROM NOTE AREA */   DCL PTR FIXED;   IF SYN.MED=0 THEN RETURN CORE(SEQ.PTR+PTR);    /* INTERNAL MEMORY */   IF SYN.MED=2 THEN DO;                          /* 32 TRACK        */      WRITE(MAM)=NAH.PTR+SHR(PTR,8); WRITE(MAL)=PTR;       RETURN READ(MD);   END;   WRITE(MAM)=SEQ.PTR+SHR(PTR,8); WRITE(MAL)=PTR; /* EXTERNAL MEMORY */   RETURN READ(MD);END N.LOOKUP;P.LOOKUP:PROC(PTR);       /* LOOK UP SINGLE WORD FROM TIMBRE AREA */   DCL PTR FIXED;         /* MUST USE ** NO INCREMENT ** THEN RETURN */   IF SYN.MED=0 THEN RETURN CORE(PRM.PTR+PTR);    /* INTERNAL MEMORY */   IF SYN.MED=2 THEN DO;                          /* 32 TRACK        */      WRITE(MAM)=PAR.PTR+SHR(PTR,8); WRITE(MAL)=PTR;       RETURN READ(MD);   END;   WRITE(MAM)=PRM.PTR+SHR(PTR,8); WRITE(MAL)=PTR; /* EXTERNAL MEMORY */   RETURN READ(MD);END P.LOOKUP;I.LOOKUP:PROC(PTR);       /* LOOK UP SINGLE WORD FROM inf.ptr area */   DCL PTR FIXED;   PTR = pre.ptr + PTR;   WRITE(MAM)=inf.ptr+SHR(PTR,8); WRITE(MAL)=PTR;    RETURN READ(MD);END i.lookup;