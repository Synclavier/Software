/* $TITLE Package of String Handling Routines *//* Copyright 1983 by New England Digital Corporation */#Getline: proc (Line,Max.Len,Stop.Char); /* Puts a one line input into LINE */   dcl Line fixed array; /* Buffer to hold typed line */   dcl Max.Len    fixed; /* Max length in chars of line to get */   dcl Stop.Char  fixed; /* Character to use as line terminator */   dcl Buf(64)    fixed; /* A line buffer */   dcl Char       fixed; /* A one character buffer */   dcl Bufsize    lit '128'; /* Max chars in line buffer */   Char   = -1;   Buf(0) = 0; /* Initialize */   do while ((Char < A.SP) & (Char <> Stop.Char)); Char = RCHAR; end; /* Ignore control chars */   do while (Char <> Stop.Char);      if (Char <> A.DEL) then do;         if Buf(0) < Bufsize then do; /* Put char into line buffer */            WCHAR(Char); /* Echo typed character */            call PBYTE(Buf,Buf(0),Char);            Buf(0) = Buf(0) + 1;         end;      end;      else if Buf(0) > 0 then do; /* Get rid of char */         WCHAR(A.BS); WCHAR(A.SP); WCHAR(A.BS);         Buf(0) = Buf(0) - 1; /* Delete char from buffer */      end;      Char = RCHAR;      do while ((Char < A.SP) & (Char <> Stop.Char)); Char = RCHAR; end; /* Ignore control chars */   end;   Line(0) = 0;   do while ((Line(0) < Buf(0)) & (Line(0) < Max.Len)); /* Copy chars into LINE */      call PBYTE(Line,Line(0),BYTE(Buf,Line(0)));      Line(0) = Line(0) + 1;   end;end #Getline;dcl GET.LINE lit 'call #GETLINE';Strip.Leading.Blanks: proc(String); /* Removes all spaces at head of string */   dcl String fixed array;   dcl (I,J)  fixed;   if String(0) > 0 then do;      J = 0;      do while (BYTE(String,J) = A.SP); /* Count number of leading blanks */         J = J + 1;      end;      do I = 0 to (String(0) - J) - 1;         call PBYTE(String,I,BYTE(String,I + J));      end;      String(0) = String(0) - J;   end;end Strip.Leading.Blanks;dcl STRIP_LEADING_BLANKS lit 'call STRIP.LEADING.BLANKS';Strip.First.Char: proc (String); /* Removes first character on a string */   dcl String fixed array;   dcl I      fixed;   if String(0) > 0 then do;      do I = 0 to String(0) - 2;         call PBYTE(String,I,BYTE(String,I+1));      end;      String(0) = String(0) - 1;   end;end Strip.First.Char;dcl STRIP_FIRST_CHAR lit 'call STRIP.FIRST.CHAR';/* $PAGE */First_Char: proc (String) fixed; /* Return 1st char of a string or -1 if string empty */   dcl String fixed array;   dcl Char   fixed;   if String(0) > 0 then Char = BYTE(String,0);   else Char = -1;   return Char;end First_Char;Ucase: proc (Char) fixed; /* Returns uppercase value of character received */   dcl Char fixed;   if (Char >= L.A) and (Char <= L.Z) then Char = Char - "40";   return Char;end Ucase;Compare: proc(String1,String2,Case.Chk) fixed; /* Returns 1 if 2 strings are same, 0 if not */   dcl String1  fixed array;   dcl String2  fixed array;   dcl Case.Chk fixed; /* 1 if uppercase and lowercase are different, 0 otherwise */   dcl Same     fixed;   dcl I        fixed;   Same = 1;   if String1(0) <> String2(0) then Same = 0;   else do I = 0 to String1(0) - 1;      if Case.Chk then do;         if BYTE(String1,I) <> BYTE(String2,I) then Same = 0;      end;      else if UCASE(BYTE(String1,I)) <> UCASE(BYTE(String2,I)) then Same = 0;   end;   return Same;end Compare;