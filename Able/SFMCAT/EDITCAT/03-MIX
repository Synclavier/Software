/* $TITLE Routine to Perform Mixing of Sound Files *//* Copyright 1985 New England Digital Corporation */Mix.Sounds: proc (MS.Start.Sector,LS.Start.Sector,Sec.Len,FCB.Array,Num.Files,OutBuf,InBuf,Buf.Secs); /* Performs a butt splice on a bunch of files */   dcl MS.Start.Sector fixed; /* Starting sector of mix output file */   dcl LS.Start.Sector fixed;   dcl Sec.Len         fixed; /* Sector length of new file */   dcl FCB.Array       fixed array; /* The FCBs for the files to be spliced */   dcl Num.Files       fixed; /* Number of FCBs in FCB.ARRAY */   dcl Buf.Secs        fixed;   dcl OutBuf          fixed array; /* Sound file output buffer */   dcl InBuf           fixed array; /* Sound file input  buffer */   dcl MS.Write.Start fixed; /* (GLOBAL) Sector to write next block of data to in splice */   dcl LS.Write.Start fixed;   dcl File.Num       fixed; /* Index of file currently being mixed */   dcl Blk (f#len-1)  fixed; /* Temp array to hold an FCB during processing */   dcl Secs.Left      fixed; /* Full sectors left to be buffered */   dcl Words.Left     fixed; /* Words left in sound file to be buffered */   dcl MS.Read.Start  fixed; /* Sector on winchester to begin reading from */   dcl LS.Read.Start  fixed;   dcl Read.Len       fixed; /* Number of words to read from disk into BUF */   dcl (i,j)          fixed;   POS(Y.Base,Status.Pos); ERASE_LINE; PSTRING('Initializing output file...');   do i=0 to shl(Buf.Secs,8)-1; OutBuf(i)=0; end; /* zero output buffer */   MS.Write.Start = MS.Start.Sector; /* Skip over file description area for now */   LS.Write.Start = LS.Start.Sector + File.Desc.Secs;   if LS.Write.Start ILT File.Desc.Secs then MS.Write.Start = MS.Write.Start + 1;   Secs.Left = Sec.Len - File.Desc.Secs;   do while (Secs.Left IGT 0); /* zero output file */      if Secs.Left IGE Buf.Secs then Read.Len=Buf.Secs;      else                           Read.Len=Secs.Left;      Secs.Left=Secs.Left-Read.Len;      if (MS.Write.Start <> 0) or (LS.Write.Start <> 0)       then call WRITEDATA(MS.Write.Start,LS.Write.Start,OutBuf,shl(Read.Len,8));      LS.Write.Start = LS.Write.Start+Read.Len;      if LS.Write.Start ILT Read.Len then MS.Write.Start=MS.Write.Start+1;   end; /* of zero output file */   do File.Num = 0 to Num.Files-1; /* loop over files to mix */      do I=0 to f#len-1; Blk(i)=FCB.Array(File.Num*f#len+i); end; /* Copy FCB into temp array */      Secs.Left   = Blk(f#ll);      Words.Left  = Blk(f#wd);      MS.Read.Start = Blk(f#ms);      LS.Read.Start = Blk(f#ls) + File.Desc.Secs; /* Start reading data after descriptor area */      if LS.Read.Start ILT File.Desc.Secs then MS.Read.Start=MS.Read.Start+1;      MS.Write.Start = MS.Start.Sector;      LS.Write.Start = LS.Start.Sector + File.Desc.Secs; /* Skip over file description area for now */      if LS.Write.Start ILT File.Desc.Secs then MS.Write.Start=MS.Write.Start+1;      do while ((Secs.Left IGT 0) or (Words.Left IGT 0));         POS(Y.Base + File.Num,Status.Pos); ERASE_LINE;         i=LS.Read.Start-Blk(f#ls)-File.Desc.Secs+1;         PSTRING('Mixing sector '); UNUM(I,0); PSTRING('...');         if Secs.Left IGE Buf.Secs then do;            Read.Len=shl(Buf.Secs,8); Secs.Left=Secs.Left-Buf.Secs;         end;         else if Secs.Left IGT 0 then do;            Read.Len=shl(Secs.Left,8); Secs.Left=0;         end;         else if Words.Left IGT 0 then do;            Read.Len=Words.Left; Words.Left=0;         end;         if LS.Read.Start+c#ls_sector ILT LS.Read.Start then i=1; else i=0;         call READDATA(MS.Read.Start+c#ms_sector+i,LS.Read.Start+c#ls_sector,InBuf,Read.Len); /* Buffer a block of data */         if Read.Len ILT 256 then do;            do i=Read.Len to 255; Inbuf(I)=0; end;            Read.Len=256;         end;         if File.Num<>0         then call READDATA(MS.Write.Start,LS.Write.Start,OutBuf,Read.Len);         if File.Num=0 then do i=0 to Read.Len-1; /* first file to mix */            OutBuf(i)=Blk(f#ty)*InBuf(i)/1000;            if (read(4) IGT 500)            or ((read(4)=500)&(OutBuf(i)>0)) then OutBuf(i)=OutBuf(i)+1;         end;         else do i=0 to Read.Len-1; /* subsequent files */            j=Blk(f#ty)*InBuf(i)/1000;            OutBuf(i)=OutBuf(i)+J;            if (read(4) IGT 500)            or ((read(4)=500)&(j>0)) then OutBuf(i)=OutBuf(i)+1;         end;         if ((MS.Write.Start<>0) or (LS.Write.Start<>0))         then call WRITEDATA(MS.Write.Start,LS.Write.Start,OutBuf,Read.Len);         LS.Read.Start = LS.Read.Start +shr(Read.Len,8);         if LS.Read.Start ILT shr(Read.Len,8) then MS.Read.Start=MS.Read.Start+1;         LS.Write.Start= LS.Write.Start+shr(Read.Len,8);         if LS.Write.Start ILT shr(Read.Len,8) then MS.Write.Start=MS.Write.Start+1;      end; /* of DO WHILE ((SECS.LEFT IGT 0) OR (WORDS.LEFT IGT 0)) */      POS(Y.Base + File.Num,Status.Pos); ERASE_LINE;      i=Blk(f#ll); if Blk(f#wd) IGT 0 then i=i+1;      PSTRING('Mixed '); UNUM(i,0); PSTRING(' sectors.');   end; /* of loop over files to mix */end Mix.Sounds;