/* Copyright 1985 by New England Digital Corporation *//* Double precision integer radix 4 real-to-complex FFT;table lookup sines and cosines        limited to n<=4 * sintab.len An adaptation of program FAST in "Programs for Digital Signal Processing"IEEE Press.should be used for n not greater than 16384, or indexing may blow up.*/dcl rescale fixed; /* counts divides by 2 necessary to keep integers in range *//* Literals for in-line double precision integer arithmetic *//* dcl literal for output=input/2 */dcl half1 lit 'olsb=shr(olsb,1);';dcl half2 lit 'if omsb then olsb=olsb\"100000";';                      dcl half3 lit 'omsb=shr(omsb,1)\(omsb&"100000");';dcl half lit 'half1;half2;half3;';                                       /* literal to add; output must not be input1 */dcl add1  lit 'olsb=ilsb1+ilsb2;';dcl add2  lit 'omsb=imsb1+imsb2;';dcl add3  lit 'if olsb ilt ilsb1 then omsb=omsb+1;';dcl add   lit 'add1;add2;add3;';/* literal to subtract */dcl sub1  lit 'omsb=imsb1-imsb2;';dcl sub2  lit 'if ilsb2 igt ilsb1 then omsb=omsb-1;';dcl sub3  lit 'olsb=ilsb1-ilsb2;';dcl subtract lit 'sub1;sub2;sub3;';/* multiply output=w*input1 + iw*input2 */dcl mul1 lit 'write(5)=w;write(6)=imsb1;';dcl mul2 lit 'omsb=read(4);olsb=read(5);';dcl mul3 lit 'write(5)=ilsb1;write(6)=w;';dcl mul4 lit 'olsb=olsb+read(4);if olsb ilt read(4) then omsb=omsb+1;';dcl mul5 lit 'if imsb1<0 then omsb=omsb-w;';dcl mul6 lit 'if w<0 then do;omsb=omsb-imsb1;';dcl mul7 lit 'if ilsb1 igt olsb then omsb=omsb-1;olsb=olsb-ilsb1;end;';dcl mul8 lit 'write(5)=iw;write(6)=imsb2;';dcl mul9 lit 'omsb=omsb+read(4);olsb=olsb+read(5);';dcl mul10 lit 'if olsb ilt read(5) then omsb=omsb+1;';dcl mul11 lit 'write(5)=iw;write(6)=ilsb2;olsb=olsb+read(4);';dcl mul12 lit 'if olsb ilt read(4) then omsb=omsb+1;';dcl mul13 lit 'if imsb2<0 then omsb=omsb-iw;if iw<0 then do;';dcl mul14 lit 'omsb=omsb-imsb2;if ilsb2 igt olsb then omsb=omsb-1;';dcl mul15 lit 'olsb=olsb-ilsb2;end;';dcl mul16 lit 'mul1;mul2;mul3;mul4;mul5;mul6;mul7;';dcl mul17 lit 'mul8;mul9;mul10;mul11;mul12;mul13;mul14;mul15;';dcl multiply lit 'mul16;mul17;';compute.m:proc(n) fixed;  /* computes log (base 2) of n for 2<=n<=2**15; returns 0 of n not power of 2 */    dcl n fixed;    dcl (nt,i) fixed;      nt=1;       /* intialize */    do i=1 to 15; /* test for n a power of 2 */      nt=shl(nt,1);      if n=nt then return i;    end;      return 0;             /* error return for n not power of 2 */end compute.m;  shift:proc(rmsb,rlsb,n,count) fixed swap; /* shifts 32 bit word; if count pos, shift left, else shift right  */  dcl rmsb fixed array;  dcl rlsb fixed array;  dcl n fixed;  dcl count fixed;  dcl mask fixed;  dcl k fixed;  dcl test fixed;  dcl error fixed;  if count=0 then return 0; /* nothing to do */                  if abs(count)>31 then do;return 1;end; /* overflow */  error=0;  rescale=rescale-count;  if (count > 0)&(count<16) then do;    mask=shl(1,count)-1;    do k=0 to n-1; /* count up  */       rmsb(k)=rot(rmsb(k),count);       test=rmsb(k)&mask;       /* NEW */       if rmsb(k)<0 then do;if test^=mask then error=1;end;       else if test^=0 then error=1;/*       if (test^=mask)&(test^=0) then do;error=1;end; */ /* overflow */       rlsb(k)=rot(rlsb(k),count);       rmsb(k)=(rmsb(k)&(-1-mask))+(rlsb(k)&mask);       rlsb(k)=rlsb(k)&(-1-mask);    end;  end;     else if count>15 then do k=0 to n-1;    if (rmsb(k)^=0)&(rmsb(k)^=-1) then do;error=1;end; /* overflow */    rmsb(k)=shl(rlsb(k),count-16);    rlsb(k)=0;  end;  else if (count<0)&(count>-16) then do;    mask=-shl(1,16+count);    do k=0 to n-1;      rlsb(k)=shr(rlsb(k),-count)+shl(rmsb(k),16+count);      if rmsb(k)<0 then rmsb(k)=shr(rmsb(k),-count)\mask;      else rmsb(k)=shr(rmsb(k),-count);    end;  end;  else if count<=-16 then do;     mask=-shl(1,32+count);      do k=0 to n-1;       if rmsb(k)<0 then do;          rlsb(k)=shr(rmsb(k),-16-count)\mask;          rmsb(k)=-1;       end;       else do;         rlsb(k)=shr(rmsb(k),-16-count);         rmsb(k)=0;       end;       end;  end;  return error;end shift;scale:proc(b,n) fixed;   /* returns maximum bit in maximum absolute value of array */    dcl b fixed array;    dcl n fixed;    dcl (i,j,max) fixed;    max=0;i=0;b(i)=b(i);    do i=0 to n-1;      if abs(b(i)) igt max then max=abs(b(i));    end;    if max=0 then return 0;    if max=32768 then max=32767;    j=1;    do i=1 to 15;      j=j*2;      if j igt max then return i;    end;   end scale;normalize1:proc(amsb,alsb,n,bit) fixed;   dcl amsb fixed array;   dcl alsb fixed array;   dcl n fixed;   dcl bit fixed;    dcl i fixed;   dcl factor fixed;   factor=scale(amsb,n);   if shift(amsb,alsb,n,bit-factor) then return 1; /* overflow */   else return 0;end normalize1;                    ifr2tr:proc(intv,bmsb,blsb);                 /* radix 2 fft iteration */    dcl intv fixed;                   dcl bmsb fixed array;    dcl blsb fixed array;    dcl (k,k1) fixed;    dcl (tmsb,tlsb) fixed;    rescale=rescale+1; /* input will be divided */    k=0;k1=0;bmsb(k)=bmsb(k1);blsb(k)=blsb(k1);        do k=0 to intv-1;      k1=k+intv;                 /* divide b(k),b(k1) input by two */      blsb(k)=shr(blsb(k),1);                               if bmsb(k) then blsb(k)=blsb(k)\"100000";      bmsb(k)=shr(bmsb(k),1)\(bmsb(k)&"100000");      blsb(k1)=shr(blsb(k1),1);      if bmsb(k1) then blsb(k1)=blsb(k1)\"100000";      bmsb(k1)=shr(bmsb(k1),1)\(bmsb(k1)&"100000");             tmsb=bmsb(k)+bmsb(k1);                    /* t=b(k) + b(k1) */         tlsb=blsb(k)+blsb(k1);       if tlsb ilt blsb(k) then tmsb=tmsb+1;      bmsb(k1)=bmsb(k)-bmsb(k1);              /* b(k1)=b(k)- b(k1) */           if blsb(k1) igt blsb(k) then bmsb(k1)=bmsb(k1)-1;      blsb(k1)=blsb(k)-blsb(k1);      bmsb(k)=tmsb;           /* b(k)=t */      blsb(k)=tlsb;    end;      return;end ifr2tr;  /* Procedures FORD1 and FORD2, In-place reordering */iford1:proc(m,b);  dcl m fixed;  dcl b fixed array;     dcl (k,kl,n,j) fixed;  dcl t fixed;    k=3;  kl=1;  n=shl(1,m);    /* 2 ** m */  j=3;b(k)=b(j);  do j=3 to n-1 by 2;    if (k-j)>0 then do;      t=b(j);      b(j)=b(k);      b(k)=t;    end;      k=k-2;    if (k-kl)<=0 then do;      k=2*j+1;      kl=j;    end;    end;    return;end iford1;  iford2:proc(m,b) swap;   dcl m fixed;  dcl b fixed array;  dcl (n,k,j1,j2,j3,j4,j5,j6,j7,j8,j9,j10,j11,j12,j13,j14,ji,ij) fixed;  dcl t fixed;  dcl m.max lit '15';  dcl l(m.max) fixed;  dcl l0 lit 'l(m.max-0)';  dcl l1 lit 'l(m.max-1)';  dcl l2 lit 'l(m.max-2)';  dcl l3 lit 'l(m.max-3)';  dcl l4 lit 'l(m.max-4)';  dcl l5 lit 'l(m.max-5)';  dcl l6 lit 'l(m.max-6)';  dcl l7 lit 'l(m.max-7)';  dcl l8 lit 'l(m.max-8)';  dcl l9 lit 'l(m.max-9)';  dcl l10 lit 'l(m.max-10)';  dcl l11 lit 'l(m.max-11)';  dcl l12 lit 'l(m.max-12)';  dcl l13 lit 'l(m.max-13)';  dcl l14 lit 'l(m.max-14)';  dcl l15 lit 'l(m.max-15)';  n=shl(1,m); /* 2**m */  l(0)=n;  do k=1 to m-1;    l(k)=shr(l(k-1),1);  end;    do k=m-1 to 14;    l(k+1)=2;  end;    ij=1; /* one less than fortran version */  do j1=2 to l1 by 2;    do j2=j1 to l2 by l1;      do j3=j2 to l3 by l2;        do j4=j3 to l4 by l3;          do j5=j4 to l5 by l4;            do j6=j5 to l6 by l5;              do j7=j6 to l7 by l6;                do j8=j7 to l8 by l7;                  do j9=j8 to l9 by l8;                    do j10=j9 to l10 by l9;                      do j11=j10 to l11 by l10;                        do j12=j11 to l12 by l11;                          do j13=j12 to l13 by l12;                            do j14=j13 to l14 by l13;                              do ji=j14-1 to l15-1 by l14;                                if (ij-ji)<0 then do;                                  t=b(ij-1);                                  b(ij-1)=b(ji-1);                                   b(ji-1)=t;                                  t=b(ij);                                  b(ij)=b(ji);                                  b(ji)=t;                                end;                                  ij=ij+2;                                end;                              end;                            end;                          end;                        end;                      end;                    end;                  end;                end;              end;            end;          end;        end;      end;    end;    return;end iford2;ifast:proc(bmsb,blsb,n) fixed swap;       /* fast=1 is an error return */  dcl bmsb fixed array;  dcl blsb fixed array;  dcl n fixed;               /* n must be a power of 2 */  /* constant declarations */  dcl m.max lit '15';        /* max power of two */  dcl p7 lit '23170';                /* int(32768.*0.70710678) */           /* variable declarations */  dcl (i,m,nr,n4pow,n2pow,nn,intv,it) fixed;  dcl (tmsb,tlsb) fixed;  fr4tr:  proc;    dcl (j,k,ji,jl,jr,j1,j2,j3,j4,j5,j6,j7,j8,j9,j10,j11,j12,j13,j14,jthet) fixed;    dcl (k1,k2,k3) fixed;    dcl (k0,kl,jlast,intv4,j0) fixed;    dcl (th2) fixed;    dcl (t0msb,t0lsb) fixed;    dcl (t1msb,t1lsb) fixed;    dcl (t2msb,t2lsb) fixed;    dcl (t3msb,t3lsb) fixed;    dcl (t4msb,t4lsb) fixed;    dcl (t5msb,t5lsb) fixed;    dcl (t6msb,t6lsb) fixed;    dcl (t7msb,t7lsb) fixed;    dcl (r1msb,r1lsb) fixed;    dcl (r5msb,r5lsb) fixed;    dcl (prmsb,prlsb) fixed;    dcl (pimsb,pilsb) fixed;    dcl (c1,s1,c2,s2,c3,s3) fixed;    dcl k4 lit 'k';    dcl k5 lit 'k1';    dcl k6 lit 'k2';    dcl k7 lit 'k3';    dcl (jj1,jj2,jj3) fixed;    dcl l(15) fixed;    dcl l0 lit 'l(m.max-0)';    dcl l1 lit 'l(m.max-1)';    dcl l2 lit 'l(m.max-2)';    dcl l3 lit 'l(m.max-3)';    dcl l4 lit 'l(m.max-4)';    dcl l5 lit 'l(m.max-5)';    dcl l6 lit 'l(m.max-6)';    dcl l7 lit 'l(m.max-7)';    dcl l8 lit 'l(m.max-8)';    dcl l9 lit 'l(m.max-9)';    dcl l10 lit 'l(m.max-10)';    dcl l11 lit 'l(m.max-11)';    dcl l12 lit 'l(m.max-12)';    dcl l13 lit 'l(m.max-13)';    dcl l14 lit 'l(m.max-14)';    dcl l15 lit 'l(m.max-15)';    /* jthet is a reversed binary counter, jr steps two at a time    to locate th real parts of intermediate results, and ji locates    the imaginary part corresponding to jr. */                 rescale=rescale+2; /* each entry divides array by 2 */    l(0)= nn/4;   /* our counter is indexed from location zero */    do k=1 to m.max-1;      if l(k-1)-2 < 0 then do;        l(k-1)=2;        l(k)=2;      end;        else do;        l(k)=2;        if l(k-1)-2 > 0 then l(k)=shr(l(k-1),1);      end;      end;    ji=3;     jl=2;    jr=2;    do j1=2 to l1 by 2;      do j2=j1 to l2 by l1;        do j3=j2 to l3 by l2;           do j4=j3 to l4 by l3;            do j5=j4 to l5 by l4;              do j6=j5 to l6 by l5;                do j7=j6 to l7 by l6;                  do j8=j7 to l8 by l7;                    do j9=j8 to l9 by l8;                      do j10=j9 to l10 by l9;                        do j11=j10 to l11 by l10;                          do j12=j11 to l12 by l11;                            do j13=j12 to l13 by l12;                              do j14=j13 to l14 by l13;                                do jthet=j14 to l15 by l14;      /* -1 1since B is based on zero */                                             if jthet>2 then do;                                     /* th2=(jthet-2)*2*sintable.len/nn; */                                    write(5)=jthet-2;                                    write(6)=32768;                                    th2=read(5);                                    write(7)=nn;                                    th2=read(5);                                    call angle(th2);                                    c1=cosine;s1=sine;                                    call angle(shl(th2,1));                                    c2=cosine;s2=sine;                                    write(5)=th2;                                    write(6)=3;                                    th2=read(5);                                    call angle(th2);                                    c3=cosine;s3=sine;                                    intv4=intv*4;                                    j0=jr*intv4; /* -1 from FORTRAN */                                    k0=ji*intv4; /* -1 from FORTRAN */                                    jlast=j0+intv-1;                                    do j=j0 to jlast;                                      k=k0+j-j0;                                      k5=k+intv;                                      k6=k5+intv;                                      k7=k6+intv;                                      jj1=j+intv;                                      jj2=jj1+intv;                                      jj3=jj2+intv;                                                                          begin; /* r1=b(jj1)*c1 - b(k5)*s1 */                                         dcl omsb lit 'r1msb';                                         dcl olsb lit 'r1lsb';                                         dcl w    lit 'c1';                                         dcl iw   lit '(-s1)';                                         dcl ilsb1 lit 'blsb(jj1)';                                         dcl imsb1 lit 'bmsb(jj1)';                                         dcl ilsb2 lit 'blsb(k5)';                                         dcl imsb2 lit 'bmsb(k5)';                                         multiply;                                      end;                                      begin;    /* r5=b(jj1)%s1 + b(k5)%c1 */                                         dcl w     lit 's1';                                         dcl iw    lit 'c1';                                         dcl omsb lit 'r5msb';                                         dcl olsb lit 'r5lsb';                                         dcl imsb1 lit 'bmsb(jj1)';                                         dcl ilsb1 lit 'blsb(jj1)';                                         dcl imsb2 lit 'bmsb(k5)';                                             dcl ilsb2 lit 'blsb(k5)';                                         multiply;                                      end;                                      begin; /*  t2=b(jj2)%c2 - b(k6)%s2 */                                         dcl w    lit 'c2';                                         dcl iw   lit '(-s2)';                                         dcl omsb lit 't2msb';                                         dcl olsb lit 't2lsb';                                         dcl imsb1 lit 'bmsb(jj2)';                                         dcl ilsb1 lit 'blsb(jj2)';                                         dcl imsb2 lit 'bmsb(k6)';                                         dcl ilsb2 lit 'blsb(k6)';                                         multiply;                                      end;                                             begin;  /*  t6=b(jj2)%s2 + b(k6)%c2  */                                         dcl w   lit 's2';                                         dcl iw  lit 'c2';                                         dcl omsb lit 't6msb';                                         dcl olsb lit 't6lsb';                                         dcl imsb1 lit 'bmsb(jj2)';                                         dcl ilsb1 lit 'blsb(jj2)';                                         dcl imsb2 lit 'bmsb(k6)';                                         dcl ilsb2 lit 'blsb(k6)';                                         multiply;                                      end;                                      begin;  /* t3=b(jj3)%c3 - b(k7)%s3 */                                         dcl w    lit 'c3';                                         dcl iw   lit '(-s3)';                                         dcl omsb lit 't3msb';                                         dcl olsb lit 't3lsb';                                         dcl imsb1 lit 'bmsb(jj3)';                                         dcl ilsb1 lit 'blsb(jj3)';                                         dcl imsb2 lit 'bmsb(k7)';                                         dcl ilsb2 lit 'blsb(k7)';                                         multiply;                                      end;                                      begin; /* t7=b(jj3)%s3 + b(k7)%c3  */                                         dcl w    lit 's3';                                         dcl iw   lit 'c3';                                         dcl omsb lit 't7msb';                                         dcl olsb lit 't7lsb';                                         dcl imsb1 lit 'bmsb(jj3)';                                         dcl ilsb1 lit 'blsb(jj3)';                                         dcl imsb2 lit 'bmsb(k7)';                                         dcl ilsb2 lit 'blsb(k7)';                                         multiply;                                      end;                                      begin;   /* b(j)=b(j)/2;  */                                         dcl omsb lit 'bmsb(j)';                                         dcl olsb lit 'blsb(j)';                                         half;                                      end;                                      begin; /* b(k4)=b(k4)/2 */                                         dcl omsb lit 'bmsb(k4)';                                         dcl olsb lit 'blsb(k4)';                                         half;                                      end;                                      begin; /* t0=b(j) + t2; */                                         dcl omsb lit 't0msb';                                         dcl olsb lit 't0lsb';                                         dcl imsb1 lit 'bmsb(j)';                                         dcl ilsb1 lit 'blsb(j)';                                         dcl imsb2 lit 't2msb';                                         dcl ilsb2 lit 't2lsb';                                         add;                                         half;                                      end;                                      begin;   /* t4=b(k4)+ t6  */                                         dcl omsb lit 't4msb';                                         dcl olsb lit 't4lsb';                                         dcl imsb1 lit 'bmsb(k4)';                                         dcl ilsb1 lit 'blsb(k4)';                                         dcl imsb2 lit 't6msb';                                         dcl ilsb2 lit 't6lsb';                                         add;                                         half;                                      end;                                      begin;  /* t2=b(j) -t2 */                                         dcl omsb lit 't2msb';                                         dcl olsb lit 't2lsb';                                         dcl imsb1 lit 'bmsb(j)';                                         dcl ilsb1 lit 'blsb(j)';                                         dcl imsb2 lit 't2msb';                                         dcl ilsb2 lit 't2lsb';                                         subtract;                                         half;                                      end;                                      begin;  /* t6=b(k4) - t6 */                                          dcl omsb lit 't6msb';                                         dcl olsb lit 't6lsb';                                         dcl imsb1 lit 'bmsb(k4)';                                         dcl ilsb1 lit 'blsb(k4)';                                         dcl imsb2 lit 't6msb';                                         dcl ilsb2 lit 't6lsb';                                         subtract;                                         half;                                      end;                                      begin;  /* t1=(r1 + t3) */                                         dcl omsb lit 't1msb';                                         dcl olsb lit 't1lsb';                                         dcl imsb1 lit 'r1msb';                                         dcl ilsb1 lit 'r1lsb';                                         dcl imsb2 lit 't3msb';                                         dcl ilsb2 lit 't3lsb';                                         add;                                         half;                                      end;                                      begin;  /* t5=(r5 + t7) */                                         dcl omsb lit 't5msb';                                         dcl olsb lit 't5lsb';                                         dcl imsb1 lit 'r5msb';                                         dcl ilsb1 lit 'r5lsb';                                         dcl imsb2 lit 't7msb';                                         dcl ilsb2 lit 't7lsb';                                         add;                                         half;                                      end;                                      begin;  /* t3=(r1 - t3)  */                                           dcl omsb lit 't3msb';                                         dcl olsb lit 't3lsb';                                         dcl imsb1 lit 'r1msb';                                         dcl ilsb1 lit 'r1lsb';                                         dcl imsb2 lit 't3msb';                                         dcl ilsb2 lit 't3lsb';                                         subtract;                                         half;                                      end;                                      begin;  /* t7=(r5 - t7) */                                         dcl omsb lit 't7msb';                                         dcl olsb lit 't7lsb';                                         dcl imsb1 lit 'r5msb';                                         dcl ilsb1 lit 'r5lsb';                                         dcl imsb2 lit 't7msb';                                         dcl ilsb2 lit 't7lsb';                                         subtract;                                         half;                                      end;                                      begin; /* b(j)=t0 + t1 */                                         dcl omsb lit 'bmsb(j)';                                          dcl olsb lit 'blsb(j)';                                         dcl imsb1 lit 't0msb';                                         dcl ilsb1 lit 't0lsb';                                         dcl imsb2 lit 't1msb';                                         dcl ilsb2 lit 't1lsb';                                         add;                                      end;                                      begin;   /* b(k7)=t4 + t5 */                                         dcl omsb lit 'bmsb(k7)';                                         dcl olsb lit 'blsb(k7)';                                         dcl imsb1 lit 't4msb';                                         dcl ilsb1 lit 't4lsb';                                         dcl imsb2 lit 't5msb';                                         dcl ilsb2 lit 't5lsb';                                         add;                                      end;                                      begin; /* b(k6)=t0 - t1 */                                         dcl omsb lit 'bmsb(k6)';                                         dcl olsb lit 'blsb(k6)';                                         dcl imsb1 lit 't0msb';                                         dcl ilsb1 lit 't0lsb';                                         dcl imsb2 lit 't1msb';                                         dcl ilsb2 lit 't1lsb';                                         subtract;                                      end;                                      begin;  /* b(jj1)=t5 - t4 */                                         dcl omsb lit 'bmsb(jj1)';                                         dcl olsb lit 'blsb(jj1)';                                         dcl imsb1 lit 't5msb';                                         dcl ilsb1 lit 't5lsb';                                         dcl imsb2 lit 't4msb';                                         dcl ilsb2 lit 't4lsb';                                         subtract;                                      end;                                      begin; /* b(jj2)=t2 - t7 */                                         dcl omsb lit 'bmsb(jj2)';                                         dcl olsb lit 'blsb(jj2)';                                         dcl imsb1 lit 't2msb';                                         dcl ilsb1 lit 't2lsb';                                         dcl imsb2 lit 't7msb';                                         dcl ilsb2 lit 't7lsb';                                         subtract;                                      end;                                      begin;  /* b(k5)=t6 + t3 */                                         dcl omsb lit 'bmsb(k5)';                                         dcl olsb lit 'blsb(k5)';                                         dcl imsb1 lit 't6msb';                                         dcl ilsb1 lit 't6lsb';                                         dcl imsb2 lit 't3msb';                                         dcl ilsb2 lit 't3lsb';                                         add;                                      end;                                      begin; /* b(k4)=t2 + t7 */                                          dcl omsb lit 'bmsb(k4)';                                         dcl olsb lit 'blsb(k4)';                                         dcl imsb1 lit 't2msb';                                         dcl ilsb1 lit 't2lsb';                                         dcl imsb2 lit 't7msb';                                         dcl ilsb2 lit 't7lsb';                                         add;                                      end;                                      begin; /* b(jj3)=t3 - t6 */                                         dcl omsb lit 'bmsb(jj3)';                                         dcl olsb lit 'blsb(jj3)';                                         dcl imsb1 lit 't3msb';                                         dcl ilsb1 lit 't3lsb';                                         dcl imsb2 lit 't6msb';                                         dcl ilsb2 lit 't6lsb';                                         subtract;                                      end;                                    end;                                                                        jr=jr+2;                                    ji=ji-2;                                    if (ji-jl)<=0 then do;                                      ji=2*jr-1;                                      jl=jr;                                    end;                                  end;                                  else do;                                    do k=0 to intv-1;                                      k1=k+intv;                                      k2=k1+intv;                                      k3=k2+intv;                                      /* first divide all inputs by two */                                      begin; /* b(k)= b(k)/2 */                                          dcl omsb lit 'bmsb(k)';                                          dcl olsb lit 'blsb(k)';                                          half;                                      end;                                      begin; /* b(k1)=b(k1)/2 */                                         dcl omsb lit 'bmsb(k1)';                                         dcl olsb lit 'blsb(k1)';                                         half;                                      end;                                      begin; /* b(k2)=b(k2)/2 */                                         dcl omsb lit 'bmsb(k2)';                                         dcl olsb lit 'blsb(k2)';                                         half;                                      end;                                      begin; /* b(k3)=b(k3)/2 */                                         dcl omsb lit 'bmsb(k3)';                                         dcl olsb lit 'blsb(k3)';                                         half;                                      end;                                      begin; /* t0=b(k)+b(k2) */                                         dcl omsb lit 't0msb';                                         dcl olsb lit 't0lsb';                                         dcl imsb1 lit 'bmsb(k)';                                         dcl ilsb1 lit 'blsb(k)';                                         dcl imsb2 lit 'bmsb(k2)';                                         dcl ilsb2 lit 'blsb(k2)';                                         add;                                         half;                                      end;                                      begin; /* t1=b(k1) + b(k3) */                                         dcl omsb lit 't1msb';                                         dcl olsb lit 't1lsb';                                         dcl imsb1 lit 'bmsb(k1)';                                         dcl ilsb1 lit 'blsb(k1)';                                         dcl imsb2 lit 'bmsb(k3)';                                         dcl ilsb2 lit 'blsb(k3)';                                         add;                                         half;                                      end;                                      begin; /* b(k2)=b(k)-b(k2) */                                         dcl omsb lit 'bmsb(k2)';                                         dcl olsb lit 'blsb(k2)';                                         dcl imsb1 lit 'bmsb(k)';                                         dcl ilsb1 lit 'blsb(k)';                                         dcl imsb2 lit 'bmsb(k2)';                                         dcl ilsb2 lit 'blsb(k2)';                                         subtract;                                         half;                                      end;                                      begin; /* b(k3)=b(k1)-b(k3) */                                         dcl omsb lit 'bmsb(k3)';                                         dcl olsb lit 'blsb(k3)';                                         dcl imsb1 lit 'bmsb(k1)';                                         dcl ilsb1 lit 'blsb(k1)';                                         dcl imsb2 lit 'bmsb(k3)';                                         dcl ilsb2 lit 'blsb(k3)';                                         subtract;                                         half;                                      end;                                      begin; /* b(k)=(t0+t1) */                                         dcl omsb lit 'bmsb(k)';                                         dcl olsb lit 'blsb(k)';                                         dcl imsb1 lit 't0msb';                                         dcl ilsb1 lit 't0lsb';                                         dcl imsb2 lit 't1msb';                                         dcl ilsb2 lit 't1lsb';                                         add;                                      end;                                      begin; /* b(k1)=(t0-t1) */                                            dcl omsb lit 'bmsb(k1)';                                         dcl olsb lit 'blsb(k1)';                                         dcl imsb1 lit 't0msb';                                         dcl ilsb1 lit 't0lsb';                                         dcl imsb2 lit 't1msb';                                         dcl ilsb2 lit 't1lsb';                                         subtract;                                      end;                                    end;                                      if nn-4>0 then do;                                      k0=intv*4;  /* Fortran -1 */                                      kl=k0+intv-1;                                      do k=k0 to kl;                                        k1=k+intv;                                        k2=k1+intv;                                        k3=k2+intv;                                        begin; /* b(k1)=b(k1)/2 */                                           dcl omsb lit 'bmsb(k1)';                                           dcl olsb lit 'blsb(k1)';                                                half;                                        end;                                           begin; /* b(k3)=b(k3)/2 */                                           dcl omsb lit 'bmsb(k3)';                                           dcl olsb lit 'blsb(k3)';                                           half;                                        end;                                        begin; /* pr=p7%(b(k1)-b(k3)) */                                              dcl omsb lit 'prmsb';                                           dcl olsb lit 'prlsb';                                           dcl w    lit 'p7';                                           dcl iw   lit '(-p7)';                                           dcl imsb1 lit 'bmsb(k1)';                                           dcl ilsb1 lit 'blsb(k1)';                                           dcl imsb2 lit 'bmsb(k3)';                                           dcl ilsb2 lit 'blsb(k3)';                                           multiply;                                        end;                                        begin; /* pi=p7%(b(k1)+b(k3)) */                                           dcl omsb lit 'pimsb';                                           dcl olsb lit 'pilsb';                                           dcl w    lit 'p7';                                           dcl iw   lit 'p7';                                           dcl imsb1 lit 'bmsb(k1)';                                           dcl ilsb1 lit 'blsb(k1)';                                           dcl imsb2 lit 'bmsb(k3)';                                           dcl ilsb2 lit 'blsb(k3)';                                           multiply;                                        end;                                        begin; /* b(k2)=b(k2)/4 */                                           dcl omsb lit 'bmsb(k2)';                                           dcl olsb lit 'blsb(k2)';                                           half;half;                                        end;                                        begin; /* b(k)= b(k)/4 */                                           dcl omsb lit 'bmsb(k)';                                               dcl olsb lit 'blsb(k)';                                           half;half;                                        end;                                        begin; /* b(k3)=b(k2)+pi */                                           dcl omsb lit 'bmsb(k3)';                                           dcl olsb lit 'blsb(k3)';                                           dcl imsb1 lit 'bmsb(k2)';                                           dcl ilsb1 lit 'blsb(k2)';                                           dcl imsb2 lit 'pimsb';                                           dcl ilsb2 lit 'pilsb';                                           add;                                        end;                                        begin; /* b(k1)=pi-b(k2) */                                           dcl omsb lit 'bmsb(k1)';                                           dcl olsb lit 'blsb(k1)';                                           dcl imsb1 lit 'pimsb';                                           dcl ilsb1 lit 'pilsb';                                           dcl imsb2 lit 'bmsb(k2)';                                           dcl ilsb2 lit 'blsb(k2)';                                           subtract;                                        end;                                        begin; /* b(k2)=b(k)-pr */                                           dcl omsb lit 'bmsb(k2)';                                           dcl olsb lit 'blsb(k2)';                                           dcl imsb1 lit 'bmsb(k)';                                           dcl ilsb1 lit 'blsb(k)';                                           dcl imsb2 lit 'prmsb';                                           dcl ilsb2 lit 'prlsb';                                           subtract;                                        end;                                        begin; /* b(k)=b(k)+pr */                                           dcl omsb lit 'bmsb(k)';                                           dcl olsb lit 'blsb(k)';                                           dcl imsb2 lit 'bmsb(k)';                                           dcl ilsb2 lit 'blsb(k)';                                           dcl imsb1 lit 'prmsb';                                           dcl ilsb1 lit 'prlsb';                                           add;                                        end;                                      end;                                      end;                                  end;                                  end;                                end;                              end;                            end;                          end;                        end;                      end;                    end;                  end;                end;              end;            end;          end;        end;      end;      return;  end fr4tr;    m=compute.m(n);  if m=0 then return 1;    /* n not a power of 2 */  n4pow=m/2;  /* do a radix 2 iteration if one is required */  if (m-n4pow*2)>0 then do;    nn=2;    intv=n/nn;    call ifr2tr(intv,bmsb,blsb);  end;    else nn=1;  do it=1 to n4pow;  /* do radix 4 iterations */    nn=nn*4;    intv=n/nn;    call fr4tr;  end;    call iford1(m,bmsb);  call iford2(m,bmsb);  call iford1(m,blsb);  call iford2(m,blsb);  tmsb=bmsb(1);  tlsb=blsb(1);  bmsb(1)=0;  blsb(1)=0;  bmsb(n)=tmsb;  blsb(n)=tlsb;  bmsb(n+1)=0;  blsb(n+1)=0;  it=3;bmsb(it)=bmsb(it);blsb(it)=blsb(it);  do it=3 to n-1 by 2;     bmsb(it)=-bmsb(it);    if blsb(it)^=0 then bmsb(it)=bmsb(it)-1;    blsb(it)=-blsb(it);  end;   return 0;end ifast;