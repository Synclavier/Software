/* 00-VKBD  $TITLE  Drivers for New Button Panel Functions */DCL BIT.TABLE DATA (1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768);DCL PULSE_EXWR0     LIT 'WRITE(D131)="40"\0; WRITE(D131)=0; WRITE(D131)="100"\0'; /* MODE 0 WRITE THEN READ */DCL PULSE_EXWR1     LIT 'WRITE(D131)="40"\1; WRITE(D131)=1; WRITE(D131)="100"\1'; /* MODE 1 WRITE THEN READ */DCL NUM.OCTAVES     LIT '6';  /* # REGULAR OCTAVES (12 KEY) */DCL NUM.SW.PANS     LIT '8';  /* # BUTTON BANKS */DCL NUM.ALPHA.CHARS LIT '32'; /* # ALPHA CHARS */DCL LIST.SIZE                  LIT '25';DCL NEW.NOTE.LIST  (LIST.SIZE) FIXED;DCL NEW.NOTE.KEY#  (LIST.SIZE) FIXED;DCL NEW.NOTE.VEL   (LIST.SIZE) FIXED;DCL NEW.BUTTON.LIST(LIST.SIZE) FIXED;DCL DP.TABLE   DATA (32,48,36,52);    /* DECIMAL POINT ADDRESSES */DCL ANALOG.IN (7)  FIXED;DCL KNOB.POS   LIT 'ANALOG.IN(0)';DCL RIBBON.POS LIT 'ANALOG.IN(1)';DCL PEDAL2.POS LIT 'ANALOG.IN(2)';DCL PEDAL1.POS LIT 'ANALOG.IN(3)';DCL PWHEEL.POS LIT 'ANALOG.IN(4)';DCL MWHEEL.POS LIT 'ANALOG.IN(5)';DCL BREATH.POS LIT 'ANALOG.IN(6)';DCL UNUSED.POS LIT 'ANALOG.IN(7)';DCL KNOB.BASE      FIXED;DCL VOLPEDALPOS    FIXED; /* GLOBAL FOR LOGICAL PEDAL1 POS (FILTERED) */DCL RTEPEDALPOS    FIXED; /* GLOBAL FOR LOGICAL PEDAL2 POS */DCL PBI.BASE       FIXED; /* INITIAL SIGNAL ON PBI INPUT */DCL PBI.POS        FIXED; /* PBI PITCH DISTANCE */DCL D130 LIT '"130"';DCL D131 LIT '"131"';/* $SUBTITLE  VELOCITY KEYBOARD DEVICE SCANNING ROUTINES */SCAN.NEW.NOTES:  PROC; /* CREATE LIST OF NEW NOTES ON KEYBOARD */   DCL (MASK1,MASK2)       FIXED;   DCL (KCR,OLDKCR)        FIXED;   DCL (KEYS.NEW,KEYS.REL) FIXED;   DCL CLAVIER    (5)      FIXED;   DCL OLD.CLAVIER(5)      FIXED;   DCL (I,J,K)             FIXED;   WRITE(D131)=0; WRITE(D131)="40"\0;  /* EX WRITE IN MODE 0 */   WRITE(D131)=0; WRITE(D131)="100"\0; /* EX READ  IN MODE 0 */   KCR=(READ(D130) XOR "077777") \ OLDKCR; /* GET KEYBOARD CHANGE REG */   OLDKCR=0;   IF KCR=0 THEN RETURN; /* NOTHING TO DO */   KCR=KCR\SHR(KCR,8); /* OR UP AND DOWN BYTES TOGETHER */   WRITE(D131)=1; /* SET D130 ADDRESSS TO INDICATE EXPANDED OPCODES */   MASK1=1; /* INIT BIT MASK FOR KCR */   DO I=0 TO (5-1); /* CHECK FOR CHANGE IN EACH SUPEROCTAVE */      IF (MASK1&KCR)<>0 THEN DO; /* CHECK FOR CHANGE IN OCTAVE */         WRITE(D130)="417"\SHL(I,4); /* REQUEST ACTIVITY WORD */         PULSE_EXWR1;         CLAVIER(I)=READ(D130); /* GET ACTIVITY WORD */         KEYS.NEW=CLAVIER(I) AND (NOT OLD.CLAVIER(I)); /* NEW KEYS DOWN */         KEYS.REL=OLD.CLAVIER(I) AND (NOT CLAVIER(I)); /* RELEASED KEYS */         K=SHL(I,4); /* PRECOMPUTE SUPEROCTAVE NUMBER */         MASK2=1; /* INIT BIT MASK FOR KEYS */         IF KEYS.NEW<>0 THEN DO J=0 TO 15; /* LOOP OVER KEYS IN OCTAVE */            IF (MASK2&KEYS.NEW)<>0 THEN DO; /* NEW KEY DOWN */               IF NEW.NOTE.LIST(0)<LIST.SIZE THEN DO; /* ADD TO LIST */                  NEW.NOTE.LIST(0)=NEW.NOTE.LIST(0)+1;                  NEW.NOTE.LIST(NEW.NOTE.LIST(0))=1; /* CODE FOR NEW NOTE */                  NEW.NOTE.KEY#(NEW.NOTE.LIST(0))=(K\J)+9;                  WRITE(D130)="000"\K\J; /* REQUEST KEY VEL/TIME DATA */                  PULSE_EXWR1;                  NEW.NOTE.VEL(NEW.NOTE.LIST(0))=READ(D130)&"1777"; /* STORE VELOCITY DATA */                  OLD.CLAVIER(I)=OLD.CLAVIER(I) XOR MASK2;               END;               ELSE OLDKCR=OLDKCR\MASK1;            END; /* NEW KEY DOWN */            MASK2=SHL(MASK2,1);         END; /* LOOP FOR NEW KEYS */         MASK2=1; /* INIT BIT MASK FOR KEYS */         IF KEYS.REL<>0 THEN DO J=0 TO 15; /* LOOP OVER RELEASED KEYS */            IF (MASK2&KEYS.REL)<>0 THEN DO; /* NEW KEY UP */               IF NEW.NOTE.LIST(0)<LIST.SIZE THEN DO; /* ADD TO LIST */                  NEW.NOTE.LIST(0)=NEW.NOTE.LIST(0)+1;                  NEW.NOTE.LIST(NEW.NOTE.LIST(0))=2; /* CODE FOR NOTE RELEASE */                  NEW.NOTE.KEY#(NEW.NOTE.LIST(0))=(K\J)+9;                  OLD.CLAVIER(I)=OLD.CLAVIER(I) XOR MASK2;               END;               ELSE OLDKCR=OLDKCR\MASK1;            END; /* NEW KEY UP */            MASK2=SHL(MASK2,1);         END; /* OF LOOP FOR RELEASED KEYS */      END; /* OF CHANGE IN OCTAVE */      MASK1=SHL(MASK1,1);   END; /* OF LOOP OVER OCTAVES */END SCAN.NEW.NOTES;SCAN.PRESSURE:PROC(K);  /* PASS KEY NUMBER - RETURN PRESSURE READING */   DCL K FIXED;   WRITE(D131)=1; /* INDICATE KEYBOARD OPCODES */   WRITE(D130)="200"\(K-9); /* REQUEST DATA FOR KEY */   WRITE(D131)="40"\1; WRITE(D131)=1; WRITE(D131)="100"\1; /* PULSE_EXWR1 */   RETURN READ(D130)&"377";END;SCAN.ANALOG.INPUTS:  PROC; /* READ ANALOG INPUTS */   WRITE(D131)=1; /* SET D130 ADDRESS TO INDICATE EXTENDED OPCODES */   /* GET ANALOG INPUT VALUES */   WRITE(D130)="200"\88; PULSE_EXWR1; ANALOG.IN(0)=READ(D130)&"377";   WRITE(D130)="200"\89; PULSE_EXWR1; ANALOG.IN(1)=READ(D130)&"377";   WRITE(D130)="200"\90; PULSE_EXWR1; ANALOG.IN(2)=READ(D130)&"377";   WRITE(D130)="200"\91; PULSE_EXWR1; ANALOG.IN(3)=READ(D130)&"377";   WRITE(D130)="200"\92; PULSE_EXWR1; ANALOG.IN(4)=READ(D130)&"377";   WRITE(D130)="200"\93; PULSE_EXWR1; ANALOG.IN(5)=READ(D130)&"377";   WRITE(D130)="200"\94; PULSE_EXWR1; ANALOG.IN(6)=READ(D130)&"377";   WRITE(D130)="200"\95; PULSE_EXWR1; ANALOG.IN(7)=READ(D130)&"377";END SCAN.ANALOG.INPUTS;CLEAR.LIGHT:  PROC(LIGHT.NUM);   DCL LIGHT.NUM FIXED;   LIGHT.NUM=(LIGHT.NUM&15)+(144-(LIGHT.NUM&"177760"));   WRITE(D131)=3; /* SET UP D130 TO INDICATE LIGHTS */   WRITE(D130)=SHL(LIGHT.NUM,8)\0;   WRITE(D131)=3\"40"; WRITE(D131)=3; /* PULSE EXW */END CLEAR.LIGHT;CLEAR.DISPLAY:  PROC; /* CLEAR THE WHOLE ALPHA DISPLAY */   DCL I FIXED;   WRITE(D131)=2; /* INDICATE ALPHA DISPLAY */   DO I=0 TO 31; /* CLEAR CHARS */      WRITE(D130)=SHL(I,8)\"40"; /* WRITE OUT A SPACE */      WRITE(D131)=2\"40"; WRITE(D131)=2; /* PULSE EXW */   END;   DO I=0 TO 3; /* CLEAR DECIMAL POINTS */      WRITE(D130)=SHL(DP.TABLE(I),8)\"0"; /* WRITE ZERO */      WRITE(D131)=2\"40"; WRITE(D131)=2;  /* PULSE EXW */   END;END CLEAR.DISPLAY;