init.logtab:  proc; /* creates log look-up table for use by FASTLOG */   dcl i fixed;   /* sets up a look-up table for logs (base 2) * 1024 of numbers in the      range of 1.000 to 1.999 */   do i=0 to logtab.len-1; /* loop through entries in log table */      logtab(i)=int((log(1+(i*1.0/(logtab.len-1)))/log(2)+.0001)*1024); /* compute log (base 2) * 1000 */   end;end init.logtab;fastlog:  proc (msb,lsb) fixed; /* returns 16-bit log (base 2) * 1024 of 32-bit integer */   dcl (msb,lsb)      fixed;   dcl (logval,index) fixed;   dcl (exp,mantissa) fixed;   logval=0; /* set to default value for negative log */   if (msb<>0) or (lsb<>0) then do; /* taking log of non-zero number */      exp=31; /* init to largest possible */      do while (msb&"100000")=0; /* perform 32-bit shift left */         msb=shl(msb,1); /* shift upper word */         if (lsb&"100000")<>0 then msb=msb+1; /* handle shift across word boundary */         lsb=shl(lsb,1); /* shift lower word */         exp=exp-1; /* decrement exponent */      end; /* of perform 32-bit shift left */      /* compute index into log table */      index=shr(msb,16-int(log(logtab.len)/log(2)+.0001)-1);      index=index&(logtab.len-1);      mantissa=logtab(index); /* look up log of manitissa */      logval=exp*1024+mantissa;   end; /* of taking log of non-zero number */   return logval;end fastlog;