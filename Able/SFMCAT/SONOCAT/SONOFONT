/* SONOFONT  $TITLE  Some Special Graphics Fonts and Routines */#special_clear:  proc; /* clear that does not interract with SFM commands */   vector_mode; call pc(a.esc); call pc(a.ff);   transparent_mode;   call wait(150);end #special_clear;dcl special_clear lit 'call #special_clear';/* Definitions for Numeric Char Font */dcl char.x lit '10'; /* pixels in x-axis of font */dcl char.y lit '7';  /* pixels in y-axis of font */dcl decimal data("000","000","600","600","000","000","000");dcl minus   data("000","020","020","020","020","020","000");dcl space   data("000","000","000","000","000","000","000");dcl zero    data("174","302","441","421","411","206","174");dcl one     data("000","404","402","777","400","400","000");dcl two     data("702","441","421","421","421","411","406");dcl three   data("202","401","401","421","421","421","356");dcl four    data("160","110","104","102","777","100","100");dcl five    data("237","421","421","421","421","421","341");dcl six     data("374","442","421","421","421","421","342");dcl seven   data("401","201","101","041","021","011","007");dcl eight   data("306","451","421","421","421","451","306");dcl nine    data("216","421","421","421","421","231","156");dcl tens    data (10000,1000,100,10,1); /* powers of ten in fixed point range */draw_char:  proc(x,y,font); /* plot a char at absolute coords (x,y) */   dcl (x,y) fixed; /* absolute (x,y) coordinates to put char at */   dcl font  fixed array; /* holds bit map of character to plot */   dcl i     fixed;   do i=0 to (char.y-1); /* loop over words of font data */      alpha_mode; /* try to reset terminal */      /* load screen address for this line */      call pc(a.esc); call pc(a.quote); pnum(x/5);       call pc(a.semicolon); pnum(y-i-1); call pc(l.a);      /* load one line of pixels */      call pc(a.esc); call pc(a.plus); /* initiate data load */      call pc(shr(font(i),5)+"100"); /* send upper 5 bits of font */      call pc((font(i)&"37")+"100"); /* send lower 5 bits of font */      call pc(a.sharp); /* terminate data load */   end; /* of loop over words of font data */end draw_char;/* $PAGE */draw_fixed:  proc(x,y,value,digits,fill,right.just) fixed; /* plot fixed point value at absolute coords (x,y) */   dcl (x,y)      fixed; /* absolute coords of number to plot */   dcl value      fixed; /* number to plot */   dcl digits     fixed; /* number of digits to plot */   dcl fill       fixed; /* set true to fill with zeroes */   dcl right.just fixed; /* set true to right justify numbers, otherwise left justified */   dcl negflag    fixed;   dcl plotflag   fixed;   dcl (i,j,k)    fixed;   if value<0 then do; /* handle negative number */      if value=(-32768) then value=32767; /* special case */      else                   value=abs(value); /* convert to positive */      negflag=1;   end;   if (not negflag) and right.just then y=y-char.y-1; /* skip a position */   plotflag=fill;   do j=(5-digits) to 4; /* loop over digits to plot */      i=value/tens(j); /* compute next digit */      value=value-i*tens(j); /* compute remainder */      if (i>0) or (j=4) then plotflag=1;      if plotflag then do; /* plot a char */         if negflag then do; /* draw minus sign */            negflag=0;            call draw_char(x,y,minus);            y=y-char.y-1; /* decrement to next char position */         end; /* of plot negative sign */         do case(i); /* branch on digit */         call draw_char(x,y,zero);  /* ZERO  */         call draw_char(x,y,one);   /* ONE   */         call draw_char(x,y,two);   /* TWO   */         call draw_char(x,y,three); /* THREE */         call draw_char(x,y,four);  /* FOUR  */         call draw_char(x,y,five);  /* FIVE  */         call draw_char(x,y,six);   /* SIX   */         call draw_char(x,y,seven); /* SEVEN */         call draw_char(x,y,eight); /* EIGHT */         call draw_char(x,y,nine);  /* NINE  */         end; /* of branch on digit */      end; /* of plot a char */      if plotflag or right.just then y=y-char.y-1; /* decrement to next char position */   end; /* of loop over digits to plot */   return y; /* return position of next char */end draw_fixed;draw_float:  proc(x,y,value,right,left); /* plots a floating pt. number */   dcl (x,y) fixed; /* absolute coords for value to plot */   dcl value floating; /* number to plot */   dcl right fixed; /* spaces to use to plot integer    portion of number (0 to 5) */   dcl left  fixed; /* spaces to use to plot fractional portion of number (0 to 4) */   dcl rnum  fixed;   dcl lnum  fixed;   dcl nexty fixed;   dcl neg   fixed;   dcl (i,j) fixed;   neg=0;   if value<0 then neg=1;   rnum=int(abs(value)); /* get integer portion of number */   if rnum=-32768 then rnum=32767;   if right<5     then rnum=rnum-(rnum/tens(4-right))*tens(4-right); /* limit digits in num */   if neg then lnum=int((-value-int(-value))*10000+.5); /* get fractional portion of number */   else        lnum=int((value-int(value))  *10000+.5); /* get fractional portion of number */   if (left>0) and (left<4) then do; /* compute fractional portion, rounding to specified digits */      i=tens(left);      j=lnum mod i;      if j>=(tens(left+1)*5) then do; /* round */         if neg then lnum=lnum-j+i;         else        lnum=lnum-j+i;      end;      if lnum>=10000 then do;         if neg then rnum=rnum-1;         else        rnum=rnum+1;         lnum=lnum-10000;      end;   end;   else if (left=0) and (lnum>=5000) then do; /* round fractional portion */      if neg then rnum=rnum-1;      else        rnum=rnum+1;   end;   nexty=y; /* initialize */   if right>0 then do; /* plot integer portion of number */      if neg then rnum=-rnum; /* restore sign of number */      nexty=draw_fixed(x,nexty,rnum,right,0,1); /* plot number to left of decimal pt. */      if (rnum=0) and neg then do; /* handle special case of zero and negative */         call draw_char(x,nexty+2*char.y+1,minus); /* plot a minus sign */      end;   end;   else if neg then do; /* no integer portion, but num is negative */      call draw_char(x,nexty,minus); /* plot a minus sign */      nexty=nexty-char.y-1; /* step to next char position */   end;   nexty=nexty+1; /* compensate for decimal point being so small */   call draw_char(x,nexty,decimal); /* plot the decimal point */   nexty=nexty-char.y+1; /* step to next char position adjusting for decimal point */   if left>0 then do; /* plot fractional portion of number */      do j=1 to left; /* loop over digits to plot */         i=lnum/tens(j); /* compute next digit */         lnum=lnum-i*tens(j); /* compute remainder */         do case(i); /* branch on digit */            call draw_char(x,nexty,zero);  /* ZERO  */            call draw_char(x,nexty,one);   /* ONE   */            call draw_char(x,nexty,two);   /* TWO   */            call draw_char(x,nexty,three); /* THREE */            call draw_char(x,nexty,four);  /* FOUR  */            call draw_char(x,nexty,five);  /* FIVE  */            call draw_char(x,nexty,six);   /* SIX   */            call draw_char(x,nexty,seven); /* SEVEN */            call draw_char(x,nexty,eight); /* EIGHT */            call draw_char(x,nexty,nine);  /* NINE  */         end; /* of branch on digit */         nexty=nexty-char.y-1; /* decrement to next char position */      end; /* of loop over digits to plot */   end; /* of plot fractional portion of number */end draw_float;