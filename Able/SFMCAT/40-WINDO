/* 40-WINDO  $TITLE  General Sound File Windowing Procedure *//* Copyright 1985 by New England Digital Corporation */data_window:proc(b,blsb,n,type,len); /* apply window: 0 => boxcar, 1 => hanning, 2=> hamming */  dcl b         fixed array; /* MSB of sound file */  dcl blsb      fixed array; /* returns least sig bits, assumed 0 on entry */  dcl n         fixed; /* fft length */  dcl type      fixed; /* window type */  dcl len       fixed; /* window length in samples */  dcl (theta,i) fixed;   do case(type); /* apply appropriate window */     do i=0 to len-1; blsb(i)=0; end; /* 0:  boxcar window */     do; /* 1:  hanning window */        /* b = 1/2 * (b-b*cos(2 * pi * i / window.len )) */        i=0;        b(i)=0; blsb(i)=0; /* special case, because of error in the cos(0) */        do i=1 to len-1; /* loop over rest of samples */          write(5)=0; write(4)=i; write(7)=len; /* theta=65536*(i)/len */              call angle(read(5));                                                    cosine=32767-cosine;          write(5)=cosine;          write(6)=b(i);          if b(i)<0 then b(i)=read(4)-cosine;          else           b(i)=read(4);          blsb(i)=read(5);        end;      end; /* hanning window */     do i=0 to len-1; /* 2:  hamming */       write(5)=0; write(4)=i; write(7)=len; /* theta=65536*(i)/len */           call angle(read(5));                                                 write(5)=cosine;           write(6)=60293; /* .46 * 65536 */       if cosine<0 then cosine=read(4)-60293;       else             cosine=read(4);       cosine=35389-cosine;       write(5)=cosine;       write(6)=b(i);       if b(i)<0 then b(i)=read(4)-cosine;       else           b(i)=read(4);       blsb(i)=read(5);     end; /* hamming */  end; /* of do case */  do i=len to n-1; /* zero any observations outside window */     b(i)=0; blsb(i)=0;  end;end data_window;