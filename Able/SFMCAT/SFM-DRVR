/* SFM-DRVR  $TITLE  Driver Program for the Signal File Manager (.SFM-x) *//*                   Compile this program to get .SFM-x                  */                             /* Copyright 1985 by New England Digital Corporation */dcl in.main.module lit '0';dcl sector.size    lit '256';dcl buf (255)      fixed;dcl i              fixed;dcl buf1.len                         lit '21';dcl databuf1(buf1.len*sector.size-1) fixed; /* define primary work buffer */insert ':-xpl:literals'; 	/* system literals */insert ':-xpl:asciilit'; 	/* ASCII literals */insert ':-xpl:catrtns';  	/* catalog routines */insert ':-xpl:strings';  	/* string handling */insert ':-xpl:intrprtr';	/* interpreter interface */insert ':sfmcat:00-sfm';    /* SFM upper memory definitions and overlay routine */insert ':sfmcat:01-io';     /* interrupt I/O */insert ':sfmcat:02-plot';   /* VT-640 plotting procedures */insert ':sfmcat:06-globl';insert ':sfmcat:07-util';insert ':sfmcat:08-symbl';insert ':sfmcat:09-files';mem.siz=memory.size; /* look up configured memory size */dcl catalog_buffer (c#dir_max - 1) fixed; /* catalog buffer */call set_catbuf (addr(catalog_buffer(0)), 0); /* set up catalog buffer */enable;if mem.siz ILT (60*1024) then do; /* SFM needs at least 60K internal memory */   ps('System must have at least 60K internal memory to run SFM.'); nl;   call tty_wait; call exit(-1); /* quit with stop status */end;if (d130_present and d160_present) then do; /* configuration says we have some keyboard */   write("131")="105"; /* poll the keyboard interface to get keyboard type */   if read("130")=1 then do; /* look for non-velocity version of SFM */      if not OPENFILE(SFMNOVEL.FILE,loc.p2,0) then do; /* file missing */         ps('Cannot run the Signal File Manager.'); nl;         ps('System file "'); ps(SFMNOVEL.FILE);         ps('" (SFM for Original Synclavier Keyboard)'); nl;         ps('was not found in your catalog.'); nl;         call tty_wait; call exit(-1); /* quit back to monitor */      end;   end;   else do; /* look for velocity version of SFM */      if not OPENFILE(SFMVEL.FILE,loc.p2,0) then do; /* file missing */         ps('Cannot run the Signal File Manager.'); nl;         ps('System file "'); ps(SFMVEL.FILE);         ps('" (SFM for Velocity Keyboard)'); nl;         ps('was not found in your catalog.'); nl;         call tty_wait; call exit(-1); /* quit back to monitor */      end;   end;end;else do; /* no keyboard - just overlay to the original version */   if not OPENFILE(SFMNOVEL.FILE,loc.p2,0) then do; /* file missing */      ps('Cannot run the Signal File Manager.'); nl;      ps('System file "'); ps(SFMNOVEL.FILE);      ps('"was not found in your catalog.'); nl;      call tty_wait; call exit(-1); /* quit back to monitor */   end;end;if ((terminal.type<>t#vt100) or (terminal.graphics=0))then ps('The SFM software requires a graphics terminal to operate correctly.');else do case abs(can.overlay(f#ms_sector,f#ls_sector,0,0,buf));   call overlay(f#ms_sector,f#ls_sector,f#words); /* overlay to correct module */   ps('SFM software is incompatible with system software.'); /* -1 */   ps('Not enough memory for this SFM software.');           /* -2 */   ps('Not enough external memory for this SFM software.');  /* -3 */   ps('Not enough external memory for this SFM software.');  /* -4 */   ps('Not enough external memory for this SFM software.');  /* -5 */end;call tty_wait;if core(loc.synret)<>0 then do;   i=core(loc.synret);   core(loc.synstat)=256; /* set flag for error then return to caller */   call overlay(core(i+1),core(i),core(i-1));end;/* otherwise return to monitor */