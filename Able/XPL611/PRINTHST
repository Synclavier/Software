insert ':-xpl:literals'; /* general literals */insert ':-xpl:asciilit'; /* ASCII literals */insert ':-xpl:catrtns'; /* catalog routines */insert ':-xpl:fileio'; /* buffered file I/O */library 'scansym.'; /* symbol table scanner */dcl read_symtab   proc(file) external; /* read in XPL symbol table */dcl symbolic_name proc(fixed, fixed array) returns (pointer) external; /* put symbolic name of ADDRESS in NAME */histogram: proc(pcbuf, samps, name); /* print histogram of the PC */   dcl pcbuf  fixed array; /* PC histogram */   dcl samps  fixed; /* number of PC samples in PCBUF */   dcl name   fixed array; /* scratch buffer for symbolic name of location */   dcl sum_ms fixed; /* sum of all PC samples */   dcl sum_ls fixed;   dcl max    fixed; /* maximum sample value */   dcl limit  fixed; /* maximum stars to print */   dcl (i, j) fixed;   dcl reserved lit '16'; /* address + sample count */   if directed_output <> 0 /* if writing to the printer */   then limit = 132 - reserved - 1; /* stars for largest sample */   else limit = 80 - reserved - 1; /* for terminal */   max = 1; /* at least one sample must have been taken */   do i = 0 to samps - 1; /* make a pass to find the maximum sample value */      if pcbuf (i) igt max then max = pcbuf (i); /* save maximum */   end;   if max ilt limit then limit = max; /* don't expand the stars! */   sum_ms = 0; sum_ls = 0; /* start tally */   do i = 0 to samps - 1; /* for each sample value */      if pcbuf (i) <> 0 then do; /* if this address logged */         print string(loc(symbolic_name (shl (i, 5), name))), '/',; /* start with symbolic name */         print string(loc(symbolic_name (shl (i, 5) + 31, name))), ':'; /* and range end */         print octal(shl(i, 5)), ': ', pcbuf (i), '  ',;         sum_ls = sum_ls + pcbuf (i); /* tally number of samples */         if sum_ls ilt pcbuf (i) then sum_ms = sum_ms + 1;         do j = 1 to pcbuf (i)*limit/max; /* normalize so maximum prints LIMIT stars */            print '*',;         end;         print;      end; /* of if address logged */   end; /* of for each sample value */   print ' Total: ', sum_ms, sum_ls;end histogram;when break then call exit (0);dcl #samp lit '1024'; /* number of samples taken */dcl pcbuf (#samp - 1) fixed; /* histogram of PC */dcl name (40)         fixed; /* room for symbolic name */dcl symtab file; /* symbol table file */if locate ('pclog', 1) then do; /* if it's there */   call readdata (f#ms_sector, f#ls_sector, pcbuf, #samp);   symtab = fopen ('-symtab-', 'r'); /* open the XPL symbol table */   if symtab <> nullf then do; /* if we successfully opened it */      call read_symtab (symtab); /* read it in */      call fclose (symtab); /* and close it */      call histogram (pcbuf, #samp, name); /* print out histogram */   end; /* of opening it */   else print 'Cannot open symbol table.';end; /* of log file there */else print 'Cannot open log file.';