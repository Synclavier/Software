/* Pass 3 file for alternate key label definition */   key = readif;   call altch (key); /* check limits */   okey = altflag (key); /* pick up flags */   if  (skip_opt)    /* skip of optimization desired */   and (iter =  0)   /* and first iteration          */   and (not jumps)   /* of not jumps                 */   then okey = okey \ abit;   if active then do; /* if we're active */      if (okey and abit) = 0 then do; /* and not already active */         okey = (okey or abit); /* mark as active */         altf = 1;         if debug then new.active = (new.active or "10");      end;   end; /* of active */   else active = ((okey and abit) <> 0); /* if not active, assume activity of label */         if ((okey and pbit) = 0)      /* if is a lobel (VS proc) */   or ((altflag(key + proc_flags) and p.swap) = 0) /* or a non-swapping proc */   then do;      if altloc (key) <> cur.loc then do; /* if stored location doesn't match newest location */         call set_altloc (key, cur.loc); /* save current location of the label */         if jumps then do;  /* only bother to re-iterate if jumps */            altf = 1;            if debug then new.loc = (new.loc or "20");         end;      end; /* of stored location doesn't match newest */   end; /* of normal proc */   call set_altflag (key, okey or dbit); /* indicate is defined */   if (jumps and (not swaps)) then do; /* stack jump to jump detectors only if detecting jumps to jumps */      call altpush (key);      call altpush (cur.loc); /* stack these to check next instr */   end;