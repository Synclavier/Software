/* GLOBDCL   $TITLE  GLOBAL PRIMITIVE ITEMS

   Modified:
   11/15/91 - PF  - Added XFER.PTR
   02/28/91 - MWH - Add AEE's 20 saved mark points to the protocol
   07/10/90 - PF  - Added some Meter Map Globals
   05/31/90 - cj  - added sampled.move, sampled.move.speed
   06/20/89 - MWH - Add SCRUB.PTR
   05/02/89 - TSS - Merged changes for Optical disk to DTD transfer project
   03/14/89 - PF  - Added PACKET.BAS.PTR, PACKET.FREE.PTR
   01/27/89 - MWH - Add SECT.PTR
   09/21/88 - TSS - Added dcl for DIAGNOSICS.ENABLED
   09/14/88 - TSS - ADDED DCL FOR PACKET.PTR

*/

/* begin by generating an error message if */
/* someone forgets to insert 'comlits':    */

pdl pdl.size;                     

/* Variables in 'globdcl': */

DCL MODC        FIXED  EXTERNAL;  /* 1 = MODC PROCESSOR IN SYSTEM     */
DCL EXAMOUNT    FIXED  EXTERNAL;  /* SECTORS OF EXTERNAL MEMORY AVAIL */
DCL D54BITS     FIXED  EXTERNAL;  /* BIT CONTROLS FOR D54 BITS        */
DCL REAL.MILLISECONDS  FIXED EXTERNAL;  /* USED FOR MILLISEC TIMER    */
DCL SYSTEM.VOICES      FIXED EXTERNAL;  /* HOLDS # OF VOICES          */
DCL FM.VOICES          FIXED EXTERNAL;  /* HOLDS # OF FM VOICES       */
DCL DIAGNOSTICS.ENABLED FIXED EXTERNAL;  /* 1 = DIAGNOSTICS ENABLED (4X PROGRAM) */
DCL MAX.DIAGNOSE.VOICES FIXED EXTERNAL;  /* THE MAGIC "WRAP" NUMBER FOR INCREMENTING THROUGH VOICES TO TEST */
DCL POWER.OFF          FIXED EXTERNAL;  /* SET TO NON-ZERO IF KEYBOARD EVER BECOMES DISCONNECTED FROM D130 */

DCL MISC.BUF    ARRAY  EXTERNAL;  /* USED EVERYWHERE                  */
DCL EXTBUF.PTR  FIXED  EXTERNAL;  /* 4 SECTOR BUFFER IN XMEM          */
DCL PACKET.BAS.PTR     FIXED EXTERNAL;  /* ROTARY BUFFER FOR PROTOCOL PACKETS */
DCL PACKET.FREE.PTR    FIXED EXTERNAL;  /* POINTER TO NEXT AVAILABLE PACKET SECTOR */
DCL PACKET.PTR  FIXED  EXTERNAL;
DCL MISC.PTR    FIXED  EXTERNAL;  /* 1 SECTOR BUFFER IN XMEM - PRIMARILY FOR SENDING PROTOCOL PACKETS */
DCL SECT.PTR    FIXED  EXTERNAL;  /* BUFFER FOR SETBUF DURING D115 DOWNLOAD */
DCL LOCATE.STACK.PTR   FIXED EXTERNAL;  /* BUFFER FOR SAVED MARK POINTS */
DCL SCRUB.PTR   FIXED  EXTERNAL;  /* BUFFER TO SAVE START SCRUB PACKET IF DTD NOT READY */
DCL WITHIN.SCAN FIXED  EXTERNAL;  /* USED TO AVOID RE-ENTERED INTRPTS */
DCL XFER.PTR    FIXED  EXTERNAL;  /* BUFFER TO BUILD AND RECEIVE TRANSFER BLOCKS */
DCL LCAP.PTR	FIXED  EXTERNAL;  /* FOR RECEIPT OF LONG CAPTION STRINGS */
DCL PCACHE.PTR	FIXED  EXTERNAL;  /* PROTOCOL CATALOG CACHE FOR SEQUENCE NAME SCROLLING */
DCL TBANKNAME.PTR FIXED EXTERNAL;
DCL SPACENAME.PTR FIXED EXTERNAL;
DCL OMSMIDI.PTR FIXED EXTERNAL;

DCL TOK.PTR     FIXED EXTERNAL;   /* BYTE PTR INTO TOKEN */
DCL TOKEN       ARRAY EXTERNAL;   /* GLOBAL STRING BUFFER */
DCL FNBUF       ARRAY EXTERNAL;   /* GLOBAL FILE NAME BUFFER */
DCL LNBUF       ARRAY EXTERNAL;   /* GLOBAL LONG FILE NAME BUFFER 64 character C string with able 16-bit byte length */

DCL ERTYP       FIXED EXTERNAL;   /* GLOBAL HOLDS CODE FOR CURRENT ERROR STATUS */
DCL ERSYM       ARRAY EXTERNAL;   /* HOLDS STRING ASSOCIATED WITH CURRENT ERROR */
DCL VK.ERROR.CODE FIXED EXTERNAL; /* CODED IDENT OF VK ERROR MESSAGE DISPLAYED */

/* SPECIAL SYNCLAVIER VARIABLES PUT HERE */
/* TO SIMPLIFY MODULE CONSTRUCTION       */

/* NEEDED BY GET NEXT EVENT AND LOD MODULE:      */

DCL (PLAY)                       FIXED EXTERNAL; /* SET TRUE IF SEQUENCER IS RUNNING    */
DCL (RECD)                       FIXED EXTERNAL; /* RECORDING                           */
DCL (MOVE)                       FIXED EXTERNAL; /* FF/REWIND                           */
DCL (PNCH)                       FIXED EXTERNAL; /* PUNCHING IN                         */


DCL SAMPLED.ACTUAL.PLAY.TIME.MSB FIXED EXTERNAL; /* SAMPLED ONCE PER MAIN LOOP */
DCL SAMPLED.ACTUAL.PLAY.TIME.LSB FIXED EXTERNAL; /* CORRESPOND TO THE ACTUAL   */
DCL SAMPLED.ACTUAL.PLAY.TIME.ACU FIXED EXTERNAL; /* MICROSECOND TIME ACCUMULATOR */
DCL SAMPLED.ACTUAL.NEXT.CLICK    FIXED EXTERNAL; /* VALUES OF PLAY TIME VARS   */
DCL SAMPLED.ACTUAL.BEAT.NUMBER   FIXED EXTERNAL; /* AT START OF MAIN LOOP      */

DCL SAMPLED.MOVE                 FIXED EXTERNAL; /* PROVIDE SAMPLED VERSIONS OF FF/REW VARIABLES SO */
DCL SAMPLED.MOVE.SPEED           FIXED EXTERNAL; /* INTRTP ROUTINE CAN ESTIMATE SEQUENCER MOTION    */

DCL SAMPLED.ACTUALLY.EMIT.CLICK  FIXED EXTERNAL;

DCL SAMPLED.ACTUAL.SEQUENCE.TIME.MSB FIXED EXTERNAL;  /* COMPUTED ONCE PER MAIN LOOP */
DCL SAMPLED.ACTUAL.SEQUENCE.TIME.LSB FIXED EXTERNAL;

DCL SAMPLED.REAL.TIME.OF.PRIOR.CLICK.LSB FIXED EXTERNAL;
DCL SAMPLED.REAL.TIME.OF.NEXT.CLICK.LSB  FIXED EXTERNAL;

dcl CURSOR.SCROLL.BEGIN      fixed array external,
    CURSOR.SCROLL.END        fixed array external,
    SCREEN.SCROLL.BEGIN      fixed array external,
    SCREEN.SCROLL.END        fixed array external;


DCL (TRD.PTR,TRD.LEN) FIXED EXTERNAL; /* SEC # IN XMEM FOR TERMINAL DISP     */

DCL HEXPOWERS   DATA   EXTERNAL;  /* 4096,256,16,1                     */
DCL POWERS      DATA   EXTERNAL;  /* 10000,1000,100,10,1               */
DCL BITS        DATA   EXTERNAL;  /* 1,2,4,8,...,16384,32768           */
DCL R.LOOK      DATA   EXTERNAL;  /* 2,4,8,64,128,16                   */

DCL ALLOC.EXAMOUNT PROC(FIXED)        EXTERNAL; 	/* ALLOCATE & ZERO OUT EXTERNAL MEMORY */
DCL STOP.HELD      PROC               EXTERNAL; 	/* RETURNS TRUE IF STOP BUTTON HELD */
DCL SET.ERROR      PROC (FIXED,ARRAY) EXTERNAL; 	/* SETS ERTYP & SAVES ERROR STRING IN ERSYM */

DCL STOP.DISK      		  PROC EXTERNAL;  			/* STOP DISK IO FOR MONO SAMPLING */
DCL RUN.SYN.LOOP   		  PROC EXTERNAL;
DCL CHILL.OUT.AND.RUN.SYN PROC EXTERNAL;
DCL RUN.HOST              PROC EXTERNAL;

dcl AEE.Screen.State  fixed external; /*  0 = AEE never has been activated  */
                                      /*  1 = AEE is now running            */
                                      /* -1 = AEE was run but is closed now */

/* NOTE !!! - push.pdl and pop.pdl can only be called from recursive */
/* procedures that declare at least one recursive variable inside    */
/* themselves                                                        */

dcl measure.pdl proc returns(fixed) external;
dcl zero.pdl    proc external;
dcl push.pdl.to.xmem.routine  proc (fixed) external;
dcl pop.pdl.from.xmem.routine proc         external;

dcl push.system.pdl  lit 'begin;dcl a label;call push.pdl.to.xmem.routine(read("312")); goto a;a:; end;';
dcl pop.system.pdl   lit 'begin;dcl a label;call pop.pdl.from.xmem.routine; goto a;a:; end;';

INSERT  ':SYNAUXS:GMODLITS';    /* LITERALS FOR THIS MODULE       */

LIBRARY ':-xpl:libs:intrprtr';	/* so that interpreter_is_running gets set up first */
LIBRARY ':SYNLIBS:GLOBLIB';     /* LIBRARY THE CODE               */
