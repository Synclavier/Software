/* TTYDCL - $Title Serial Driver (D50) Routines and External Declarations   Modified:   05/02/89 - TSS - Merged changes for Optical disk to DTD transfer project   04/27/89 - MWH - Support for multiple D115 boards & channels; timeouts    1/13/89 - PF  - Monster MIDI code   10/13/88 - MWH - Add RS422 driver   09/23/88 - MWH - Add protocol emulator / debugger   09/14/88 - TSS - Added dcls for protocol message handling   05/28/88 - TSS - Added FLUSH.FKEYS.FROM.D50.BUF dcl*/dcl (num.of.d50.in.chars)fixed external;   /* # of d50 input chars in input buffer */dcl (next.d50.in.char)   fixed external;   /* used to peek ahead at next character */dcl (char.time)          fixed external;   /* time of character returned by get.next.d50.in.char */dcl mac.esc.seq          fixed external;  /* MAC is getting an ESC sequence */dcl ignore.mac.mouse     fixed external;  /* Throw away MAC mouse reports */dcl protocol.trap        fixed external;  /* enter protocol debugger */dcl (img.ptr)            fixed external;    /* (4) external memory sectors set during initialization for screen dump image */dcl (screen.x)           fixed external;    /* x position in screen image area */dcl (screen.y)           fixed external;    /* y position in screen image area */dcl (adm)                fixed external;    /* true for adm terminal */dcl (vt100)              fixed external;    /* true for vt100 terminal */dcl (mg600)              fixed external;    /* true for mg600 terminal */dcl (dq640)              fixed external;    /* true for dq640 terminal */dcl (vt640)              fixed external;    /* true for vt640 terminal */dcl (gtype)              fixed external;    /* graphics type                */dcl screen.width         fixed external;    /* dimensions of terminal screen in pixels */dcl screen.height        fixed external;dcl char.width           fixed external;    /* font size of terminal alpha character */dcl char.height          fixed external;dcl tchar.width          fixed external;    /* Corruption! These represent graphics */dcl tchar.height         fixed external;    /* coordinates but they really do belong here */dcl ch.mode              fixed external;    /* 0=normal chars active, 1=alternate chars active */dcl screen.dump          fixed external;    /* 1 => screen dump feature is on. 0 => off */ dcl err.displayed        fixed external;    /* set to 1 if an error message is on the screen */dcl run.syn              fixed external;    /* set to 1 to allow calls to RUN.SYN.LOOP, 0 to disallow */dcl num.of.d50.out.chars fixed external;    /* num of chars in d50 output buffer */dcl get.next.d50.in.char  proc external;   /* get next d50 input character */dcl Flush.Arrow.Keys.From.D50.Buf proc external;  /* toss arrow key in chars */dcl Flush.FKeys.From.D50.Buf proc external;  /* toss PF & Function key in chars */dcl tty_wait         proc external;        /* wait for terminal to finish printing */dcl run.syn.tty.wait proc external;        /* wait for characters and run syn loop */dcl pc               proc(fixed) external; /* print a character by putting it on list of chars to print */dcl pcr              proc external;        /* prints a carriage return, linefeed */dcl ps               proc(fixed array) external; /* prints a string */dcl psr              proc(fixed array) external; /* prints a string followed by a carriage return, linefeed */dcl ch.set           proc(fixed) external;       /* puts terminal into NORMAL or ALTERNATE ch mode */dcl cpos             proc(fixed,fixed) external; /* position cursor on terminal screen */dcl pnum             proc(fixed,fixed) external; /* print a positive decimal number (0 to 65535) */dcl pnumhex          proc(fixed) external;       /* print a 16-bit hexadecimal number in the form: HFFFF */dcl set.term.attr            proc(fixed) external; /* puts terminal into any state imaginable */dcl erase.to.end.of.line     proc external;dcl erase.to.start.of.line   proc external;dcl erase.to.end.of.screen   proc external;dcl erase.to.start.of.screen proc external;dcl clear_screen             proc external; /* clear alpha plane of screen */dcl save.cursor              proc external; /* save current (x,y) pos and attribute state */dcl restore.cursor           proc external; /* restore (x,y) pos and attribute state to saved values */dcl SET.SCROLLING.REGION     proc(fixed,fixed) external;dcl REVERSE.INDEX            proc external;dcl NEXT.LINE                proc external;dcl ERASE.REST.OF.LINE       proc(fixed,fixed) external;dcl REVERSE.VIDEO            proc(fixed) external; dcl SCROLL.SCREEN            proc (fixed,fixed,fixed) external;dcl INITIALIZE.TERMINAL.TYPE proc external;insert ':synauxs:ttylits';library ':synlibs:globlib'; /* library globmod first to get mem.siz and examount set up */library ':synlibs:ttylib';