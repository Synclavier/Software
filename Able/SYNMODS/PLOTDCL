/* PLOTDCL  $Title Plotting Library and External Declarations */
/*
   6-29-87 EG      Added gdiam, a procedure to draw a diamond shape for dragging objects
   6-26-87 EG      Added gbow, a procedure to draw bow-tie shape for dragging objects
   2-09-87 MPB,EG  Added gpos.x,gpos.y,tpos.x,tpos.y,limit.x,limit.y,set.fill.pattern
*/
dcl #mode           fixed external; /* 0=transparent, 1=alpha, 2=vector, 3=#point*/
dcl (#lastx,#lasty) fixed external; /* coordinates of last #point*/
dcl #data.level     fixed external; /* 0 for white, 1 for black, 2 for complemented  */
dcl #blockmode      fixed external; /* 1: vector mode with block mode */

dcl crosshair.on    fixed external; /* if mouse cursor crosshair on */
dcl mouse.replot    fixed external; /* if mouse cursor needs to be refreshed */

dcl #wind           array external; /* problem coordinates */ 
dcl #view           array external; /* display area        */

dcl initialize.graphics.terminal proc external;

dcl enter.point.mode             proc external;
dcl enter.vector.mode            proc external;
dcl enter.transparent.mode       proc external;
dcl enter.alpha.mode             proc external;
dcl enter.nonalias.text          proc external;
dcl alias.lines.off              proc external;
dcl alias.lines.on               proc external;

dcl clear.term       proc external;    /* clear screen, leave in adm mode */
dcl data_level       proc(fixed) external;
dcl line_type        proc(fixed) external;
dcl Set.Fill.Pattern proc(fixed) external;
dcl char_size        proc(fixed) external;
dcl pstring          proc(array) external;
dcl imove            proc(fixed,fixed) external;
dcl draw             proc(fixed,fixed) external; 
dcl plot             proc(fixed,fixed) external; 
dcl move_to          proc(fixed,fixed) external; 
dcl connect          proc(fixed,fixed,fixed,fixed) external; /* connects users (a,b) to (c,d) */
dcl axes             proc (fixed,fixed,fixed,fixed) external; 
dcl border           proc external; /* border around viewport */
dcl punits           proc(fixed,fixed) external; /* defines number of pixels on terminal screen */
dcl window           proc(fixed,fixed,fixed,fixed) external; /* store window (plot limits in user units) in #vector*/
dcl viewport         proc(fixed,fixed,fixed,fixed) external; /* store viewport in #vector*/
dcl blockmode_on     proc external;
dcl blockmode_off    proc external;
dcl draw_rect        proc(fixed,fixed,fixed,fixed) external; /* Draw a hollow rectangle */
dcl draw_text        proc(fixed array,fixed,fixed,fixed) external; /* draw text in large alpha characters */
dcl draw_vertical_label  proc(array) external;
dcl area.fill        proc(fixed,fixed,fixed,fixed,fixed,fixed) external;
dcl gpos.x           proc(fixed) returns (fixed) external;
dcl gpos.y           proc(fixed) returns (fixed) external;
dcl gpix.x           proc(fixed) returns (fixed) external;
dcl gpix.y           proc(fixed) returns (fixed) external;
dcl tpos.x           proc(fixed) returns (fixed) external;
dcl tpos.y           proc(fixed) returns (fixed) external;
dcl limit.x          proc(fixed) returns (fixed) external;
dcl limit.y          proc(fixed) returns (fixed) external;
dcl gbox             proc(fixed,fixed,fixed,fixed,fixed) external;
dcl gbow             proc(fixed,fixed,fixed,fixed) external;
dcl gdiam            proc(fixed,fixed) external;
dcl DRAW.ICON        proc(fixed array,fixed,fixed) external;
dcl push.graphics.attributes  proc external;
dcl pop.graphics.attributes   proc external;

insert ':synauxs:plotlits';    /* get mode lits */

library ':synlibs:globlib';    /* library globmod first to get mem.siz and examount set up */
library ':synlibs:ttylib';     /* library ttymod first to set up terminal variables */
library ':synlibs:plotlib';    /* now library plot mods */
