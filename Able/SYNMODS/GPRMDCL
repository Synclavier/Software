/* GPRMDCL -- EXTERNAL DECLARATIONS FOR GPRMMOD */DCL (COPY.BANK)   FIXED EXTERNAL;    /* SET TO NONZERO TO COPY TO EXT MEM                         */DCL (DISK.DEV)    FIXED EXTERNAL;    /* DEVICE THAT WAS READ INTO BUFFER                          */DCL (DISK.SEC)    FIXED EXTERNAL;    /* SECTOR NUMBER OF DISK THAT CORRESPONDS TO START OF BUFFER */DCL (BUFR.START)  FIXED EXTERNAL;    /* CORE LOCATION OF START OF BUFFER */DCL (MAX.BUF.LEN) FIXED EXTERNAL;    /* MAX LENGTH OF BUFFER BEFORE WE CREAM SOMETHING */DCL (ACT.BUF.LEN) FIXED EXTERNAL;    /* ACTIVE LENGTH OF BUFFER                */DCL (BUF.R.PTR)   FIXED EXTERNAL;    /* BUFFER READING POINTER                 */DCL (MAX.LEN.MSB) FIXED EXTERNAL;DCL (MAX.LEN.LSB) FIXED EXTERNAL;DCL (CHUNK.SIZE)  FIXED EXTERNAL;    /* NORMALLY BUFFER IN 32 SECTOR CHUNKS, FOR SPEED */DCL PRIME.IO.BUFFER PROC(FIXED, FIXED, FIXED, /* DISK DEV, SEC, WORD */                    FIXED, FIXED,             /* SLEN MSB, SLEN LSB  */                    FIXED, FIXED,             /* BUF START, BUF LEN  */                    FIXED) EXTERNAL;          /* CHUNK SIZE          */DCL G.NEXT         PROC        EXTERNAL;        /* GET NEXT WORD */DCL G.NEXT.RECORD  PROC(ARRAY,FIXED) EXTERNAL;  /* GET RECORD    */DCL SKIP.WRDS      PROC(FIXED) EXTERNAL;        /* SKIP N WORDS ON DISK */DCL ABRT.LIMIT FIXED EXTERNAL;          /* SET TO NONZERO TO ABORT DISKREADING IF BANK WON'T FIT IN MEMORY */DCL (INDEX.DEV)  ARRAY EXTERNAL;        /* INDEX CONSTRUCTED BY 'FIND.DISK.TIM' */DCL (INDEX.SEC)  ARRAY EXTERNAL;DCL (INDEX.PTR)  ARRAY EXTERNAL;DCL SKIP.DISK.PAR PROC EXTERNAL;        /* PROCEDURE TO SKIP OVER 1 PARTIAL TIMBRE ON DISK */DCL FIND.DISK.TIM PROC(FIXED) EXTERNAL; /* TIMBRE # - RETURN CORE POINTER TO TIMBRE */LIBRARY ':SYNLIBS:GPRMLIB';             /* GET THE CODE */