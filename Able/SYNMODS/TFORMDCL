/* TFORMDCL  $TITLE  terminal formatting routine dcl's and library call *//*   07/10/90 - PF  - Support for Meter Map:  Changed number of arguments to                    CONV.BEATS.TO.STR;  Added CONV.MEASURES.BEATS.TO.STR   05/12/88 - eg  - added conv.32bit.int.to.str   04/30/87 - ts  - added arg to CONV.BEATS.TO.STR*/dcl APPENDC                      proc(array,fixed)  returns(fixed) external;    /* add ch to end of str */dcl UCASE                        proc(fixed)        returns(fixed) external; /* uppercase passed char */dcl MIN                          proc(fixed,fixed)  returns(fixed) external; /* return unsigned min of two values */dcl MAX                          proc(fixed,fixed)  returns(fixed) external; /* return unsigned max of two values */dcl APPEND.TO.STR                proc(array,array)  returns(fixed) external;  /* appends s2 to s1 */dcl COPY.STRING                  proc(array,array)  returns(fixed) external;  /* copies  s1 to s2 */dcl Remove.Spaces.From.String    proc (array,array) external; /* ==> removes all leading,imbedded, or trailing garbage, uppercases what's left */dcl UpperCase.String             proc (array,array) external; /* ==> removes leading spaces from a string */dcl Strip.Leading.Spaces         proc (array,array) external; /* ==> removes leading spaces from a string */dcl Append.Bytes.To.Str          proc (array,fixed,array,fixed) external;dcl EQSTR                        proc (array,array) returns(fixed) external;dcl CONV.STR.TO.FIXED            proc(array,fixed,fixed) returns (fixed) external; /* Read str Routine and Convert to a Numeric Value */dcl CONV.STR.TO.SEC.MSEC         proc(array,array) returns(boolean) external; dcl CONV.MIN.SEC.STR.TO.SEC.MSEC proc(array,array) returns(boolean) external;dcl CONV.STR.TO.BEATS            proc(array,fixed,fixed,fixed,array) returns(boolean) external; /* parses a time from str(), puts in MEAS:BEAT.FRACTION */dcl CONV.STR.TO.FEET             proc(array,array) returns(boolean) external; /* parses a time from str(), puts in MEAS BEAT or FEET/FRAMES */dcl CONV.STR.TO.SMPTE            proc(array,array) returns(boolean) external; dcl CONV.STR.TO.SFTIME           proc(array,array) returns(boolean) external; /* parses a time from str(), puts in SEC, MSEC, MCSEC */dcl CONV.STR.TO.KEY#             proc(array)       returns(boolean) external; /* convert the pitch in the passed str to a key number */dcl CONV.FIXED.TO.STR            proc(fixed,fixed,fixed,fixed,array) returns(fixed) external;dcl CONV.SEC.MSEC.TO.STR         proc(array,array,fixed,fixed) returns(fixed) external;dcl CONV.SEC.MSEC.TO.MIN.SEC.STR proc (array,array,fixed,fixed) returns (fixed) external;dcl CONV.SFTIME.TO.STR           proc(array,array,fixed,fixed) returns(fixed) external;dcl CONV.BEATS.TO.STR            proc(array,array,fixed,fixed) returns(fixed) external;dcl CONV.MEASURES.BEATS.TO.STR   proc(array,fixed,array,fixed,fixed) returns(fixed) external;dcl CONV.FEET.TO.STR             proc(array,array,fixed,fixed) returns(fixed) external;dcl CONV.SMPTE.TO.STR            proc(array,array,fixed,fixed) returns(fixed) external;dcl CONV.KEY#.TO.STR             proc(fixed,array)             returns(fixed) external;dcl CONV.STR.TO.TIME             proc(fixed array) returns (fixed) external; /* convert time string to encoded time format */dcl CONV.TIME.TO.STR             proc(fixed,fixed array,fixed) external; /* convert encoded time to string format */dcl CONV.STR.TO.DATE             proc(fixed array) returns (fixed) external; /* convert date string to encoded date format */dcl CONV.DATE.TO.STR             proc(fixed,fixed array) external; /* convert encoded date to string */dcl CONV.HEXSTR.TO.FIXED         proc(fixed array) external;       /* converts hex string to fixed */dcl CONV.FIXED.TO.HEXSTR         proc(fixed,fixed array) external; /* fixed to hex string */dcl CONV.32BIT.INT.TO.STR        PROC (array, array) external;insert  ':synauxs:tformlit';library ':synlibs:tformlib';