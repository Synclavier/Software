/* Common terminal utilities and variables (common to TERMUTIL and TERMUT) */


/* input terminator types (GDEC, GOCT, GSTRING, etc.) */

dcl g#return    lit '"000001"'; /* return on carriage return */
dcl g#delete    lit '"000002"'; /* return on delete if nothing typed */
dcl g#updown    lit '"000004"'; /* return on cursor up or cursor down */
dcl g#leftright lit '"000010"'; /* return on cursor left or cursor right */
dcl g#home      lit '"000020"'; /* return on cursor home */
dcl g#tab       lit '"000040"'; /* return on tab */
dcl g#pf        lit '"000100"'; /* return on PF keys */
dcl g#kp        lit '"000200"'; /* return on KP keys */
dcl g#slash     lit '"000400"'; /* return on slash */
dcl g#rest      lit '"100000"'; /* return on anything else (except digits) */
dcl g#anything  lit '"177777"'; /* return on anything other than a digit */


dcl XON_XOFF        lit 'call #xon_xoff';
dcl SCREEN_SIZE     lit 'call #screen_size';
dcl CKREAD          lit 'call #ckread';
dcl FLUSH_TERM      lit 'call #flush_term';
dcl WCHAR           lit 'call #wchar';
dcl WAIT            lit 'call #wait';
dcl CLEAR_TYPEAHEAD lit 'call #clear_typeahead';
dcl ONUM            lit 'call #onum';
dcl LONUM           lit 'call #lonum';
dcl HNUM            lit 'call #hnum';
dcl UNUM            lit 'call #unum';
dcl LNUM            lit 'call #lnum';
dcl PNUM            lit 'call #pnum';
dcl FPRINT          lit 'call #fprint';
dcl CRLF            lit 'call #crlf';
dcl POS             lit 'call #pos';
dcl ERASE_LINE      lit 'call #erase_line';
dcl CLEAR_SCREEN    lit 'call #clear_screen';
dcl PSTRING         lit 'call #pstring';
dcl PSTRINGR        lit 'call #pstringr';
dcl PCMD            lit 'call #pcmd';
dcl ERASE_COMMAND   lit 'call #era_cmd';
dcl REVERSE         lit 'call #reverse';
dcl PSKIP           lit 'call #PSKIP';
dcl SET_SCROLL      lit 'call #set_scroll';
dcl GSTRING         lit 'call #gstring';
dcl GET_STRING      lit 'call #get_string';

dcl #xon_xoff        proc(boolean) external; /* enable/disable XOn/XOff handshaking */
dcl #screen_size     proc(fixed,fixed) external; /* set the size of the screen */
dcl #ckread          proc external; /* check if any input from terminal and read to buffer (interrupts OFF only) */
dcl #flush_term      proc external; /* wait for terminal to finish printing (interrupts ON only) */
dcl rchar            proc returns (fixed) external;
dcl #wchar           proc(fixed) external;
dcl #wait            proc(fixed) external;
dcl peek             proc returns (fixed) external; /* return next character if one, otherwise -1 */
dcl term_idle        proc returns (boolean) external;
dcl term_idle_wait   proc returns (boolean) external;
dcl #clear_typeahead proc external; /* clear the type-ahead buffer */
dcl #onum            proc(fixed,fixed) external; /* output an octal number (0 to 177777) */
dcl #lonum           proc(fixed,fixed,fixed) external; /* output an octal long number (0 to 37777777777) */
dcl #hnum            proc(fixed,fixed) external; /* output an hexadecimal number (0 to FFFF) */
dcl #unum            proc(fixed,fixed) external; /* output an unsigned number (0 to 65535) */
dcl #lnum            proc(fixed,fixed,fixed) external; /* output an unsigned long number (0 to 4,294,967,295) */
dcl #pnum            proc(fixed,fixed) external; /* output a signed number (-32768 to 32767) */
dcl #fprint          proc(floating,fixed,fixed) external; /* floating point print */
dcl #crlf            proc external; /* print a CR and then LF (new line) */
dcl #pos             proc(fixed,fixed) external; /* positions cursor at line (0-lpp) and col (0-cpl) */
dcl #erase_line      proc external; /* erase rest of line */
dcl #clear_screen    proc external; /* clear the screen */
dcl #pstring         proc(fixed array) external; /* write a string to the terminal */
dcl #pstringr        proc(fixed array) external; /* does a pstring followed by a CRLF */
dcl #pcmd            proc(fixed array) external; /* print a string on the command line (bottom line) */
dcl #era_cmd         proc external; /* erase the command line */
dcl #reverse         proc(boolean) external; /* reverse video if possible */
dcl #pskip           proc(fixed) external;
dcl #set_scroll      proc(fixed,fixed) external;
dcl goct             proc(fixed) returns(fixed) external; /* input an octal number */
dcl ghex             proc(fixed) returns(fixed) external; /* input an hexadecimal number */
dcl guns             proc(fixed) returns(fixed) external; /* input an unsigned number */
dcl gdec             proc(fixed) returns(fixed) external; /* input a decimal number */
dcl getoct           proc returns(fixed) external; /* input an octal number */
dcl gethex           proc returns(fixed) external; /* input an hexadecimal number */
dcl getuns           proc returns(fixed) external; /* input an unsigned number */
dcl getnum           proc returns(fixed) external; /* input a number */
dcl #gstring         proc(fixed array,boolean,fixed array,fixed,fixed) external; /* string input routine */
dcl #get_string      proc(fixed array,boolean,fixed array,fixed) external; /* string input routine */
dcl get_yn           proc(fixed array) returns (boolean) external; /* print prompt, wait for Y or N char */

dcl control.seq boolean external; /* true if in control seq to terminal */
dcl dq640       boolean external; /* true if this is a DQ640 */
dcl tty.no.host boolean external; /* true to disable host running */

dcl cmdline     fixed external; /* command line number of out of 0-23 lines on screen */
