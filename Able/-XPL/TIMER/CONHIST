/* control the histogram producer *//* this routine controls the two variables:  *//* pc.logging       pc.save                  */ /*.  S  ==  start accumulating the histogram.  F  ==  finish up the histogram.  W  ==  write out the result of the histogram.  R  ==  read in the result of a previous histogram.  P  ==  print out the result of the histogram*/control.logger: proc(chr);/* call this routine in your spare time */   dcl (chr, temp, i, j) fixed;    chr = (chr and "137"); /* get character and map to uppercase */   if chr = 0 then do; invoke break; return; end;   print character(chr);   if chr = byte('S', 0) then do; /* start the logging */      do i = 0 to #samp - 1;         pcbuf (i) = 0;      end;      pc.logging = true; /* do the logging */   end;/* start the logging */   else if chr = byte('F', 0) then do; /* finish */      pc.logging = false; /* reset the flag */   end; /* finish */   else if chr = byte('W', 0) then do; /* write to disk */      pc.save = true; /* try the save */      print 'histogram saved';   end; /* write out the data */   else if chr = byte('R', 0) then do; /* read from disk */      if locate ('pclog', 1) /* if we find it */      then call readdata (f#ms_sector, f#ls_sector, pcbuf, #samp);   end; /* read in the data */   else if chr = byte('P', 0) then do; /* print out results */      j = 0; /* start tally */      do i = 0 to #samp - 1; /* for each sample value */         if pcbuf (i) <> 0 then do; /* if this address logged */            temp = pcbuf (i); j = j + temp;            print octal(shl(i, 5)), ': ', temp, '  ',;            do while (temp <> 0);               print '*',;               temp = shr(temp, 1);            end;            print;         end; /* of if address logged */      end; /* of for each sample value */      print ' Total: ', j;   end; /* of print out results */   else if chr = byte('H', 0) then do; /* print help */      print 'S: start accumulating the histogram';      print 'F: finish up the histogram';      print 'W: write out the result of the histogram';      print 'R: read in the result of a previous histogram';      print 'P: print out the result of the histogram';   end; /* of print help */   else print '',;end control.logger; when ttiint then call control.logger (rcvdcharacter);