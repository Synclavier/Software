TTL WHEN STATEMENT HANDLER**THE FOLLOWING ROUTINE IS USED TO ACTIVATE THE USER*'WHEN BREAK' AND 'WHEN DISKERROR' STATEMENTS.**IT IS PASSED A # IN R0 THAT INDICATES WHICH USER WHEN STATEMENT IS TO*BE CALLED.  ALL REGISTERS ARE PRESERVED IN THE CALL TO L.BRK.*R.BRK:DATA Z.BRK POINTER TO END OF SEGMENTif ModelCD10 to MR12D stack returnendifIM(SREG) TO ATRA SAVE REGS ON STACKR0 TO R4 AND SAVE OTHER REGISTERSR1 TO R5R2 TO R6R3 TO R7PCI TO R0 GET PTR TO WHEN TABLEDATA CONTAB+INTTAB PTR MR0 TO LOA0 SEE IF INTERRUPT ROUTINE INCLUDEDRE(A.BRK) TO RTZE IF NOT, THEN SKIPR4 TO ADD0 ADD IN OFFSET TO SEE IF WHEN STATEMENT IS THERE MR0 TO LOA0 SEE IF A BREAK ROUTINEif ^ModelCRE(A.BRK) TO RTZE IF NOT, THEN SKIPMR15I TO ATNV INCREMENT STACKR17I TO MR15 STORE RETURN ON TOP OF STACKRE(B.BRK) TO RTRA AFTER RETURN,  SKIP AHEADR0 TO ATRA AND ACTIVATE THE WHEN BREAK STATEMENTB.BRK:R15 TO R0 DECREMENT STACK POINTERIM(1) TO SUB0 BY ONER0 TO R15 AND RESTORE ITendif of ^ModelCif ModelCR0 to ATNZ call the BREAK routine if it's thereendifA.BRK:R4 TO R0 RESTORE REGSR5 TO R1R6 TO R2R7 TO R3IM(LREG) TO ATRA LOAD REGS AND RETURNZ.BRK:DATA 0 END OF SEGMENT