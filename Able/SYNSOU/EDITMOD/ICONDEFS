/* :SYNSOU:EDITMOD:ICONDEFS - $title Routines for defining icons used in sequence editor *//* define sequence editor frame */DEFINE.FRAME.ICON: proc(id#, col, row) public swapable;   dcl id#       fixed;   dcl (row, col) fixed;   write("313") = addr(misc.buf(0));   /* dialog box */   mr13i = O#Icon.Connect;   mr13i = -100;     mr13i = -100;   mr13i = 6450; mr13i = -100;   mr13i = O#Icon.Plot;      mr13i = 6450;     mr13i = -690;         mr13i = O#Icon.Plot;      mr13i = -100;     mr13i = -690;   mr13i = O#Icon.Plot;      mr13i = -100;     mr13i = -100;   /*  edit times box */   mr13i = O#Icon.Connect;   mr13i = -100;     mr13i = -700;   mr13i = 6450; mr13i = -700;   mr13i = O#Icon.Plot;      mr13i = 6450;     mr13i = -1000;         mr13i = O#Icon.Plot;      mr13i = -100;     mr13i = -1000;   mr13i = O#Icon.Plot;      mr13i = -100;     mr13i = -700;   /*  display box */   mr13i = O#Icon.Connect;   mr13i = -100;     mr13i = -1000;   mr13i = 6450; mr13i = -1000;   mr13i = O#Icon.Plot;      mr13i = 6450;     mr13i = -2300;         mr13i = O#Icon.Plot;      mr13i = -100;     mr13i = -2300;   mr13i = O#Icon.Plot;      mr13i = -100;     mr13i = -1000;   /* main menu box */   mr13i = O#Icon.Connect;   mr13i = 6480;  mr13i = -100;       mr13i = 8000; mr13i = -100;   mr13i = O#Icon.Plot;      mr13i = 8000;  mr13i = -690;         mr13i = O#Icon.Plot;      mr13i = 6480;  mr13i = -690;   mr13i = O#Icon.Plot;      mr13i = 6480;  mr13i = -100;   /* sub menu box */   mr13i = O#Icon.Connect;   mr13i = 6480;  mr13i = -700;     mr13i = 8000; mr13i = -700;   mr13i = O#Icon.Plot;      mr13i = 8000;  mr13i = -2300;         mr13i = O#Icon.Plot;      mr13i = 6480;  mr13i = -2300;   mr13i = O#Icon.Plot;      mr13i = 6480;  mr13i = -700;   /* edit time lines */   mr13i = O#Icon.Connect;   mr13i = 3205;  mr13i = -700;   mr13i = 3205; mr13i = -1000;   mr13i = O#Icon.Connect;   mr13i = 3205;  mr13i = -800;   mr13i = 6450; mr13i = -800;   mr13i = O#Icon.Connect;   mr13i = 3205;  mr13i = -900;   mr13i = 6450; mr13i = -900;   mr13i = O#Icon.Connect;   mr13i = 4450;  mr13i = -700;   mr13i = 4450; mr13i = -800;   mr13i = O#Icon.Connect;   mr13i = 5450;  mr13i = -700;   mr13i = 5450; mr13i = -800;   /* memory lines */   mr13i = O#Icon.Connect;   mr13i = 3605;  mr13i = -900;   mr13i = 3605; mr13i = -1000;   mr13i = O#Icon.Connect;   mr13i = 4005;  mr13i = -900;   mr13i = 4005; mr13i = -1000;   mr13i = O#Icon.Connect;   mr13i = 4405;  mr13i = -900;   mr13i = 4405; mr13i = -1000;   mr13i = O#Icon.Connect;   mr13i = 4805;  mr13i = -900;   mr13i = 4805; mr13i = -1000;   mr13i = O#Icon.Connect;   mr13i = 5205;  mr13i = -900;   mr13i = 5205; mr13i = -1000;   mr13i = O#Icon.Connect;   mr13i = 5605;  mr13i = -900;   mr13i = 5605; mr13i = -1000;   mr13i = O#Icon.Connect;   mr13i = 6005;  mr13i = -900;   mr13i = 6005; mr13i = -1000;   mr13i = O#Icon.End;   id#=Define.Graphics.Icon(id#, col, row, 0, misc.buf);   return id#;end DEFINE.FRAME.ICON;DEFINE.TRK.GRID.ICON: proc(id#, col, row) swapable;   dcl id#        fixed;   dcl (row, col) fixed;   dcl hid        fixed;   /* first define horizontal line */   write("313") = addr(misc.buf(0));   mr13i = O#Icon.Connect;   mr13i = -100;  mr13i = 100;  mr13i = 6450;  mr13i = 100;   mr13i = O#Icon.End;   hid=Define.Graphics.Icon(S#AA, col, row, 0, misc.buf);   /* now define grid */   write("313") = addr(misc.buf(0));	mr13i	= O#Icon.MoveTo;	mr13i	= 0;	mr13i	= 1200;	mr13i	= O#Icon.InsertIcon;	mr13i	= hid;	mr13i	= O#Icon.MoveTo;	mr13i	= 0;	mr13i	= 1000;	mr13i	= O#Icon.InsertIcon;	mr13i	= hid;	mr13i	= O#Icon.MoveTo;	mr13i	= 0;	mr13i	= 1100;	mr13i	= O#Icon.InsertIcon;	mr13i	= hid;	mr13i	= O#Icon.MoveTo;	mr13i	= 0;	mr13i	=  800;	mr13i	= O#Icon.InsertIcon;	mr13i	= hid;	mr13i	= O#Icon.MoveTo;	mr13i	= 0;	mr13i	=  900;	mr13i	= O#Icon.InsertIcon;	mr13i	= hid;	mr13i	= O#Icon.MoveTo;	mr13i	= 0;	mr13i	=  600;	mr13i	= O#Icon.InsertIcon;	mr13i	= hid;	mr13i	= O#Icon.MoveTo;	mr13i	= 0;	mr13i	=  700;	mr13i	= O#Icon.InsertIcon;	mr13i	= hid;	mr13i	= O#Icon.MoveTo;	mr13i	= 0;	mr13i	=  400;	mr13i	= O#Icon.InsertIcon;	mr13i	= hid;	mr13i	= O#Icon.MoveTo;	mr13i	= 0;	mr13i	=  500;	mr13i	= O#Icon.InsertIcon;	mr13i	= hid;	mr13i	= O#Icon.MoveTo;	mr13i	= 0;	mr13i	=  200;	mr13i	= O#Icon.InsertIcon;	mr13i	= hid;	mr13i	= O#Icon.MoveTo;	mr13i	= 0;	mr13i	=  300;	mr13i	= O#Icon.InsertIcon;	mr13i	= hid;	mr13i	= O#Icon.MoveTo;	mr13i	= 0;	mr13i	=  100;	mr13i	= O#Icon.InsertIcon;	mr13i	= hid;	mr13i	= O#Icon.Connect;	mr13i	= 3205;	mr13i	= 0;	mr13i	= 3205;	mr13i	= 1400;	/*	vertical line down center	*/	mr13i	= O#Icon.End;	id#=Define.Graphics.Icon(id#, col, row, 0, misc.buf);   return id#;end DEFINE.TRK.GRID.ICON;DEFINE.SETUP.ICON: proc(id#, col, row) public swapable;   dcl id#        fixed;   dcl (row, col)  fixed;   write("313") = addr(misc.buf(0));   mr13i = O#Icon.Plot;  mr13i =    0;  mr13i = 100;    mr13i = O#Icon.Plot;  mr13i =  500;  mr13i = 100;   mr13i = O#Icon.Plot;  mr13i =  500;  mr13i =   0;    mr13i = O#Icon.Plot;  mr13i =    0;  mr13i =   0;                            /*       x1           y1            x2           y2 */   mr13i = O#Icon.Connect; mr13i =  50;  mr13i =  10; mr13i =   50; mr13i =  15;    /* dot */   mr13i = O#Icon.Connect; mr13i =  50;  mr13i =  30; mr13i =   50; mr13i =  90;    /* vert line */   mr13i = O#Icon.Connect; mr13i =  35;  mr13i =  50; mr13i =   65; mr13i =  50;    /* crossbar  */                        mr13i = O#Icon.Connect; mr13i =  125; mr13i =  10; mr13i =   125; mr13i =   15;   mr13i = O#Icon.Connect; mr13i =  125; mr13i =  30; mr13i =   125; mr13i =   90;   mr13i = O#Icon.Connect; mr13i =  110; mr13i =  75; mr13i =   140; mr13i =   75;   mr13i = O#Icon.Connect; mr13i =  200; mr13i =  10; mr13i =   200; mr13i =   15;   mr13i = O#Icon.Connect; mr13i =  200; mr13i =  25; mr13i =   200; mr13i =   30;   mr13i = O#Icon.Connect; mr13i =  200; mr13i =  40; mr13i =   200; mr13i =   45;   mr13i = O#Icon.Connect; mr13i =  200; mr13i =  55; mr13i =   200; mr13i =   60;   mr13i = O#Icon.Connect; mr13i =  300; mr13i =  10; mr13i =   300; mr13i =  15;       mr13i = O#Icon.Connect; mr13i =  300; mr13i =  30; mr13i =   300; mr13i =  90;       mr13i = O#Icon.Connect; mr13i =  285; mr13i =  40; mr13i =   315; mr13i =  40;                            mr13i = O#Icon.Connect; mr13i =  375; mr13i =  10; mr13i =   375; mr13i =   15;   mr13i = O#Icon.Connect; mr13i =  375; mr13i =  30; mr13i =   375; mr13i =   90;   mr13i = O#Icon.Connect; mr13i =  360; mr13i =  85; mr13i =   390; mr13i =   85;   mr13i = O#Icon.Connect; mr13i =  425; mr13i =  10; mr13i =   425; mr13i =   15;   mr13i = O#Icon.Connect; mr13i =  425; mr13i =  25; mr13i =   425; mr13i =   30;   mr13i = O#Icon.Connect; mr13i =  425; mr13i =  40; mr13i =   425; mr13i =   45;   mr13i = O#Icon.Connect; mr13i =  425; mr13i =  55; mr13i =   425; mr13i =   60;   mr13i = O#Icon.end;   id#=Define.Graphics.Icon(id#, col, row, 1, misc.buf);   return id#;end DEFINE.SETUP.ICON;DEFINE.CUT.PASTE.ICON: proc(id#, col, row) public swapable;   dcl id#        fixed;   dcl (row, col)  fixed;   write("313") = addr(misc.buf(0));   mr13i = O#Icon.Plot;  mr13i =    0;  mr13i = 100;    mr13i = O#Icon.Plot;  mr13i =  500;  mr13i = 100;   mr13i = O#Icon.Plot;  mr13i =  500;  mr13i =   0;    mr13i = O#Icon.Plot;  mr13i =    0;  mr13i =   0;    mr13i = O#Icon.Connect; mr13i = 0; mr13i = 33; mr13i = 500; mr13i = 33;   mr13i = O#Icon.Connect; mr13i = 0; mr13i = 66; mr13i = 500; mr13i = 66;      mr13i = O#Icon.Connect; mr13i = 300; mr13i = 0; mr13i = 300; mr13i = 100;    /* | */   mr13i = O#Icon.Connect; mr13i = 310; mr13i = 0; mr13i = 310; mr13i = 100;   mr13i = O#Icon.Connect; mr13i = 240; mr13i = 0; mr13i = 55; mr13i = 100;     /* \ */   mr13i = O#Icon.Connect; mr13i = 250; mr13i = 0; mr13i = 65; mr13i = 100;   mr13i = O#Icon.End;   id#=Define.Graphics.Icon(id#, col, row, 1, misc.buf);   return id#;end DEFINE.CUT.PASTE.ICON;DEFINE.GPAGE.ICON: proc(id#, col, row) public swapable;   dcl id#        fixed;   dcl (row, col)  fixed;   write("313") = addr(misc.buf(0));   /******   mr13i = O#Icon.Plot;  mr13i =  500;  mr13i = 0;    mr13i = O#Icon.MoveTo;mr13i =    0;  mr13i = 60;   mr13i = O#Icon.Plot;  mr13i =    0;  mr13i = 100;    mr13i = O#Icon.Plot;  mr13i =  500;  mr13i = 100;   mr13i = O#Icon.Plot;  mr13i =  500;  mr13i =  60;    mr13i = O#Icon.Plot;  mr13i =    0;  mr13i =  60;    ******/   mr13i = O#Icon.Plot;  mr13i =    0;  mr13i = 100;    mr13i = O#Icon.Plot;  mr13i =  500;  mr13i = 100;   mr13i = O#Icon.Plot;  mr13i =  500;  mr13i =   0;    mr13i = O#Icon.Plot;  mr13i =    0;  mr13i =   0;    mr13i = O#Icon.Connect; mr13i = 0; mr13i = 75; mr13i = 500; mr13i = 75;   mr13i = O#Icon.Connect; mr13i = 0; mr13i = 60; mr13i = 500; mr13i = 60;   mr13i = O#Icon.Connect; mr13i = 160; mr13i = 0; mr13i = 160; mr13i = 60;   mr13i = O#Icon.Connect; mr13i = 333; mr13i = 0; mr13i = 333; mr13i = 60;   mr13i = O#Icon.End;   id#=Define.Graphics.Icon(id#, col, row, 1, misc.buf);   return id#;end DEFINE.GPAGE.ICON;DEFINE.CHOICE.ICON: proc(id#, col, row) public swapable;   dcl id#        fixed;   dcl (col, row)  fixed;   write("313") = addr(misc.buf(0));   mr13i = O#Icon.Plot;    mr13i =     0; mr13i = 100;    mr13i = O#Icon.Plot;    mr13i =  1800; mr13i = 100;   mr13i = O#Icon.Plot;    mr13i =  1800; mr13i = 0;   mr13i = O#Icon.Plot;    mr13i =     0; mr13i = 0;   mr13i = O#Icon.Connect; mr13i =   600; mr13i = 0;  mr13i =  600; mr13i = 100;   mr13i = O#Icon.Connect; mr13i =  1200; mr13i = 0;  mr13i = 1200; mr13i = 100;   mr13i = O#Icon.Connect; mr13i =  1800; mr13i = 0;  mr13i = 1800; mr13i = 100;   mr13i = O#Icon.End;   id#=Define.Graphics.Icon(id#, col, row, 0, misc.buf);   return id#;end DEFINE.CHOICE.ICON;/* routine to change ok button to hold passed string */CHANGE.OK: proc(width, str) public swapable;	dcl width	fixed;	//	character width for okay button	dcl str		array;	dcl tmp		fixed;	tmp	= gid(ok.button);	Erase.Object(tmp);	Undefine.Object(tmp);	//	note: button is raised by 6 pixels	6*10/3 = 20	Define.Button.Icon(tmp, 100*dialog.col, (100*dialog.bot)-20, width, str, 1); 	Enable.Object(tmp);	Update.Object(tmp);end CHANGE.OK;/* routine to define ok/cancel buttons and stuff them with passed strings */FILL.OK: proc(width, s1, s2) public swapable;	dcl width		fixed;	//	character width for okay button	dcl (s1, s2)	fixed array;	dcl tmp			fixed;	//	note:	both buttons are raised by 6 pixels	6*10/3 = 20	pid(ok.button, Define.Button.Icon(S#AA, 100*dialog.col, (100*dialog.bot)-20, width, s1, 1));	if (width == 0)	tmp	= s1(0);	else					tmp	= width;	//	note bug:	Define.Button.Icon() limits the string lengths to 64, but the horizonal position of cancel.button	//	did not take such limiting into account.	if (tmp igt 64)	tmp	= 64;	//	separate buttons by 4 transparent characters	pid(cancel.button, Define.Button.Icon(S#AA, 100*(dialog.col+tmp+4), (100*dialog.bot)-20, 0, s2, 0));end FILL.OK;FILL.MIDI.BUTTONS: proc(s1, s2) public swapable;	dcl (s1, s2)	fixed array;	dcl width		fixed;	//	make both buttons as wide as the longer of the two labels	if (s1[0] igt s2[0])	width	= s1[0];	else						width	= s2[0];	pid(set.enables.button, Define.Button.Icon(S#AA, 100*(dialog.col+45), 100*(dialog.bot-1), width, s1, 0));	//	note:	button is raised by 3 pixels	3*10/3 = 10	pid(clr.enables.button, Define.Button.Icon(S#AA, 100*(dialog.col+45), (100*dialog.bot)-10, width, s2, 0));end FILL.MIDI.BUTTONS;