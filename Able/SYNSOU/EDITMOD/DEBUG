DEFINE.DEBUG: proc swapable;   RETURN;   call Set.Auto.Allocation.Id(debug.base);	//	reset where auto-allocation begins   debug.switch = Define.Switch(S#AA,0,0,10,0,'Debug: OFF|Debug: ON');   debug1.switch = Define.Switch(S#AA,0,12,11,0,'Debug1: OFF|Debug1: ON');   ss.switch = Define.Switch(S#AA,0,24,8,0,'SS: OFF|SS: ON');   debug.grp = Group.Objects(S#AA,debug.switch,ss.switch,Get#Screen.Event);end DEFINE.DEBUG;DBUG: proc(str) public SWAPABLE;   dcl str array;   RETURN;   dcl count fixed static;   dcl i fixed;   call pc(27); call ps('[20;24r');   call cpos(23,0);   call pc(a.lf);call pc(a.cr);   call ps('['); call pnum(count,0); call ps(']');   call ps(str);   call pc(sp);   if      (Screen.Event.Group = times.grp)     then call ps('Times Group');   else if (Screen.Event.Group = main.menu.grp) then call ps('Main Menu Group');	else if (Screen.Event.Group = debug.grp)     then call ps('Debug Group');   else if (Screen.Event.Group = button.grp)    then call ps('Button Group');   else if (Screen.Event.Group = current.display.grp)   then call ps('Display Group');   else if (Screen.Event.Group = current.dialog.grp)    then call ps('Dialog Group');   else if (Screen.Event.Group = current.sub.menu.grp)  then call ps('Sub Menu Group');   else do;      call ps('Group: ');       call pnum(Screen.Event.Group,0);   end;      call pc(sp);   if      (Screen.Event.Code = get.ertyp)        then call ps('get.ertyp');   else if (Screen.Event.Code = get.new.seq.info) then call ps('get.new.seq.info');   else if (Screen.Event.Code = get.screen.event) then call ps('get.screen.event');   else if (Screen.Event.Code = get.play.scrolling) then call ps('get.play.scrolling');   else do;      call ps(' Code: ');       call pnum(Screen.Event.Code,0);   end;   call pc(sp);   if      (Screen.Event.Info = S#Deposit)       then call ps('S#Deposit');   else if (Screen.Event.Info = S#MouseSelect)   then call ps('S#Mouse.Select');   else if (Screen.Event.Info = S#MouseActivate) then call ps('S#Mouse.Activate');   else if (Screen.Event.Info = S#KeyActivate)   then call ps('S#Key.Activate');   else do;      call ps(' Info: ');       call pnum(Screen.Event.Info,0);   end;   call pc(sp);   if      (Screen.Event.Id = gid(region.sub.menu))          then call ps('Region Sub Menu');   else if (Screen.Event.Id = gid(cut.paste.button))         then call ps('Cut Paste Button');   else if (Screen.Event.Id = gid(setup.button))             then call ps('Setup Button');   else if (Screen.Event.Id = gid(Region.button))            then call ps('Region Button');   else if (Screen.Event.Id = gid(Dir.button))               then call ps('Dir Button');   else if (Screen.Event.Id = gid(Trk.Mgr.button))           then call ps('Trk.Mgr Button');   else if (Screen.Event.Id = gid(Activity.button))          then call ps('Activity Button');   else if (Screen.Event.Id = gid(record.screen.button))     then call ps('Record Button');   else if (Screen.Event.Id = gid(notation.button))          then call ps('Notation Button');   else if (Screen.Event.Id = gid(ok.button))                then call ps('OK Button');   else if (Screen.Event.Id = gid(cancel.button))            then call ps('Cancel Button');   else if (Screen.Event.Id = gid(mem.buttons))              then call ps('Mem Buttons');   else if (Screen.Event.Id = gid(cur.play.time))            then call ps('Cur.Play.Time');   else if (Screen.Event.Id = gid(time1))                    then call ps('Time 1');   else if (Screen.Event.Id = gid(time2))                    then call ps('Time 2');   else if (Screen.Event.Id = gid(time3))                    then call ps('Time 4');   else if (Screen.Event.Id = gid(t1.grab.icon))             then call ps('Time 1 Grab');   else if (Screen.Event.Id = gid(t2.grab.icon))             then call ps('Time 2 Grab');   else if (Screen.Event.Id = gid(t3.grab.icon))             then call ps('Time 4 Grab');   else if (Screen.Event.Id = gid(t1.label))                 then call ps('Time 1 Label');   else if (Screen.Event.Id = gid(t2.label))                 then call ps('Time 2 Label');   else if (Screen.Event.Id = gid(t3.label))                 then call ps('Time 3 Label');   else if (Screen.Event.Id = gid(speed.fld))                then call ps('Speed');   else if (Screen.Event.Id = gid(bpm.fld))                  then call ps('BPM');   else if (Screen.Event.Id = gid(click.mult.fld))           then call ps('Click Mult');   else if (Screen.Event.Id = gid(click.fld))                then call ps('Click');   else if (Screen.Event.Id = gid(click.on.switch))          then call ps('Click ON/OFF');   else if (Screen.Event.Id = gid(click.mode.switch))        then call ps('Click MODE SWITCH');   else if (Screen.Event.Id = gid(justify.switch))           then call ps('Justify Switch');   else if (Screen.Event.Id = gid(mark.start))               then call ps('Mark Time');   else if (Screen.Event.Id = gid(mark.start.switch))        then call ps('Mark Switch');   else if (Screen.Event.Id = gid(mark.grab.icon))           then call ps('Mark Grab Icon');   else if (Screen.Event.Id = gid(trk.buttons))              then call ps('Track Buttons');   else if (Screen.Event.Id = gid(pitch.xpos.from))          then call ps('transpose from');   else if (Screen.Event.Id = gid(pitch.xpos.to))            then call ps('transpose to');   else do;      call ps(' ID:');      call pnum(Screen.Event.Id,0);    end;   call pc(sp);   call pc(27); call ps('[K');   call pc(27); call ps('[1;24r');   count=count+1;   if single.step then do;      call ps('Waiting.....');      call Get_enable(get.in.char);      call get.next.event;      call get_disable(get.in.char);   end;end DBUG;GET.DEBUG.EVENT: proc(event) returns (fixed) public swapable;   dcl event fixed;   RETURN;   do while 1;      if event <> Get.Null.Event then do;         if debug0 then call dbug('Get.Debug.Event');			if Screen.Event.Group <> debug.grp then return event;         if  (Screen.Event.Info=S#Deposit)                 then do;            /*********************************************            if      (Screen.Event.Id=debug.switch)             and     (Screen.Event.Info=S#Deposit)            then debug0=Fetch.Switch(debug.switch);            else if (Screen.Event.Id=debug1.switch)             and     (Screen.Event.Info=S#Deposit)            then debug1=Fetch.Switch(debug1.switch);            else if (Screen.Event.Id=ss.switch)             and     (Screen.Event.Info=S#Deposit)            then single.step=Fetch.Switch(ss.switch);            else event = Get.Null.Event;            ***********************************************/         end;      end;      event = Get.Next.Edit.Screen.Event;   end;end GET.DEBUG.EVENT;