/*	:SYNSOU:STORMOD:GLOBLITS  $TITLE  Basic Literals & Constants for Screen	*/

/*
Modified:
2000/02/27 - TY  - Added S#FunctionInfo to indirectly accommodate display of sound file loops
1993/08/16 - PF  - Increased TRD storage needs
1993/08/16 - PF  - Increased snaplen from 2048 to 8192
1989/07/03 - SGS - made more room for OBJ_Dialog ids
1989/05/02 - TSS - Merged changes for Optical disk to DTD transfer project
1989/02/22 - SGS - moved DialogGrp, and assoc objs from ARC-LITS
1989/02/22 - SGS - raised smgr group and object id #s
1989/02/21 - SGS - created SFD.PTR (in GLOBMOD:GLOBSOU)
1988/12/01 - cj  - added S#DirTableBin
1988/04/13 - SGS - incremented Max.Window.Lines and decremented Max.Open.Windows
						 to allow for the FullScreenMode display
*/
dcl SFD.Smgr.Sectors lit '27';            // Sectors of TRD storage for screen manager use when on sound file screen
dcl SFD.Used.Sectors	lit '(shr(FMem.Len+255,8)+shr(CMem.Len+255,8)+shr(State.Len+255,8)+shr(SnapLen+255,8))';	/*	reserved for use by Screen	*/
dcl SFD.Name.Sectors lit '256';           // Sectors for storage of long file names; only available if interpreter running

dcl FMem.Base			lit 'SFD.PTR';			/*	store ptrs into file list	*/
dcl FMem.Len			lit '512';				/*	in this sector					*/
	dcl FMEM#Index		lit '0';					/*	file list index value		*/
	dcl FMEM#Sector	lit '1';					/*	abs sector & word ptr		*/
	dcl FMEM#Word		lit '2';					/*	to the file list record		*/
	dcl FMEM#CurType	lit '3';					/*	type of object					*/
	dcl FMEM#Len		lit '4';

dcl CMem.Base			lit '(SFD.PTR+2)';	/*	store ptrs into category list	*/
dcl CMem.Len			lit '512';				/*	in this sector					*/
	dcl CMEM#Index		lit '0';
	dcl CMEM#Sector	lit '1';					/*	save sector and word too	*/
	dcl CMEM#Word		lit '2';					/*	for speedier seeking			*/
	dcl CMEM#RecLen	lit '3';
	dcl CMEM#Offset	lit '4';
	dcl CMEM#Files		lit '5';
	dcl CMEM#CatWords	lit '6';
	dcl CMEM#Len		lit '7';

dcl ScrollMem#			lit '(Max.Window.Lines+1)';
dcl MaxMem#				lit '(CMem.Len/CMEM#Len-1)';
dcl ScratchMem#		lit 'MaxMem#';			/*	used for a 1 level state stack	*/

/*	Window State Memories	*/

dcl State.Base			lit '(SFD.PTR+4)';	/*	base ptr to window state memories		*/
dcl State.Len			lit '256';				/*	len for state memory area					*/
dcl State.Stride		lit '64';				/*	64 words reserved to hold window state vars	*/
dcl Max.Open.Windows	lit '3';					/*	allow 64 wds of state info per window	*/
dcl Max.Window.Lines	lit '20';				/*	each window must be 20 or fewer rows	*/

/*	Sound File Snap Shot Memory Info	*/

dcl SnapBase			lit '(SFD.PTR+5)';	/*	base ptr to snapshot area			*/
dcl SnapLen				lit '8192';				/*	number of words in snapshot area	*/
dcl SnapFCBLen			lit '8';					/*	number of words per Snapshot FCB	*/
dcl SnapNameLen		lit '64';				/*	number of words per Long Name  	*/

dcl NameBase         lit '(SFD.PTR+37)';  /* base ptr to long name area       */

dcl CharsPerFile		lit '10';	/*	# of characters to allow for a filename only table entry	*/

/*	$SUBTITLE  Literals for Window State Storage	*/

/*	The following locations are used to store a snapshot of the	*/
/*	complete state information for an active window display		*/
/*	The order of these is important - don't change					*/

/*	these locations map to internal memory state variables		*/

dcl S#Device.Mounted			lit '00';
dcl S#DirDevice				lit '01';
dcl S#SnapFCBs					lit '02';	/*	WARNING: only 1 window can set this to NON-ZERO	*/
dcl S#FListIndex				lit '03';
dcl S#FListSector				lit '04';
dcl S#FListWord				lit '05';
dcl S#CListIndex				lit '06';
dcl S#CListSector				lit '07';
dcl S#CListWord				lit '08';
dcl S#CListRecLen				lit '09';
dcl S#CListCurPos				lit '10';
dcl S#CListFiles				lit '11';
dcl S#CListCatWords			lit '12';
dcl S#TotalCatCount			lit '13';
dcl S#TotalFileCount			lit '14';
dcl S#TotalDisplayLines		lit '15';
dcl S#ScreenTopLine			lit '16';
dcl S#MaxItemChars0			lit '17';
dcl S#MaxItemChars1			lit '18';
dcl S#MaxRowItems0			lit '19';
dcl S#MaxRowItems1			lit '20';
dcl S#FListDisplayLines0	lit '21';
dcl S#FListDisplayLines1	lit '22';
dcl S#CListDisplayLines0	lit '23';
dcl S#CListDisplayLines1	lit '24';
dcl S#CListDisplayLines2	lit '25';
dcl S#SortInfo					lit '26';
dcl S#UserSort					lit '27';
dcl S#CurItemType				lit '28';
dcl S#FunctionInfo			lit '29';
dcl S#ShowInfo					lit '30';
dcl S#ItemFilter				lit '31';

/*	the rest of these locations map to state variables stored in the PID/GID area	*/

dcl S#ScrollBar				lit '32';
dcl S#DirTable.Type.Obj		lit '33';
dcl S#DirTable					lit '34';
dcl S#DirTableRows			lit '35';
dcl S#DirTableCols			lit '36';
dcl S#DirTableYPos			lit '37';
dcl S#DirTableXPos			lit '38';
dcl S#DirTableTitle			lit '39';
dcl S#DirTableTop				lit '40';
dcl S#DirTableBin				lit '41';
dcl S#DirTableSearch			lit '42';
dcl S#DirTableShuffle		lit '43';
dcl S#DirTableFoldOut		lit '44';
dcl S#DirTableAudition		lit '45';
dcl S#DirTablePrint			lit '46';
dcl S#Scroll.CurrentLine	lit '47';
dcl S#Scroll.Index			lit '48';
dcl S#Scroll.CurPos			lit '49';
dcl S#Scroll.Sector			lit '50';
dcl S#Scroll.Word				lit '51';

/****** ID NUMBERS for Screen Manager Objects and Groups ********/
/*	The following id numbers are high so as not to conflict with */
/*	id numbers on other screens.  This allows the sound file		 */
/*	directory stuff to be used in other screens (namely, the		 */
/*	Audio Event Editor!)														 */
/****************************************************************/

dcl SFD$Id.Base	lit '20000';	/*	This is where sound file directory		*/
											/*	id numbers begin (group and obj ids)	*/
dcl SFD$Id.Len		lit '3000';		/*	Id numbers 20,000-22,999 are reserved for SFD	*/

/*	NOTE: Group IDs SFD$Id.Base+1000 to SFD$Id.Base+1100 reserved for general SFD group ids (windows, etc.)	*/
dcl GRP$Dialog		lit '(SFD$Id.Base+1000)';
dcl GRP$Window		lit '(SFD$Id.Base+1001)';	/*	Base Group Id for Scrolling Window	*/
/*		Allows space for max of 10 window group IDs here		*/
/*	Free:  1011 - 1100	*/

/*	NOTE: Object IDs SFD$Id.Base+1000 to SFD$Id.Base+2000 reserved for general SFD object ids (windows, etc.)	*/
dcl OBJ$Dialog		lit '(SFD$Id.Base+1000)';	/*	Base Id for Dialog Objects (10 max)	*/
dcl OBJ$Window		lit '(SFD$Id.Base+1020)';	/*	Base Id for Scrolling Window Objects	*/
/*	Allow lots of ids here for multiple open windows		*/
dcl OBJ$WindowStride		lit '20';				/*	allows 20 objects per window	*/
dcl OBJ$BaseButtonId1	lit '(OBJ$Window+898)';
dcl OBJ$BaseButtonId2	lit '(OBJ$Window+899)';

/***********************  GID/PID area *************************/
/*	The variables from word 175 - 256 in the PID/GID area are	*/
/*	reserved for managing the scrolling directory windows and	*/
/*	dialogs																		*/
/***************  screen dependent (static) ********************/

/*	The values in locations 175-209 are screen dependent, but not		*/
/*	window dependent. This means that when the user makes another		*/
/*	window active (on the same screen), these values will not change.	*/

dcl SFDMiscGrp				lit '175';	/*	id of the screen's misc group		*/
dcl SFDErrRow				lit '176';	/*	(row,col) to put error messages	*/
dcl SFDErrCol				lit '177';
dcl SFDDlgRow				lit '178';	/*	row to put dialogs					*/

dcl SFDDlgGrp				lit '179';	/*	Holds dialog group id for screen	*/
/*	Locations 180 - 189 are for object ids used by Dialog Panels	*/

	dcl DlgOrigObj			lit '180';	/*	id of current object at time Dialog Panel was activated	*/
	dcl DlgGo				lit '181';	/*	used to hold id of POSITIVE response object	*/
	dcl DlgAbort			lit '182';	/*	used to hold id of NEGATIVE response object	*/
	dcl DlgReselect		lit '183';	/*	set if arrow select occurred during dialog	*/

	/*	Additional Object defs for FORMAT OPTICAL Dialog Panel	*/
	dcl DlgVolName			lit '184';
	dcl DlgVolCaption		lit '185';
	dcl DlgDate				lit '186';
	dcl DlgTime				lit '187';

	/*	Additional Object defs for STORE CATALOG Dialog Panel	*/
	dcl DlgCaptionSource	lit '184';
	dcl DlgCatSource		lit '185';
	dcl DlgStoreMode		lit '186';
	dcl DlgUpdateMode		lit '187';

	/*	Additional Object defs for STORE CATALOG PROMPT Dialog Panel	*/
	dcl DlgReplace			lit '184';
	dcl DlgUpdate			lit '185';
	dcl DlgSkip				lit '186';
	dcl DlgRenameField	lit '187';
	dcl DlgFLabel1			lit '188';
	dcl DlgFLabel2			lit '189';

	/*	Additional Object defs for STORE CATEGORY Dialog Panel	*/
	dcl DlgDestCatalog	lit '184';
	dcl DlgNewSubCatlg	lit '185';	/*	name stored in CatalogString, below	*/
	/*	dcl DlgStoreMode	lit '186';	*/	/*	already declared above	*/
	/*	dcl DlgUpdateMode	lit '187';	*/
	dcl DlgStoreLabel		lit '188';
	dcl DlgUpdateLabel	lit '189';

	/*	Additional Object defs for PRINT Dialog Panel	*/
	dcl DlgUserTitle		lit '184';	/*	user-entered string to be printed at top of printout	*/

	/*	Additional Object defs for SEARCH Dialog Panel	*/
	dcl DlgSearchString	lit '184';

	/*	Additional Object defs for BIN	 Dialog Panel	*/

	dcl DlgBinNumber		lit '184';
	dcl DlgMemAvail		lit '185';
	dcl DlgFreeMem			lit '186';

	/*	Additional Object defs for SHUFFLE Dialog Panel	*/

	dcl DlgShuffle			lit '184';
	dcl DlgCollect			lit '185';
	dcl DlgErase			lit '186';

/*	190 - 207:  most recent search string	*/
dcl SearchString			lit '190';
dcl SearchStringLen		lit ' 17';

/*	Free: 208 - 209	*/

/**************  window dependent (dynamic) ********************/
/*	The variables in locations 210-255 are window dependent.		*/
/*	This means that they will be changed when the user makes		*/
/*	another window active (on the same screen).						*/
/***************************************************************/

dcl WindowGrp				lit '210';	/*	Holds id of active window group	*/

/*	NOTE: THE ORDER OF THE FOLLOWING VARIABLES IS VERY IMPORTANT	*/
/*			DON'T CHANGE THEIR ORDER WITHOUT LOOKING AT STATE			*/
/*			SAVE AND RESTORE ROUTINES.											*/

/*	Free: 211	*/

dcl ScrollBar				lit '212';	/*	Display Window Scroll Bar	*/
dcl DirTable.Type.Obj	lit '213';	/*	Display Window Scrolling Table Type Object	*/
dcl DirTable				lit '214';	/*	Display Window Scrolling Table	*/
dcl DirTableRows			lit '215';	/*	Number of Rows in Scrolling Table	*/
dcl DirTableCols			lit '216';	/*	Number of Chars per Row of Scrolling Table	*/
dcl DirTableYPos			lit '217';	/*	Current Row		Position		*/
dcl DirTableXPos			lit '218';	/*	Current Column	Position		*/
dcl DirTableTitle			lit '219';	/*	Id of Window Title object	*/
dcl DirTableTop			lit '220';	/*	Id of Top Button				*/
dcl DirTableBin			lit '221';	/*	Id of Bin Button				*/
dcl DirTableSearch		lit '222';	/*	Id of Window Search Button	*/
dcl DirTableShuffle		lit '223';	/*	Id of Poly-Shuffle Button	*/
dcl DirTableFoldOut		lit '224';	/*	Id of Fold Out Button		*/
dcl DirTableAudition		lit '225';	/*	Id of Audition Button		*/
dcl DirTablePrint			lit '226';	/*	Id of Print Button			*/

/*	NOTE: THE ORDER OF THE FOLLWING VARIABLES IS VERY IMPORTANT	*/
/*			DON'T CHANGE THEIR ORDER WITHOUT LOOKING AT STATE		*/
/*			SAVE AND RESTORE ROUTINES.										*/

dcl Scroll.CurrentLine	lit '227';	/*	Variables used by GET.LINE to scroll	*/
dcl Scroll.Index			lit '228';	/*	to a specified line in a Category List	*/
dcl Scroll.CurPos			lit '229';
dcl Scroll.Sector			lit '230';
dcl Scroll.Word			lit '231';

/*	Free: 232 - 238	*/

dcl BoxMoved				lit '239';	/*	used for scroll bar status line update	*/
dcl LastSBBoxMoveLine	lit '240';	/*	used for scroll bar status line update	*/

/*	order of StatusLine vars cannot change	*/
dcl StatusLineDisplayed	lit '241';	/*	true if any status message on screen	*/
dcl StatusLineRow			lit '242';	/*	where message starts	*/
dcl StatusLineCol			lit '243';
dcl StatusLineChars		lit '244';	/*	length of status message	*/

dcl FindNextMatch			lit '245';	/*	flag to continue search with prev string	*/
dcl SFD.Initial.TRD.LEN	lit '246';	/*	trd.len on entering	*/

/*	Free: 247 - 255	*/

/*	TRD.LEN STORAGE NEEDS	*/

dcl SFD.Trd.Storage.Needed	lit '(SFD.Smgr.Sectors+Get.SFD.Reserved.Sectors())';
