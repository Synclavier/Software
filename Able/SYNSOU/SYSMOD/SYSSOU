/* $TITLE SYSSOU  - Module for:  System Command Screen     *//*   10/16/88 - TSS - Update 4X channel on NEW PRM INFO   06/30/88 - MWH - Remove unused inserts   02/23/87 - eg - created this file*/module sysmod;   insert ':synlits:alltlits';  /* get all terminal literals */   insert ':synlits:synclits';   insert ':synmods:globdcl';   insert ':synmods:mathdcl';   insert ':synmods:polydcl';   insert ':synmods:ttydcl';   insert ':synmods:plotdcl';   insert ':synmods:errdcl';   insert ':synmods:scrndcl';   insert ':synmods:d40dcl';   insert ':synmods:getdcl';   insert ':synmods:getvdcl';   insert ':synmods:tprimdcl';   insert ':synmods:moussdcl';   insert ':synrdcls:03-pdcls';   insert ':synrdcls:04-sdcls';   insert ':synrdcls:05-bdcls'; /* for XXXXCH */   insert ':synrdcls:08-idcls';   insert ':synrdcls:11-tdcls'; /* for ALLOC.AND.COMPUTE */   /* get source files            */   insert ':synsou:sysmod:580-syst';   /* $PAGE - driver for System Screen */   SYSTEM.SCREEN:proc (arg) public swapable;      dcl arg     fixed;                /* argument - must pass 0 for now */      dcl code    fixed;                /* code returned by get.next.event */      call DRAW.SYSTEM.SCREEN;          /* set up frame  */      call POS.SYSTEM.COMMAND.CURSOR;   /* and position cursor for input/echo */      EXIT.MY.SCREEN   = 0;             /* clear these flags before loop */      GOTO.THIS.SCREEN = 0;      do while EXIT.MY.SCREEN = 0;      /* wait for exit condition       */         call ENABLE_SEVERAL_GETS(get.in.char,      /* get in.chars      */                                  get.mouse.button, /* get mouse buttons */                                  get.ertyp,        /* errors            */                                  get.prm.info);         code = GET.NEXT.EVENT;                     /* get event         */         call DISABLE_SEVERAL_GETS(get.in.char,                                        get.mouse.button,                                   get.ertyp,                                  get.prm.info);             do case (code-1);            do;                          /* input character received */               call SYSTEM.COMMAND.INPUT(in.chin,next.event.info);                       end;            if next.event.info=2 then do; /* look for release of middle button */               call SYSTEM.COMMAND.MOUSE.POS(mouse(release.x),mouse(release.y));            end;            ;                              /* mouse movement not used */            ;                              /* new timbre not used     */            ;                              /* psfree not displayed    */            ;                              /* new seq info - nothing  */            ;                              /* cursor boundary - nothing */            ;                              /* entry writes no effect  */            if ((next.event.info & 16) <> 0) /* NEW PRM INFO - update diagnostics channel # */            and (diagnostics.enabled<>0)            then call SET.DIAGNOSTICS.CHAN;            ;                              /* dtd info - nothing      */            ;                              /* poly change - nothing   */            do;                          /* error message to display */               call Handle.System.Error.Codes(next.event.info);               call POS.SYSTEM.COMMAND.CURSOR;            end;            ;                          /* nothing on ork/smpte */         end;                          /* of do case           */      end;                             /* of wait for exit     */      EXIT.MY.SCREEN   = 0;            /* clear flag after loop */      return GOTO.THIS.SCREEN;   end SYSTEM.SCREEN;end sysmod;