/*ииииииииииииииииииии  A B O U T   T H I S   F I L E  ииииииииииииииииииии*//*FILENAME: CONDSOUPATH:		 :SYNSOU:CONDMOD:CONDSOUCONTAINS: DRIVER FOR "CONDUCTOR TOOLS" SCREENREVISION HISTORY:00	1999/10/10	Todd Yvega	Created.*/module condmod;/*иииииииииииииии  L I T E R A L   D E C L A R A T I O N S  иииииииииииииии*/insert ':SYNLITS:ALLTLITS';	//	get all terminal literals/*ииииииииииииииии  E X T E R N A L   R E F E R E N C E S  ииииииииииииииии*/insert ':-xpl:intrprtr';insert ':SYNMODS:TPRIMDCL';	//	exit.my.screen, goto.this.screeninsert ':SYNMODS:GETDCL';		//	get_enable(), get_disable()insert ':SYNMODS:GETVDCL';		//	new.ABLE.seq.infoinsert ':SYNMODS:TTYDCL';		//	pc(), ps(), pnum(), cpos()insert ':SYNMODS:PLOTDCL';		//	clear.term()insert ':SYNMODS:SMGRDCL';		// get.next.screen.event(), zero.zerotime/*ииииииииииииииииии  P R I V A T E   V A R I A B L E S  ииииииииииииииииии*/	/*ииии  P U B L I C   P R O C E D U R E S   A N D   F U N C T I O N S  ииии*/CONDUCTOR.SCREEN: proc (arg) public swapable;	dcl arg		fixed;	//	argument - pass 0 for now	dcl event	fixed;	//	code returned by get.next.screen.event()	//	cpos(0,0);		//	position cursor at row 0:column 0   clear.term();	//	Clear these flags before loop	exit.my.screen	= false;	goto.this.screen = 0;	dcl free_mem_start fixed;	//	first word of heap = start of variable area + length of variable area + length of stack area	free_mem_start = core(c#contab+c#vstart) + core(c#contab+c#vlngth) + core(c#contab+c#stklen);	//	first word of system state variables = mem.size - 256 = loc.synret	ps('free_mem_start = '); pnum(free_mem_start,0); pcr();	ps('high_mem_start = '); pnum(loc.synret,0); pcr();	ps('length = '); pnum(loc.synret-free_mem_start,0);	while (exit.my.screen == false) {	//	Wait for exit condition		get_enable (get.in.char);		event = get.next.screen.event();	//	Get event		get_disable(get.in.char);		if (event == get.in.char) exit.my.screen = true;	//	escape from screen	}		//	of wait for exit condition	exit.my.screen	= false;	//	Clear flag after loop	return goto.this.screen;end CONDUCTOR.SCREEN;end condmod;