/* LOD-EDT1 - routines to edit DTD cues (part 1) *//* or all track bits is used to find out all the tracks that are *//* referenced by all segments of a reel                          */OR.ALL.REEL.TRACK.BITS:proc (cue.ptr) PUBLIC swapable;   dcl cue.ptr     fixed;   /* ptr to cue in ext mem */   dcl (i,j,k)     fixed;   dcl (base,len)  fixed;   write(mam) = cue.ptr;   write(mal) = CUE.LIST.PTR;    /* get segment info */   base       = read(mdi);   len        = read(mdi);   if base = 0 then do;          /* no segments      */      write(mal) = CUE.TRKS;     /* just return trks */      return read(md);   end;   i = 0;   do j = base to base + len - 1 by Cue.Seg.Stride;      write(mam) = cue.ptr + shr(j + S#DriveBits1,8);      write(mal) = j + S#DriveBits1;      i = i \ read(md);   end;   return i;end OR.ALL.REEL.TRACK.BITS;/* all segments have equal tracks returns trude if all the segments *//* in a reel activate exactly the same tracks                       */ALL.SEGMENTS.HAVE.EQUAL.TRACKS: proc (cue.ptr) PUBLIC swapable;   dcl cue.ptr     fixed;   /* ptr to cue in ext mem */   dcl (i,j,k)     fixed;   dcl (base,len)  fixed;   write(mam) = cue.ptr;   write(mal) = CUE.LIST.PTR;    /* get segment info */   base       = read(mdi);   len        = read(mdi);   if (base = 0) or (len = 0) then do;   /* no segments      */      return true;   end;   write(mam) = cue.ptr + shr(base + S#DriveBits1,8);   write(mal) = base + S#DriveBits1;   i = read(md);   do j = base + Cue.Seg.Stride to base + len - 1 by Cue.Seg.Stride;      write(mam) = cue.ptr + shr(j + S#DriveBits1,8);      write(mal) = j + S#DriveBits1;      if i <> read(md) then return false;   end;   return true;end ALL.SEGMENTS.HAVE.EQUAL.TRACKS;/* assign new drive bits to reel is used to assign new drives *//* to a reel                                                  */ASSIGN.NEW.DRIVE.BITS.TO.REEL:proc (cue.ptr,newbits) PUBLIC swapable;   dcl cue.ptr     fixed;   /* ptr to cue in ext mem */   dcl newbits     fixed;   dcl (i,j,k)     fixed;   dcl (base,len)  fixed;   /* if all segments are equal,  then assign bits to */   /* all segments                                    */   if All.Segments.Have.Equal.Tracks(Cue.Ptr)   then do;      write(mam) = cue.ptr;      write(mal) = CUE.LIST.PTR;    /* get segment info */      base       = read(mdi);      len        = read(mdi);      write(mal) = CUE.TRKS;        /* assign bits to   */      write(md ) = newbits;         /* cue.trks         */      do j = base to base + len - 1 by Cue.Seg.Stride;         write(mam) = cue.ptr + shr(j + S#DriveBits1,8);         write(mal) = j + S#DriveBits1;         write(md ) = newbits;      end;   end;   /* if reel and some track have different bits,  limit bits */   /* to those in reel, but allow muting                      */   else do;      newbits = newbits & OR.ALL.REEL.TRACK.BITS(cue.ptr);      write(mam) = cue.ptr;      write(mal) = CUE.TRKS;        /* assign bits to   */      write(md ) = newbits;         /* cue.trks         */   end;   if cue.ptr = Current.Cue.Ptr then do;       /* create a system event  */      if Current.Cue.Drive.Bits <> newbits     /* if changing drive bits */      then new.dtd.info = new.dtd.info \ 256;  /* for current reel       */      Current.Cue.Drive.Bits = newbits;   end;   return newbits;end ASSIGN.NEW.DRIVE.BITS.TO.REEL;