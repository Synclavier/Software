/* POLYTEST   $TITLE  STAND-ALONE TEST FOR THE POLYSOU MODULE   Modified:   07/17/87 - MWH - :SYNLITS:POLYLITS combined with POLYMOD   06/16/87 - MWH - Start looking for previously loaded sounds   06/09/87 - MWH - Author   */INSERT ':SYNLITS:GLOBLITS';INSERT ':SYNLITS:FCODLITS';INSERT ':SYNLITS:SAMPLITS';INSERT ':SYNMODS:MATHDCL';INSERT ':SYNMODS:POLYDCL';UPDATE.POLY.HEADER: PROC;     /* SEE IF PREVIOUSLY LOADED SOUND FILES EXIST */   DCL (I,BIN,CONVERT) FIXED;   DCL BASE (1) FIXED;   CONVERT = FALSE;   PRINT '';   PRINT 'LOOKING IN EACH OF THE ',POLYNUMS,' BINS FOR PREVIOUSLY LOADED SOUND FILES.';   DO BIN=0 TO POLYNUMS - 1;  /* FOR EACH BIN FOUND */      PRINT '';      PRINT 'CHECKING BIN #',BIN;      CALL SET.CUR.BIN(BIN);      CALL STR32(SHL(BIN,14),0,BASE);      CALL PSMREAD(BASE,0,0);      DISABLE;      IF READ(PSD) = POLY.MAGIC      THEN PRINT 'POLY.MAGIC IS OK';      ELSE DO;         PRINT 'POLY.MAGIC NOT FOUND';         RETURN;      END;      I = READ(PSD);      IF I = POLY.REV      THEN PRINT 'POLY.REV IS THE LATEST - FOR EXPANDED POLY';      ELSE IF I = 54334      THEN DO;         PRINT 'POLY.REV IS THE OLDER ONE - RELEASE ''M''';         CONVERT = TRUE;      END;      ELSE DO;         PRINT 'POLY.REV NOT FOUND FOR RELEASE M OR EXPANDED POLY';         RETURN;      END;      IF CONVERT THEN DO;         PRINT 'CONVERTING POLY HEADER TO 32 BIT FORMAT';         POLYAMOUNT.LSB = READ(PSD);         PSFIRST.LSB = READ(PSD);         PSLAST.LSB = READ(PSD);         PSMAX.LSB = READ(PSD);         PSFREE.LSB = READ(PSD);         PSHERE.LSB = READ(PSD);         CALL PSMWRITE(BASE,0,0);         DISABLE;         WRITE(PSD)=POLY.MAGIC;           /* LOAD MOST SOUND FILES */         WRITE(PSD)=POLY.REV;             /* ARE ALREADY THERE */         WRITE(PSD)=0;         WRITE(PSD)=POLYAMOUNT.LSB;         WRITE(PSD)=0;         WRITE(PSD)=PSFIRST.LSB;         WRITE(PSD)=0;         WRITE(PSD)=PSLAST.LSB;         WRITE(PSD)=0;         WRITE(PSD)=PSMAX.LSB;         WRITE(PSD)=0;         WRITE(PSD)=PSFREE.LSB;         WRITE(PSD)=0;         WRITE(PSD)=PSHERE.LSB;      END;   END;                       /* LOOP OVER BINS */END UPDATE.POLY.HEADER;PRINT.RESULTS: PROC;    /* PRINT OUT VARIABLES SET UP BY POLY INIT */   DCL (I,J) FIXED;   PRINT '';   PRINT 'POLY.CHECK has returned the following values:';   PRINT 'POLYNUMS IS: ',POLYNUMS;   PRINT '';   DO I=0 TO POLYNUMS - 1;      CALL SET.CUR.BIN(I);      PRINT 'FOR BIN #',I;      PRINT 'PSFIRST.MSB IS: ',PSFIRST.MSB;      PRINT 'PSFIRST.LSB IS: ',PSFIRST.LSB;      PRINT 'PSLAST.MSB IS: ',PSLAST.MSB;      PRINT 'PSLAST.LSB IS: ',PSLAST.LSB;      PRINT 'PSMAX.MSB IS: ',PSMAX.MSB;      PRINT 'PSMAX.LSB IS: ',PSMAX.LSB;      PRINT 'PSFREE.MSB IS: ',PSFREE.MSB;      PRINT 'PSFREE.LSB IS: ',PSFREE.LSB;      PRINT 'PSHERE.MSB IS: ',PSHERE.MSB;      PRINT 'PSHERE.LSB IS: ',PSHERE.LSB;      PRINT 'POLYAMOUNT.MSB IS: ',POLYAMOUNT.MSB;      PRINT 'POLYAMOUNT.LSB IS: ',POLYAMOUNT.LSB;      PRINT 'POLYADCS(I) IS: ',POLYADCS(I);      PRINT 'ADCONFIGS(I) IS: ',ADCONFIGS(I);      PRINT 'POLYNUMVS(I) IS: ',POLYNUMVS(I);      PRINT '';   END;END PRINT.RESULTS;/* STUBS */begin;   STOP.DISK:PROC PUBLIC; END;   RUN.SYN.LOOP:PROC PUBLIC; END;   ABORT.SCSI:PROC PUBLIC; END;   DCL NEW.PAN FIXED PUBLIC;end;/* MAIN TEST CODE *//* NOTE, WE'RE COUNTING ON POLYSOU CALLING POLY.CHECK BEFORE WE GET HERE */DISABLE;       /* POLY.CHECK TURNS INTERRUPTS ON; WE DON'T NEED THEM */CALL UPDATE.POLY.HEADER;CALL PRINT.RESULTS;