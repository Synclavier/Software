.ce~SCRNMOD - Terminal Primitives for Drawing Screens~.nf.lg 10.rm 60~PRINT_DIGITS~   prints a positive number in n places   with leading zeroes.   call PRINT_DIGITS(num,n);   where num is the value and n is the number of places.~ERASE.REST.OF.LINE~   erases the line on the screen from the given location to the    furthest printing character to the right.   call ERASE.REST.OF.LINE(y1,x1);   where (y1,x1) if the starting location from    which to erase. y1 is a line number between 0    and 23 and x1 is a column number between 0 and 79.~SET.SCROLLING.REGION~   used to limit the text scrolling area.  This is useful in   dividing up the screen.   call SET.SCROLLING.REGION(top,bottom); /* define top and bottom                                             scrolling region*/   where top is the line number of the top of the    scrolling region and bottom is the line number    of the bottom of the scrolling region.  Each    value must be a number between 0 and 23 and bottom    must be larger than top.~REVERSE.INDEX~  Move active position to same horizontal position   on the preceeding line.  If the active position is   at the top margin, a scroll down is performed.  call REVERSE.INDEX;.bp~NEXT.LINE~   Moves the active position to the first position    on the next line downward.  If the active    position is at the bottom margin, a scroll is    performed.   call NEXT.LINE;~PRINT.PARM~   Prints the unsigned or signed number in string    format and left or right justifies within the    given field width as well as prints a decimal    point when specified.   call PRINT.PARM(p.val,p.just,p.sign,p.field,p.dp);   Where p.val is the number to convert to a    string.   If p.just=0 then right justify the    string otherwise if p.just=1 then left justify the    string.   If p.sign=0 then the number is    unsigned otherwise if p.sign=1 then the number is    signed.   p.field is the field width which ranges from 1 to 6.   p.dp is the number of digits right of decimal point.  .bp~REVERSE.VIDEO~   Sets or clears the reverse video mode on    terminals which can print reverse video.   call REVERSE.VIDEO(state); /* puts terminal in reverse video                                 or normal state */   where state is 0 and turns reverse video off or    state is 1 and turns reverse video on.~DRAW.CORNER~   Prints corner on VT100   call DRAW.CORNER(c.type); /* prints corner on VT100 */   where c.type are the four corner types.   The literals are as follows:      c.u.r -> 0; /* upper right corner */      c.u.l -> 1; /* upper left corner */      c.l.l -> 2; /* lower left corner */      c.l.r -> 3; /* lower right corner */~DRAW.TEE~   Draws a T if on a vt100.   call DRAWE.TEE(t.type);  /* draws a T if on VT100 */   where t.type is the type of T.   The literals are as follows:      t.top   -> 0;       t.bot   -> 1;      t.left  -> 2;      t.right -> 3;      t.cross -> 4;~DRAW.HOR~   Prints a horizontal VT100 line where num is the character length    of the line.   call DRAW.HOR(num); /* prints horizontal VT100 line                          NUM chars long */~DRAW.VER~   Draws a vertical line between y1 the starting y coordinate and y2   the ending y coordinate.   call DRAW.VER(y1,x,y2); /* draws a vertical line                              between (y1,x) and (y2,x) */.bp~DRAW.BOX~   Prints a box on the vt100 or ADM terminal   call DRAW.BOX(up.left.y,up.left.x,low.right.y,low.right.x);    where up.left.y and up.left.x are the upper    left screen coordinates of the box.    low.right.y and low.right.x lower are lower right    screen coordiantes for the box.   DRAW.FRAME and PRINT.SCREEN.FRAME force the terminal into NORMAL       character mode. Note that all the above routines return the       terminal mode to the mode they were in when the routines started.~DRAW.FRAME~   Draws a frame around the given text where left and rigth are the    spaces to the left and right of the text.   call DRAW.FRAME(left,text,right);/* draws a frame                                        at current cursor pos */   NOTE: Leaves terminal in NORMAL character mode when done with          routine.~PRINT.SCREEN.FRAME~   Draws standard screen title in a box the number of given lines wide.   Title is the screen title and lines ranges from 0 to 22.   call PRINT.SCREEN.FRAME(lines,title); /* draws standard                                            screen title in a box */   NOTE: Leaves terminal in NORMAL character mode when done with          routine.