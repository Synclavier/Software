/* SMG-MISC  $TITLE  Miscellaneous routines   Modified:   05/24/88 - TSS - Modified MOUSE.SWITCH calls to save and restore MOUSE.CURSOR.TYPE   11/17/87 - MWH - Split into 2 libraries; SMGR is too big   09/25/87 - MWH - Use literals for suffix lengths   */ERASE.TRANSPARENT.OBJECT: proc(id) public swapable;   dcl id        fixed;   dcl ptr       fixed;   dcl type.id   fixed;   dcl (i,j)     fixed;   dcl (col,row) fixed;   dcl width     fixed;   if Locate.Object(id) then do;      ptr = Object.Ptr;      if Read.Object(ptr+O#Type) = O$Table      then do;         type.id = Fetch.Object.Info(id,O#TABL.Cell.Type.Id);         width   = Fetch.Object.Info(Type.Id,O#Trans.Width);         do i = 0 to Read.Object(ptr+O#TABL.Across)-1;            do j = 0 to Read.Object(ptr+O#TABL.Down)-1;               call Deposit.Object.Info(Type.Id,O#Trans.Row,j+Read.Object(ptr+O#Trans.Row)); /* Set up transparent row */               call Deposit.Object.Info(Type.Id,O#Trans.Col,i*Width+Read.Object(ptr+O#Trans.Col)); /* Set up transparent column */               call ERASE.TRANSPARENT.OBJECT(Type.Id);               call Set.Table.Cell.Status(id,i,j,O#STAT.Exhibit,false);               call Set.Table.Cell.Status(id,i,j,O#STAT.Update,true);            end;         end;      end;      else do;         col = Fetch.Object.Info(id,O#Trans.Col);         row = Fetch.Object.Info(id,O#Trans.Row);         call cpos(row,col);         do i = 1 to Fetch.Object.info(id,O#Trans.Width);            call pc(a.sp);         end;         call Set.Object.Status(id,O#STAT.Exhibit,false);  /* Object is no longer displayed */         call Set.Object.Status(id,O#STAT.Update,true);      end;   end;end ERASE.TRANSPARENT.OBJECT;ERASE.GRAPHICS.REGION: proc (id) swapable; /* erase the area inside of an object's region */   dcl id  fixed;   dcl saved.cursor.type fixed;   if MG600 then do;    /* Use blockmode to wipe out whole object */      saved.cursor.type = mouse.cursor.type;      call mouse.switch(0);      vector_mode;      call data_level(1);      call Blockmode_On;      call connect(Fetch.Object.Info(id,O#ULX),                   Fetch.Object.Info(id,O#ULY),                   Fetch.Object.Info(id,O#LRX),                   Fetch.Object.Info(id,O#LRY));      call Blockmode_Off;      call data_level(0);      transparent_mode;      call mouse.switch(saved.cursor.type);   end;end ERASE.GRAPHICS.REGION;ENABLE.OBJECT.AND.USER.GETS: proc (ptr) swapable;   dcl ptr fixed;   call ENABLE_BIT_GETS(Read.Object(ptr+O#ObjectGets)\Read.Object(ptr+O#UserGets));end ENABLE.OBJECT.AND.USER.GETS;DISABLE.OBJECT.AND.USER.GETS: proc (ptr) swapable;   dcl ptr fixed;   call DISABLE_BIT_GETS(Read.Object(ptr+O#ObjectGets)\Read.Object(ptr+O#UserGets));end DISABLE.OBJECT.AND.USER.GETS;