/* 03-DISK  $TITLE  Disk I/O Control Module */DCL SDREAD  LIT 'READDATA'; /* SPECIAL DISK READ */DCL SDWRITE LIT 'WRITEDATA'; /* SPECIAL DISK WRITE *//* THESE ROUTINES HANDLE WORK FILES IN MEMORY OR ON DISK */WORKREAD:  PROC(SEC,BUF,LEN); /* READ THE 'WORKFILE' INTO THE BUFFER */   DCL SEC       FIXED; /* SECTOR OFFSET */   DCL BUF       ARRAY; /* BUFFER */   DCL LEN       FIXED; /* WORDS */   DCL (MS,LS)   FIXED;   DCL I         FIXED;   IF WORKMED = 0 THEN DO;      MS = WORKDEV;      LS = WORKSEC + SEC;      IF LS ILT SEC THEN MS = MS + 1;      CALL READDATA (MS,LS,BUF,LEN);   END;   ELSE DO; /* .WORK IN CORE */      LS = WORKSEC + SHL(SEC,8);      I = 0;      DO WHILE I ILT LEN; /* DO A COPY LOOP */         BUF(I) = CORE(LS + I);         I = I + 1;      END;   END; /* .WORK IN CORE */END WORKREAD; WORKWRITE:PROC(SEC,BUF,LEN); /* WRITE THE 'WORKFILE' FROM THE BUFFER */   DCL SEC       FIXED; /* SECTOR OFFSET */   DCL BUF       ARRAY; /* BUFFER */   DCL LEN       FIXED; /* WORDS */   DCL (MS,LS)   FIXED;   DCL I         FIXED;   IF WORKMED = 0 THEN DO;      MS = WORKDEV;      LS = WORKSEC + SEC;      IF LS ILT SEC THEN MS = MS + 1;      CALL WRITEDATA (MS,LS,BUF,LEN);   END;   ELSE DO; /* .WORK IN CORE */      LS = WORKSEC + SHL(SEC,8);      I = 0;      DO WHILE I ILT LEN; /* DO A COPY LOOP */         CORE(LS + I) = BUF(I);         I = I + 1;      END;   END; /* .WORK IN CORE */END WORKWRITE;RESTORE.HEAD:PROC(DEVICE); /* CALL TO RESTORE HEAD OVER TRACK 0 */  DCL (DEVICE, DRIVE, I) FIXED;  DEVICE=SHR(DEVICE,8);   /* MOVE INTO LOWER BYTE */  DRIVE=(DEVICE AND "1");     /* EXTRACT DRIVE NUMBER 0-1 */  I=FIND_DEVICE(DEVICE); /* GET HANDLE OF DEVICE */  IF I=0 THEN RETURN; /* SKIP IF NO SUCH DEVICE */  IF (DEVICE AND "177776")=2 THEN DO; /* FLOPPIES */  	if (interp_is_running == false)	{		I=0; /* INITIALIZE THE TIMER */		DO WHILE (READ("100") AND (I <= 200*D03_SPEED)); /* WAIT FOR THE FLOPPY CONTROLLER TO IDLE (OR A 2 SECOND TIMEOUT) */		   IF READ(3) THEN DO; WRITE(3)=0; I=I+1; END; /* COUNT CLOCK TICKS */		END;	}	    CORE(CORE(CORE(1)+C#CURTRK)+DRIVE) = 0; /* SET HEAD POS */    WRITE("104")=DRIVE; /* SELECT DRIVE */    WRITE("100")=(CORE(I+3) AND "377"); /* ISSUE RESTORE AT CORRECT SPEED */  	if (interp_is_running == false)	{		I=0; /* INITIALIZE THE TIMER */		DO WHILE (READ("100") AND (I <= 100*D03_SPEED)); /* WAIT FOR THE FLOPPY CONTROLLER TO IDLE (OR A 1 SECOND TIMEOUT) */		   IF READ(3) THEN DO; WRITE(3)=0; I=I+1; END; /* COUNT CLOCK TICKS */		END;		IF READ("100") THEN WRITE("100")="HD0"; /* IF WE TIMED OUT, IT ISN'T THERE - ABORT RESTORE */	}  END;  ELSE IF (DEVICE AND "177776")=4 THEN DO; /* RESTORE HEAD FOR REMOTES */  	if (interp_is_running == false)	{		I=0; /* INITIALIZE THE TIMER */		DO WHILE (READ("110") AND (I <= 200*D03_SPEED)); /* WAIT FOR THE FLOPPY CONTROLLER TO IDLE (OR A 2 SECOND TIMEOUT) */		   IF READ(3) THEN DO; WRITE(3)=0; I=I+1; END; /* COUNT CLOCK TICKS */		END;	}	    CORE(CORE(CORE(1)+C#CURTRK)+DRIVE+2) = 0; /* SET HEAD POS */    WRITE("114")=DRIVE; /* SELECT DRIVE */    WRITE("110")=(CORE(I+3) AND "377"); /* ISSUE RESTORE AT CORRECT SPEED */  	if (interp_is_running == false)	{		I=0; /* INITIALIZE THE TIMER */		DO WHILE (READ("110") AND (I <= 100*D03_SPEED)); /* WAIT FOR THE FLOPPY CONTROLLER TO IDLE (OR A 1 SECOND TIMEOUT) */		   IF READ(3) THEN DO; WRITE(3)=0; I=I+1; END; /* COUNT CLOCK TICKS */		END;		IF READ("110") THEN WRITE("110")="HD0"; /* IF WE TIMED OUT, IT ISN'T THERE - ABORT RESTORE */	}  END;END RESTORE.HEAD;