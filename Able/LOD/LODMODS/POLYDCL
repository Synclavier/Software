/* POLYDCL - Poly synth routines */dcl read_ddsad_revision   proc               external;dcl write_ddsad_bits      proc(fixed)        external;dcl set_ddsad_controls    proc(fixed, fixed) external; /* rate, scrub */DCL (NEW.BACKPLANE) FIXED EXTERNAL; /* SET TO 1 FOR NEW DTD BACKPLANE (1ST REAL VOICE IS ALWAYS CHANNEL 16) */DCL (POLYNUMS)      FIXED EXTERNAL;DCL (POLYNUMV)      FIXED EXTERNAL;DCL (POLYAMOUNT)    FIXED EXTERNAL;DCL (POLYADC)       FIXED EXTERNAL;DCL (ADCONFIG)      FIXED EXTERNAL; /* A/D CONFIGURATION */DCL (POLYDAC)       FIXED EXTERNAL;DCL (POLYMAP)       ARRAY EXTERNAL;dcl PSMREAD   PROC (fixed,fixed)  EXTERNAL;  /* SET UP FOR POLY SYNTH MEMORY READ */dcl PSMWRITE  PROC (fixed,fixed)  EXTERNAL;  /* POLY SYNTH MEMORY WRITE */dcl POLY.INIT PROC                EXTERNAL;dcl AD_INIT   PROC                EXTERNAL;dcl poly.in               proc(fixed,fixed)                         EXTERNAL;dcl poly.out              proc(fixed,fixed)                         EXTERNAL;dcl move.poly             proc(fixed,fixed,fixed,fixed,fixed,fixed) EXTERNAL;dcl Copy.Ext.Mem.To.Poly  proc(fixed,fixed,fixed,fixed,fixed)       EXTERNAL;dcl Copy.Poly.To.Ext.Mem  proc(fixed,fixed,fixed,fixed,fixed)       EXTERNAL;dcl construct.dtd.poly.crossfade proc (fixed,fixed,fixed,fixed,fixed,fixed,                                   fixed,fixed,fixed) EXTERNAL;dcl fadein   proc(fixed,fixed) EXTERNAL;dcl fadeout  proc(fixed,fixed) EXTERNAL;dcl Construct.Loop.Buffers proc(fixed,fixed,fixed,fixed,fixed,fixed,fixed) EXTERNAL;dcl ps_setmode   proc(fixed)           EXTERNAL; /* set A/D mode */dcl ps_actchan   proc(fixed, fixed)    EXTERNAL; /* activate A/D channel(s) */dcl ps_maxchan   proc(fixed, fixed)    EXTERNAL; /* turn on A/D channels */dcl ps_gain      proc(fixed, fixed)    EXTERNAL; /* set gain on A/D channel */dcl ps_envelope  proc(fixed) returns (fixed) EXTERNAL; /* poll A/D peak detector */dcl ps_sampcnt   proc returns (fixed)  EXTERNAL; /* get channel zero sample count */dcl ps_on        proc(fixed, fixed)    EXTERNAL; /* turn poly channel on/off */dcl ps_ron       proc(fixed)           EXTERNAL; /* read channel on status */dcl ps_wave      proc(fixed, fixed, fixed, fixed) EXTERNAL; /* set up poly wave table */dcl ps_word_wave proc(fixed, fixed, fixed, fixed, fixed, fixed) EXTERNAL; /* set up poly wave table */dcl ps_freq      proc(fixed, fixed, fixed, fixed) EXTERNAL; /* set poly channel frequency */dcl ps_master    proc(fixed, fixed)    EXTERNAL; /* set an even stereo master */dcl ps_volume    proc(fixed, fixed)    EXTERNAL; /* turn on volume for playback channel */dcl fcont            fixed EXTERNAL;   /* holds bits during loading */dcl ftabptr          fixed EXTERNAL;   /* load pointer              */dcl ftable.loaded    fixed EXTERNAL;   /* true when loaded          */dcl hzinc            fixed EXTERNAL;   /* rate changes (to keep sync).  used  */dcl hzmod            fixed EXTERNAL;   /* to print out new rate on toiminal   */dcl Set.Lod.Hz                 proc (fixed,fixed) EXTERNAL;   /* pass rate, 0 = idling, 1 = playing */dcl Preset.Chan.32.Phase.Accum proc (fixed)       EXTERNAL;dcl Initialize.Channel.32.For.LOD.Playback proc   EXTERNAL;dcl currently.auditioning                  fixed  EXTERNAL;dcl Initialize.Channel.32.For.Audition     proc (fixed, fixed, fixed, fixed, fixed) EXTERNAL;dcl Update.Audition.Pointers               proc (fixed, fixed, fixed, fixed, fixed) EXTERNAL;dcl See.If.Audition.Is.Finished            proc (fixed)  EXTERNAL;dcl Terminate.Audition                     proc (fixed, fixed) EXTERNAL;library ':lod:lodlibs:polylib';