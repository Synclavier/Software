/* DDTDCL - Basic low level routines for DDT Hardware *//* 02/11/92 - cj - allow multi udio to work with DDSYN *//* Low level SCSI routines: */dcl Scsibits            data        EXTERNAL;  /* bits for D24           */dcl Select.D24          proc(fixed) EXTERNAL;  /* set up for a d24 usage */dcl Targ0.Connect       proc(fixed) EXTERNAL;  /* connect to proprietary lun *//* DDT Variables and Routines (low level): *//* There are two methods of connecting the DDT units to the Direct - to - *//* Disk.    One mode 0,  the single DDT unit connects directly to the     *//* ddt computer with its own dedicated SCSI d24 card.   This limits the   *//* system to two channels only (same direction),  but provides routing    *//* ability.    The other connect mode provides for multiple units on      *//* each SCSI buffer memory card.   This provides for multiple tracks      *//* at the same time,  but provides no routing capablity.                  */#if (inc.multi.udio)						  		 /* multi udio included	  	 */	dcl DDT.MULTI.Avail    fixed EXTERNAL;  /* true if MULTI avail     */	dcl DDT.Connect.Mode   fixed EXTERNAL;  /* 0: connect thru D24     */														 /* 1: connect thru BMC     */			dcl port.ddt           array EXTERNAL;  /* true if dedicated ddt   */	dcl port.ddt.rev#      array EXTERNAL;  /* avail.  holds rev#      */	dcl port.ddt.mode      array EXTERNAL;  /* holds DDT.MODE for port */#else	dcl DDT.MULTI.Avail    lit '0';	dcl DDT.Connect.Mode   lit '0';#endifdcl DDT.lun#           fixed EXTERNAL;  /* holds lun# in use       */dcl DDT.Hardware.Avail fixed EXTERNAL;  /* true if DDT avail       */dcl DDT.DDSYN.Avail    fixed EXTERNAL;  /* true if DDSYN avail     */dcl DDT.DDSYN.Rev#     fixed EXTERNAL;  /* DDSYN rev code          */dcl DDT.UDIO.Avail     fixed EXTERNAL;  /* true if UDIO avail      */dcl DDT.UDIO.Rev#      fixed EXTERNAL;  /* UDIO rev code           */dcl DDT.Mode           fixed EXTERNAL;  /* Holds bits for front    */                                        /* end register            */dcl DDT.Format         fixed EXTERNAL;  /* format in use           */dcl DDT.Sync           fixed EXTERNAL;  /* sync to use             */dcl DDT.Use.DDSYN      fixed EXTERNAL;  /* sync to DDSYN           */dcl DDT.In.Sync        fixed EXTERNAL;  /* true if PLL is synced   */dcl DDT.Good.Word.Clk  fixed EXTERNAL;  /* true if good wrd clk    */dcl Stop.DDT.Units     fixed EXTERNAL;  /* true if trying to stop  */dcl DDT.connect         proc(fixed) EXTERNAL;dcl Read.Selected.DDT.Register   proc(fixed) EXTERNAL;dcl Read.Selected.DDT.Byte       proc(fixed) EXTERNAL;dcl Write.Selected.DDT.Register                 proc(fixed, fixed) EXTERNAL;dcl Write.Selected.DDT.Byte                     proc(fixed, fixed) EXTERNAL;dcl Read.Selected.DDT.Word.Clock                proc               EXTERNAL;dcl Read.Selected.DDT.Front.End.Address.Pointer proc               EXTERNAL;dcl Set.Selected.DDT.Front.End.Address.Pointer  proc (fixed)       EXTERNAL;dcl Start.DDT.Read  proc(fixed, fixed, fixed, fixed)               EXTERNAL;dcl Start.DDT.Write proc(fixed, fixed, fixed, fixed)               EXTERNAL;dcl Construct.DDT.Ramp.In              proc(fixed, fixed) EXTERNAL;dcl Construct.DDT.Ramp.Out             proc(fixed, fixed) EXTERNAL;dcl Initialize.DDT.Unit                proc(fixed, fixed, fixed,                                            fixed, fixed,                                            fixed, fixed, fixed) EXTERNAL;dcl Gently.Turn.Off.DDT.Output         proc                      EXTERNAL;library ':LOD:LODLIBS:DDTLIB';