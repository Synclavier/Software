/* Basic stand-alone test program for DDT units */insert ':-xpl:scsilits';insert ':lod:lodlits:globlits'; /* get main literals                */insert ':lod:lodlits:dbuglits'; /* get dbug literals                */insert ':lod:lodlits:ddtlits';  /* literals for DDT hardware        */insert ':lod:lodlits:initlits';insert ':lod:lodmods:miscdcl';  /* get misc routines                */insert ':lod:lodmods:dbugdcl';  /* debug routines                   */insert ':lod:lodmods:ddtdcl';   /* basic ddt routines               */quickly.select.port: proc(port#) PUBLIC;   dcl (port#) fixed;   call select.d24(3);    /* select correct d24    */   do while  ((read(ScsiBus )&S$BusMask )<>0)   or        ((read(ScsiData)&S$DataMask)<>0);      write(ScsiBus ) = 0;      write(ScsiData) = 0;   end;   call targ0.connect(0);                /* connect to target 0 */   write(ScsiByte)=port# \ lun0.penable; /* quickly select port */end quickly.select.port;/* main program */enable; /* for d03 timer */DDT.Connect.Mode = 1;    /* through buf/mems */print 'Selecting Port ...';call quickly.select.port(2);DDT.Mode = FE_Dir_Out;print 'Initializing Unit ...';call Initialize.DDT.Unit(129, 480, DDT.Mode, ProDigi_2, Internal_sync,                         true, true, true);/* zero out memory */dcl (i,j,k) fixed;print 'Zeroing Out Memory ...';do i = 0 to 255;   call Start.DDT.Write (0, shl(i,8), 256, SCSI_Target_Mode);   rpc 256;   write(ScsiWord) = 0;   if DDT.Hardware.Bug#1 then write(ScsiWord) = 0; /* feed the hungry monster */   do j = 0 to 10; end;   if  ((read(ScsiBus )&S$BusMask )<>0)   or  ((read(ScsiData)&S$DataMask)<>0)   then do;      print 'Bus Not Free',i,'  ', octal(read(ScsiBus)),'  ',octal(Read(ScsiData));      stop;   end;end;/* Now write out some information */call Start.DDT.Write (0, 0, 30, SCSI_Target_Mode);rpc 30;write(ScsiWord) = 1;if DDT.Hardware.Bug#1 then write(ScsiWord) = 0; /* feed the hungry monster */   do j = 0 to 10; end;   if  ((read(ScsiBus )&S$BusMask )<>0)   or  ((read(ScsiData)&S$DataMask)<>0)   then print 'Bus Not Free';/* now read some information */call Start.DDT.Read (0, 0, 50, SCSI_Target_Mode);do i = 0 to 49;   misc.buf(i) = read(ScsiWord);end;   do j = 0 to 10; end;   if  ((read(ScsiBus )&S$BusMask )<>0)   or  ((read(ScsiData)&S$DataMask)<>0)   then print 'Bus Not Free';do i = 0 to 49;   print misc.buf(i),;   if (i&7) = 7 then print;end;print;print;stop;