/* LOD JAZLITS - global literals for JAZ backup device 	*//* 07/18/97 - cj - created											*//* Implementation of JAZ drive for DTD backup.				*//* Sector 0 of the jaz drive contains info					*//* to manage the data on the drive.								*/dcl jaz.magic.#1			lit '0x8765';		/* magic # to identify valid data	*/dcl jaz.magic.#2			lit '0x4321';dcl jaz.magic.#3			lit '0x1234';		/* use to identify continuation		*/dcl jaz.magic.#1.loc		lit '0';				/* magic #'s are stored here			*/dcl jaz.magic.#2.loc		lit '1';dcl jaz.num.fmarks.loc  lit '2';				/* # of file mark entries				*/dcl jaz.leot.msb.loc		lit '3';				/* block # of logical EOT				*/dcl jaz.leot.lsb.loc		lit '4';dcl jaz.fmark.msb.loc	lit '8';				/* list of file mark block nums		*/dcl jaz.fmark.lsb.loc	lit '9';				/* start here...							*/dcl jaz.max.fmarks		lit '124';			/* room for this many file marks		*//* Description of file mark entry table *//* The msb/lsb identify a disk sector # that contains a file mark.  The data	*//* on this disk sector is undefined (e.g. never written).  The sector			*//* is skipped over on a write (e.g. the sector # is put in the file mark		*//* list and the file mark list is written to disk).  On a read, the				*//* data is skipped and a file mark status is returned.								*/dcl jaz.directory.space lit ' 16';			/* sectors reserved for directory	*/dcl jaz.eot.space			lit '500';			/* reserve at end of disk				*/