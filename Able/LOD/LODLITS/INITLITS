/* INITLITS - literals for initialization, SCSI IO *//* 08/20/90 - cj - added lits for 4 wang/4 pat conf *//* 03/26/90 - cj - changed lits for new tape format *//* 01/16/90 - CJ - added type.tan                   */dcl (syn.d24.#)    lit '0';         /* d24 to Synclav        */dcl (aux.d24.#)    lit '2';         /* d24 to Aux Tape       */dcl (lod.d24.#)    lit '3';         /* d24 port to lod disks */dcl (old.s.initiator) lit '7';      /* Synclavier original standard initiator id */dcl (syn.target.#) lit '6';         /* Synclavier Target #   */dcl (lod.target.#) lit '3';         /* Our        Target #   */dcl lun0.penable   lit '"010"';     /* port enable           */dcl lun0.renable   lit '"020"';     /* reset enable          */dcl lun0.iorst     lit '"040"';     /* iorst                 */dcl lun0.senable   lit '"100"';     /* read status enable    */dcl l$exist lit '1';   /* exist bit */dcl l$trap  lit '4';   /* trap bit */dcl l$i.o   lit '8';   /* SCSI I/O *//* Bit masks for Bus Phases */dcl L$BusFree lit '(S$BSY or S$SEL)';dcl L$DataOut lit '(S$BSY)';dcl L$DataIn  lit '(S$BSY or L$I.O)';dcl L$Command lit '(S$BSY or S$C.D)';dcl L$Status  lit '(S$BSY or S$C.D or L$I.O)';dcl L$MessOut lit '(S$BSY or S$MSG or S$C.D or S$ATN)';dcl L$MessIn  lit '(S$BSY or S$MSG or S$C.D or L$I.O)';dcl L$SigMask lit '(S$BSY or S$SEL or S$MSG or S$C.D or L$I.O)';/* additional SCSI Literals: */dcl reset.time lit '10';            /* 10 second reset time for tape */dcl S$TimeOut        lit '(-10)';   /* special error codes for       */dcl S$NoData         lit '(-11)';   /* problems with scsi devices    */dcl S$BlockSizeError lit '(-12)';   /* see code for description      */dcl S$NoVoiceCard    lit '(-13)';   /* of problem                    */dcl S$NoMemory       lit '(-14)';dcl S$CatError       lit '(-15)';dcl S$NoTape         lit '(-16)';dcl S$BadDrive       lit '(-17)';dcl S$NoReqYet       lit '(-18)';dcl S$Reissue        lit '(-19)';dcl adir.len         lit '256';     /* length of allocation directory */                                    /* for each track,  in words      */dcl type.epi         lit '0'; /* tape types - e. p. i.                */dcl type.fuj         lit '1'; /*            - fujitsu                 */dcl type.cdc         lit '2'; /*            - CDC Patriot             */dcl type.exa         lit '3'; /*            - Exabyte                 */dcl type.tan         lit '4'; /*            - Tanberg TDC 3800        */dcl type.jaz         lit '5'; /*            - removable media disk	  */dcl epi.stream.size  lit '48'; /* stream size in 512-byte blocks */dcl fuj.stream.size  lit '48';dcl cdc.stream.size  lit 'buf.len';dcl cdc.busy.delay   lit '1000';    /* no. milliseconds to wait while cdc is busy before polling again *//* Bits for tape.condition */dcl t1.cond.rdy       lit '  1';    /* indicates tape is ready (cart in) */dcl t1.cond.wp        lit '  2';    /* indicates tape is write protected */dcl t2.cond.rdy       lit '256';    /* indicates tape is ready (cart in) */dcl t2.cond.wp        lit '512';    /* indicates tape is write protected *//* Storage for TPTR area - holds information about the drive *//* configuration for each track:                             */dcl max.entries.per.track  lit ' 6';   /* # of entries in tptr per track */dcl max.drives.per.track   lit ' 4';   /* # of disk entries per track    */dcl max.tapes.per.track    lit ' 2';   /* room for 7 entries 			 */dcl track.info.stride      lit '10';   /* table stride       			 */dcl total.stride           lit '(max.entries.per.track*track.info.stride)';dcl optical.tptr           lit '(max.tracks*total.stride)';dcl tape1.tptr             lit '(max.tracks*total.stride+track.info.stride)';dcl tape2.tptr             lit '(max.tracks*total.stride+2*track.info.stride)';dcl track.drive.exists.loc lit '0';    /* 1: drive exists              */                                       /* 2: used for rezeroing        */                                       /* 4: used for wren iv's        */									   /* 8: start needed 			   */									   /* 16: drive has been spun down */									   /* 32: drive has removable med  */									   /* 64: format needed            */                                       /* upper half:                  */                                       /*   0 = 512  byte sectors      */                                       /*   1 = 1024 byte sectors      */dcl track.track#.loc       lit '1';    /* holds track # for error msgs */dcl track.d24#.loc         lit '2';    /* holds d24 #                  */dcl track.port#.loc        lit '3';    /* holds external port #        */dcl track.target#.loc      lit '4';    /* holds target #               */dcl track.lun#.loc         lit '5';    /* holds lun #                  */dcl track.smsb.loc         lit '6';    /* starting sector              */dcl track.slsb.loc         lit '7';dcl track.emsb.loc         lit '8';    /* ending sector                */dcl track.elsb.loc         lit '9';dcl track.drive.exists     lit 'track.info(tptr+track.drive.exists.loc)';dcl track.track#           lit 'track.info(tptr+track.track#.loc      )';dcl track.d24#             lit 'track.info(tptr+track.d24#.loc        )';dcl track.port#            lit 'track.info(tptr+track.port#.loc       )';dcl track.target#          lit 'track.info(tptr+track.target#.loc     )';dcl track.lun#             lit 'track.info(tptr+track.lun#.loc        )';dcl track.smsb             lit 'track.info(tptr+track.smsb.loc        )';dcl track.slsb             lit 'track.info(tptr+track.slsb.loc        )';dcl track.emsb             lit 'track.info(tptr+track.emsb.loc        )';dcl track.elsb             lit 'track.info(tptr+track.elsb.loc        )';/* Literals for tape i/o: *//* constants for EPI: */dcl block_size     lit  '4096';     /* a standard block is 4K words long */dcl tapeblock      lit 'shl(block_size, 1)'; /* tape block size (bytes) */dcl tapespeed      lit '"H1"';      /* EPI: 1 = high speed, 0 = low speed */dcl tapedensity    lit '"H0"';      /* EPI: density = 0 */dcl tapebuffer     lit '"H1"';      /* 1 = use buffer, 0 = don't use buffer *//* Literals for tape commands: pass to start.tape.command *//* Note: these are also the literals for the do csae	  *//* statement in port.check!!!							  */dcl Tape.Inquiry      lit  ' 6';dcl Tape.TestUnit     lit  ' 7';dcl Tape.LoadUnload   lit  ' 8';dcl Tape.Park         lit  ' 9';dcl Tape.ModeSelect   lit  '10';dcl Tape.RequestSense lit  '11';dcl Tape.Write        lit  '12';dcl Tape.Read         lit  '13';dcl Tape.Space        lit  '14';dcl Tape.WriteFile    lit  '15';dcl Tape.ModeSense    lit  '16';dcl Tape.Wait         lit  '17';dcl Tape.TrackSelect  lit  '18';dcl Tape.ReadReverse  lit  '19';dcl Tape.BlockSpace   lit  '20';dcl Tape.ReadCapacity lit  '21';dcl Tape.AnyCommand   lit  'Tape.ReadCapacity';dcl Tape.ExtendedWr	  lit  '22';    /* passed into start.tape.command but mapped to tape.write for processing */dcl Tape.ExtendedRd	  lit  '23';    /* passed into start.tape.command but mapped to tape.read  for processing */dcl Port.DDT.Write.Command.Code		lit '22';dcl Port.DDT.Read.Command.Code		lit '23';dcl Port.Start.Unit.Code			lit '24';