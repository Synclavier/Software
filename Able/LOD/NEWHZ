/* program to compute frequency table for Live Overdub */dcl (i,j,k,l) fixed;dcl buf(4095) fixed;   /* use 40*khz for good resolution */dcl ptr       fixed;dcl (inc,div) fixed;dcl (khz)     floating;dcl (error)   floating;dcl (bestinc) fixed;dcl (bestdiv) fixed;dcl (besterr) floating;compute.rate:proc(inc,div) floating;   dcl (inc,div) fixed;   /* khz = (10000*inc)/(99*div); */   return (10000.0*inc)/(99.0*div);end compute.rate;when ttiint then do;   if rcvdcharacter="23" then do while read("50")<>"21";end;   else if rcvdcharacter=0 then call exit(-1);   else if rcvdcharacter=32 then ptr=ptr+40;end;enable;dcl (lolim,hilim) fixed;do ptr=0 to 4095;   khz=ptr/40;               /* khz                   */   bestinc=0;   bestdiv=0;   besterr=0;   lolim=175; hilim=225;   if (khz>49)&(khz<51)   or (khz>98)   then do;      lolim=150; hilim=250;   end;   do div=lolim to hilim;       /* limit divisor range to avoid increment/remainder problems */      inc=int(khz*99.0*div/10000.0);      do i=0 to 1;          /* try inc, inc+1       */         if inc>div then inc=div;    /* limit to max */         error=abs(compute.rate(inc,div)-khz);         if bestdiv=0 then do;       /* first one     */            bestinc=inc;            bestdiv=div;            besterr=error;         end;         else if error<besterr         then do;            bestinc=inc;            bestdiv=div;            besterr=error;         end;         inc=inc+1;      end;   end;   print khz,'  ',compute.rate(bestinc,bestdiv),'  ',bestinc,'  ',bestdiv,'  ',besterr,'  ',100*besterr/khz;   buf(ptr)=bestinc+shl(bestdiv,8);end;eofinsert ':-xpl:sysiortn';insert ':-xpl:syscatrn';call locate('.table',0);call writedata(0,starting.sector,buf,4096);when break then call exit(0);