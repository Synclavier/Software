/* 395-UPDT - ROUTINE TO CHECK FOR KNOB UPDATE */BEGIN;  DCL (DELTA,BASEADJ,ACCUM)  FIXED;    /* USED TO PROCESS KNOB          */  /* CHECK FOR DRIFTING BASE LINE */  BASEADJ=BASEADJ+1;        /* COUNT FOR ADJUSTMENT */  IF BASEADJ=10000 THEN DO; /* KEEP TRACK OF DRIFTING BASE LINE */    BASEADJ=0;              /* RESET COUNTER */    IF RAW.KNOB.POS<RAW.KNOB.BASE THEN RAW.KNOB.BASE=RAW.KNOB.BASE-1;    IF RAW.KNOB.POS>RAW.KNOB.BASE THEN RAW.KNOB.BASE=RAW.KNOB.BASE+1;  END;  /* $PAGE COMPUTE OFFSET */  DELTA=ABS(KNOB.DELTA);  /* GET POSITION                                */  IF NEW.PM<>0 THEN DO;   /* SCALE FOR TED'S NEW ELECTRONICS (BRAVO!!!!) */     LOAD DELTA; DIV 3;     DELTA=RES;  END;  /* COMPUTE PARAMETER ADJUSTMENT VALUE BASED ON KNOBPOS*TIME */  IF DELTA>=12 THEN DO;         /* USE NUMBERS 12 TO 26       */    DELTA=DELTA+DELTA-20;       /* COMPUTE 4 TO 31            */    IF DELTA>31 THEN DELTA=31;  /* MAX OF 31 TO PREVENT OVERFLOW */    DELTA=SHL(4+(DELTA&3),SHR(DELTA,2)+5); /*" 000400" - "070000" */    I=SHR(DELTA,11);               /* GET AMOUNT TO ADJUST PARAMETER BY - 0 - 14 */    LOAD I; MUL I+3;               /* AMOUNT = I*(3+I)/4 + 1   -  0 TO 60 */    I=SHR(RES,2)+1;                /* CHANGE PARAMETERS BY THIS AMOUNT    */    IF I>30                        /* FOR LARGE AMOUNTS, MOVE EVEN FASTER */    THEN I=I+(I-30);               /* 10-60 = 10-90 */    IF KNOB.DELTA<0 THEN I=-I;     /* GET AMOUNT TO CHANGE PARAM BY       */    DO J=PRIOR.TIME TO SAMPLED.REAL.MILLISECONDS-10 BY 10; /* CORRECT FOR LOST TIME */       ACCUM=ACCUM+DELTA;          /* ACCUMULATE MODULO 16 BITS */       IF ACCUM<0 THEN DO;         /* IF CARRY INTO SIGN BIT THEN DO */          ACCUM=ACCUM-"100000";    /* ALLOW REMAINDER */          IF AMOUNT="100000" THEN AMOUNT=0;  /* IN CASE DISPLAY PAR HAPPENED        */          AMOUNT=AMOUNT+I;       END;    END;  END;  ELSE IF DELTA<8 THEN ACCUM="077777"; /* SET UP HYSTERESIS */  IF (AMOUNT\RESET.INFO)<>0       /* SOME CHANGE TO PROCESS */  THEN DO;     CALL MAJOR.UPDATE;           /* CALL SWAP PROCEDURE IF CHANGE NEEDED */     CALL SCANDATA;               /* CALL SCAN DATA TWICE AFTER UPDATE    */  END;                            /* TO BE SURE TO SCAN NEW KNOB POS      */END;