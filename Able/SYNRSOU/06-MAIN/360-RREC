/* :SYNRSOU:06-MAIN:360-RREC  -  CHECK FOR REAL TIME EFFECTS (RECORDING, UPDATES) *//*2007/02/02 - CJ  - Change NUM.MIDI.TRACKS to MAX.INPUTS = 2021998/06/11 - TY  - RTEs are only recorded if they are used by the Timbre or by MIDI.					  - Removed redundant expression.  Replaced frequent references to indexed						 variables with references to local copies.					  - Restructured to prevent FORCE.MIDI.EFFECTS flag from being needlessly						 cleared in each iteration of the main loop when not recording.1991/01/09 - PF  - Synclavier controllers recorded at all times1990/11/12 - CJ  - Fixed infinite looping crash bug1990/11/01 - cj  - changed use of rte.channels to preserve info						 to fix rte overwrite bug.1989/03/09 - PF  - Increase MAX.INPUTS to 1281989/06/06 -TSS,PF-FIXED RTE BUG WHICH CAUSED SPURIOUS ZERO RTE RECORDS1989/01/13 - PF  - Monster MIDI code1988/11/10 - PF  - FIXED RIBBON CODE TO WORK WITH MULTI TRACK MIDI CODE (THD.LIVE.RTES)1988/04/13 - PF  - MODIFIED TO ALLOW FOR MULTI TRACK RECORDING1986/07/31 - CJ  - CHECKED FOR LOD RECORDING1986/07/15 -CJ,TS- CHANGED CALL TO CHECK.EFFECTS1986/05/15 - "official" creation of release-M modules*//* CONTINUE WITH NOTE PROCESSING:	CHECK FOR REAL TIME EFFECTS CHANGES THAT MUST BE RECORDED */BEGIN;	DCL (I,J,K,L,M) FIXED;	DCL (II,JJ)     FIXED;	DCL UPD			 FIXED;	DCL CHAN			 FIXED;	IF (RECD<>0)										/* IF RECORDING */	AND (RECD.TRK<>0)									/* SYNCLAVIER RECORDING */	THEN DO;			II = RTE.CHANGEBITS;								// Latch changebits.		while (ii != 0)									// While any changebits.		{			DISABLE;				WRITE("2")=ii;									// USE HARDWARE PRIORITY			I = SHR(READ("2"),1);						// ENCODER FOR SPEED			ENABLE;						II = II XOR BITS(I);							// Erase identified bit						jj = RTE.CHANGETABLE(I);					// Latch changetable.					while (jj != 0)								// While any changetable.			{				DISABLE;					WRITE("2")=jj;								// USE HARDWARE PRIORITY				J = SHR(READ("2"),1);					// ENCODER FOR SPEED				ENABLE;								jj = jj XOR BITS(J);						// Erase identified bit				CHAN=SHL(I,4)+j;						/* COMPUTE INPUT CHANNEL # */				K=CHAN;								   // was midi  mapped				IF CHAN=0 THEN DO;					/* PROCESSING OUR KEYBOARD */					L=NEW.TOGGLES;						/* LOCAL NEW.TOGGLES VARIABLE */					M=RECD.TRK;							/* LOCAL RECD.TRK VARIABLE */				END;				ELSE DO;									/* PROCESSING MIDI KEYBOARD */					L=0;									/* NO NEW.TOGGLES */					M=K;									/* GET CORRECT RECORD TRACK */					IF M=0 THEN M=RECD.TRK;			/* A MIDI INPUT ROUTED TO OUR KBD */				END;				WRITE(MAM)=TRK.HEAD;				WRITE(MAL)=M;				THP       =READ(MD);					/* LOOKUP TRACK HEAD POINTER */				WRITE(MAM)=TBUT.PTR;				WRITE(MAL)=K;				IF  ((RTE.CHANGES(CHAN)\L)<>0)	/* SOMETHING NEW FOR THIS TRACK */				AND (((READ(MD)&B.READY.TRK)<>0)	/* THIS TRACK IS ENABLED FOR RECORD */				OR   (K=0))								/* ROUTED TO KEYBOARD */				THEN DO;					/* SET UP PTRS */					IF CHAN=0 THEN DO;				/* OUR KEYBOARD */						TB        =0;						WRITE(MAM)=TIM.HEAD;						TBP       =READ(MD);						TRK       =RECD.TRK;						UPD       =1;					END;					ELSE DO;								/* MIDI KEYBOARD */						WRITE(MAM)=THP;						WRITE(MAL)=THD.CTIMB;						TB        =READ(MD);						WRITE(MAM)=TIM.HEAD;						WRITE(MAL)=TB;						TBP       =READ(MD);						TRK       =K;						IF TRK=0 THEN TRK=RECD.TRK;						UPD       =0;					END;					/* Step 1: Set bits for all RTEs that are used by the Timbre. */					WRITE(MAM)=TBP; WRITE(MAL)=TIM.USED.RTES;					J = READ(MD);		/* RTES USED BY THIS TIMBRE - SAMPLED IN LOWER HALF, CONT IN UPPER HALF */					J = (J\ROT(J,8));	/* (SAMPLED OR CONTINUOUS) IN BOTH HALVES */					/* Step 2: Also set bits for all RTEs that are used for MIDI. */					WRITE(MAM)=THP; WRITE(MAL)=THD.MIDI;					IF READ(MD)<>0 THEN DO;	/* TRACK IS ROUTED TO MIDI OUTPUT */						WRITE(MAL) = THD.ACTIVE.MIDI.RTES;						DO K = 0 TO 5;							IF (READ(MD) & BITS(K))<>0 THEN J = J\R.LOOK(K);						END;					END;					/* Step 3: Now disable bits for all RTEs which haven't changed. */					J = J & RTE.CHANGES(CHAN);					/* ONLY RECORD IF (ENABLED RTES HAVE CHANGED) OR (TOGGLES HAVE CHANGED). */					IF ((J\L)<>0) THEN DO;						/* RECORD THOSE RTE'S IN NOTELIST.  ALWAYS MUST UPDATE ACTIVE NOTES FROM CHANGES HERE. */						/* USE CURRENT TIME TO RECORD REAL TIME EFFECTS */						/* SINCE THEY ARE PLAYED BACK WITHOUT A DELAY   */						CALL COMPUTE.RTE.TIME;						CALL CHECK.EFFECTS(RTEMSB,RTELSB,J,UPD,CHAN);						IF FORCE.MIDI.EFFECTS<>0 THEN DO;	/* JUST STARTED RECORDING */							WRITE(MAM)=THP;						/* FORCE.MIDI.EFFECTS GETS CLEARED BELOW */							CALL CHECK.MIDI.EFFECTS;			/* ENSURE THAT MIDI GETS UPDATED ON START.RECORD */						END;					END;				END;				/* CAN CLEAR RTE.CHANGETABLE BIT ONCE WE KNOW THERE */				/* WERE ANY ACTIVE NOTES.  ALSO, ANY CHANGES        */				/* NOT RECORDED HERE ARE NOT NEEDED.                */				RTE.CHANGES(CHAN)  = 0;			}	/* OF ANY BITS SET */						RTE.CHANGETABLE(I) = 0;		}		/* OF LOOP OVER INPUTS */		RTE.CHANGEBITS = 0;		FORCE.MIDI.EFFECTS=0;	/* CLEAR FLAG */	END;	/* OF IF RECORDING */END;	/* OF BEGIN FOR THIS FILE */