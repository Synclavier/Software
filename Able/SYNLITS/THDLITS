/*	:SYNLITS:THDLITS  $TITLE  EXTERNAL MEMORY ORGANIZATION, SEQUENCER LITERALS	*/

/*
Modified:
1999/10/31 - TY  - Added CFIT.MAP# and changed #.OF.MAP.PTRS to accommodate
1999/04/11 - TY  - Nuked DEFAULT.ACTIVE.MIDI.RTES.  It is replaced by a static GID/PID variable now.
1991/03/13 - PF  - Added B.PEDAL1 to default.active.midi.rtes
1991/02/13 - CJ  - Added magic #6
1990/11/06 - PF  - Added THD.SUSTAIN
1989/09/22 - CJ  - Added base pointers for tempo and meter maps
1989/07/23 - PF  - Added SEQ.MIDINET in BASE SECTOR
1989/07/18 - PF  - Added THD.MIDI.PATH definition
1988/10/14 - cj  - added thd.start.msb, thd.start.lsb to assist in
						 startup of notes in middle
1988/08/30 - PF  - CHANGED THD.SEQ.RTES; THD.MIDI.IN.RTES TO THD.LIVE.RTES
1988/08/05 - cj  - stored footage offset and smpte display offset in
1988/06/20 - eg  - added thd.ignore - use to temporarily disable playback - checked in compute.active.trks
1988/05/12 - CJ  - REMOVED SEQ.ROUTS.VALID, ETC.
1988/05/04 - PF  - ADDED DEFS FOR THD.SEQ.RTES, THD.MIDI.IN.RTES
1988/03/03 - cj  - Added definition for THD.CUE.OUT
1988/03/03 - eg  - thd.seq.cut.bits
1987/12/17 - MWH - Merge poly updates with N-Final plus AEE sources
1987/11/17 - cj  - added space in base sector for protect bit, captions
1987/09/08 - MWH - ADDED PREFERED POLY BIN TO TRACK HEADER
1987/01/06 - CJ  - CHANGED KBD.MONO1, MONO2, MONO3 SPLICE TIMES
1986/12/31 - CJ  - ADDED KBD.MONO SPLICE TIME DECLARATIONS
*/


/*	EXTERNAL MEMORY IS ALLOCATED IN TWO PHASES:

	DURING INITIALIZATION - SYNCLAVIER LOOK UP TABLES ARE ALLOCATED
									FROM THE TOP OF MEMORY DOWN.  THESE
									LOOK UP TABLES INCLUDE SINE TABLES,
									FREQUENCY TABLES, LOG TABLES, A NULL TIMBRE,
									ETC.  THESE TABLES ARE NOT MOVED DURING
									RUN TIME.

									(SEE VARIABLES DEFINED IN 040-GLOB)

	RUN TIME					 - OTHER AREAS ARE ALLOCATED IN REAL TIME
									OUT OF THE REMAINING (LOWER) MEMORY.
									THESE INCLUDE AREAS FOR TIMBRE INFORMATION,
									SEQUENCER NOTES, TIMBRE BANK, ETC.


	LOWER EXTERNAL MEMORY:						(REAL TIME ALLOCATION)

						SECTOR #		LENGTH		CONTENTS
ZEROES				0				1				ZEROES
BAS.PTR				1				BAS.LEN		BASE SECTOR FOR SEQUENCE
PAR.PTR				(VAR)			PAR.LEN		TIMBRE PARAMETER AREA
NAH.PTR				(VAR)			NAH.LEN		NOTE AREA
BNK.PTR				(VAR)			BNK.LEN		TIMBRE BANK AREA
INF.PTR				(VAR)			INF.LEN		SEQUENCER INFO AREA
TIM.PTR				(VAR)			TIM.LEN		PRECOMPUTED TIMBRE/PARTIAL
TRD.PTR				(VAR)			TRD.LEN		TIMBRE DISPLAY - ONLY CHANGED IN 'TERMINAL'
TRD.PTR+TRD.LEN	(VAR)			(VAR)			SYNCLAVIER LOOK UP TABLES
						(VAR)			(VAR)			OBJECT CODE SWAP FILES
EXAMOUNT												*/


/*	$PAGE  Sequencer Data Structure, Memory Management Routines	*/


/*	DEFINITIONS FOR SEQUENCER DATA STRUCTURE:	*/

/*	CONTENTS OF A SEQUENCES:

	1.  BASE SECTOR - SECTOR 0 OF A SEQUENCE - CONTAINS MISC INFORMATION
							AND POINTERS TO TIMBRES, NOTES, MUSIC PRINTING,
							AND OTHER INFORMATION.					(BAS.PTR,BAS.LEN)

	2.  TIMBRE PARAMETERS	(FORMAT DEFINED IN 120-TDEF)	(PAR.PTR,PAR.LEN)

	3.  NOTE INFORMATION - CONSISTS OF:							(NAH.PTR,NAH.LEN)

			 NOTE AREA HEADER - 1 SECTOR, HOLDS POINTERS FOR UP TO
									  256 TRACKS.

			 TRACK HEADER		- 1 SECTOR FOR EACH NON-EMPTY TRACK.
									  CONTAINS MISC INFO FOR THE TRACK (LOOP,
									  PLAY POINTERS, RTE DATA) AS WELL
									  AS A POINTER TO THE FIRST BLOCK
									  OF ACTUAL NOTES.  A TRACK HEADER
									  SECTOR IS ALSO ALLOCATED FOR
									  THE KEYBOARD AND SPLIT KEYBOARD.

			 NOTE SEGMENTS		- 1 SECTOR EACH.  LINKED LIST OF
									  BLOCKS.  EACH BLOCK CONTAINS
									  A FORWARD & REVERSE POINTER AND
									  UP TO 126 2-WORD NOTE RECORD

	4.  MUSIC PRINTING INFORMATION - UNDEFINED FORMAT		(INF.PTR,INF.LEN)	*/


/*	$PAGE - DEFINITIONS FOR BASE SECTOR:	*/


DCL SEQ.SCALE			LIT  '00';	/*	LOCATIONS 0-11 - HOLDS ACTIVE SCALE	*/
DCL SEQ.SPEED			LIT  '12';	/*	HOLDS LATEST SEQUENCER SPEED			*/
DCL SEQ.CLICK			LIT  '13';	/*	HOLDS SEQUENCER CLICK RATE				*/
DCL SEQ.CRM				LIT  '14';	/*	CLICK RATE MULTIPLIER		*/
DCL SEQ.SMODE			LIT  '15';	/*	SMPTE MODE						*/
DCL SEQ.SMBITS			LIT  '16';	/*	SMPTE START # OF BITS		*/
DCL SEQ.SECFRA			LIT  '17';	/*	SMPTE SECONDS/FRAMES			*/
DCL SEQ.HRSMIN			LIT  '18';	/*	SMPTE HRS/MINS					*/
DCL SEQ.BPM				LIT  '19';	/*	BEATS PER MEASURE				*/
DCL SEQ.MARK.MSB		LIT  '20';	/*	MARK BUTTON TIME (32-BITS)	*/
DCL SEQ.MARK.LSB		LIT  '21';	/*	MARK BUTTON TIME (32-BITS)	*/

DCL SEQ.FMODE			LIT  '22';	/*	FOOTAGE MODE (CODED)					*/
DCL SEQ.FOFFSET		LIT  '23';	/*	FOOTAGE DISPLAY OFFSET	- FEET	*/
DCL SEQ.FOFFSET.FFR  LIT  '24';	/*	FOOTAGE DISPLAY OFFSET	- FRAMES	*/
DCL SEQ.FOFFSET.FFB  LIT  '25';	/*	FOOTAGE DISPLAY OFFSET	- FBITS	*/

DCL SEQ.DOFFSET		LIT  '26';	/*	SEQ.DOFFSET.MSB            		*/
DCL SEQ.DOFFSET.MSB  LIT  '26';	/*	SMPTE DISPLAY OFFSET - TWO'S		*/
DCL SEQ.DOFFSET.LSB  LIT  '27';	/*	COMPLEMENT # OF SMPTE BITS 		*/
DCL SEQ.DOFFDIS		LIT  '28';	/*	SET TO 1 TO DISABLE OFFSET			*/

DCL NUM.SEQ.PARAMS	LIT  '29';	/*	NUMBER OF KNOB PARAMETERS IN SEQ LIST	*/

DCL SEQ.DTD.SOLOS		LIT  '29';	/*	SNAPSHOT OF DTD SOLOS DURING SAVE		*/


/*	30-31: FREE	*/

DCL MAGIC.NUMBER		LIT  '32';	/*	USED TO DETECT VALID DATA			*/
DCL SEQ.OCTRATIO		LIT  '33';	/*	STORE ACTIVE OCTAVE RATIO HERE	*/

/*	SEQ.LOOP-SEQ.S.P.T.C MUST BE IN ORDER	*/

DCL SEQ.LOOP			LIT  '34';	/*	TRUE IF OVERALL LOOP				*/
DCL SEQ.G.P.T			LIT  '35';	/*	PLAY TIME LSB OF LOOP END		*/
DCL SEQ.G.P.T.C		LIT  '36';	/*	PLAY TIME MSB OF LOOP END		*/

DCL SEQ.S.P.T			LIT  '37';	/*	PLAY TIME LSB OF LOOP START	*/
DCL SEQ.S.P.T.C		LIT  '38';	/*	PLAY TIME MSB OF LOOP START	*/

DCL SEQ.COUNTIN		LIT  '39';	/*	COUNT IN # OF BEATS				*/
DCL SEQ.LOOPLEN		LIT  '40';	/*	LOOP LENGTH IN BEATS				*/

/*	43-47: FREE	*/

DCL SEQ.LIVE.CLICK	LIT  '48';	/*	LIVE CLICK TRACK FOR SEQUENCER	*/
DCL SEQ.MPREV			LIT  '49';	/*	MUSIC PRINTING REV#					*/
DCL SEQ.NUMTIMBS		LIT  '50';	/*	NUMBER OF TIMBRES IN TIMBRE INFO	*/

DCL SEQ.POLY.FREQ.TABLE	LIT  '51';	/*	CODE FOR WHICH FREQ LOOKUP TABLE TO USE WITH POLY SAMPLING NOTES	*/

/*	52-62: FREE	*/

DCL SEQ.NUMSEC			LIT  '63';	/*	TOTAL # OF SECTORS IN SEQUENCE	*/

DCL SEQ.BAS				LIT  '64';	/*	RELATIVE POINTER TO BASE SECTOR	*/
											/*				LENGTH						*/
DCL SEQ.PAR				LIT  '66';	/*	RELATIVE POINTER TO TIMBRE INFO	*/
											/*				LENGTH						*/
DCL SEQ.NAH				LIT  '68';	/*	RELATIVE POINTER TO NOTE AREA		*/
											/*				LENGTH						*/
DCL SEQ.INF				LIT  '70';	/*	RELATIVE POINTER TO MP INFO		*/
											/*				LENGTH						*/

/*	72,74,76,78 - OTHER RELATIVE POINTERS FOR FUTURE BLOCKS			*/

DCL SEQ.PROT			LIT  '80';	/*	SEQUENCER PROTECT BITS			*/
DCL SEQ.CAPTS			LIT  '81';	/*	SEQUENCER CAPTION INFORMATION	*/
											/*	RESERVE 40 WORDS OF SPACE		*/
DCL SEQ.CAPTS.LEN		LIT  '40';

DCL SEQ.CBITS.VALID	LIT '121';	/*	TRUE IF FOLLOWING BITS WERE SET UP BY A CUT	*/
DCL SEQ.CUT.BITS		LIT '122';	/*	16 WORDS OF BITS TO SHOW WHICH	*/
											/*	TRACKS WERE SOLOED WHEN A CUT WAS MADE	*/
											/*	RESERVE 16 WORDS OF SPACE		*/

DCL SEQ.MIDINET		LIT '138';	/*	HOLDS CURRENT FILENAME OF MIDINET ROUTING	*/
											/*	RESERVE 16 WORDS OF SPACE	*/
											/*	FORMAT: UPPER BYTE OF 1ST WORD HOLDS BYTE COUNT OF STRING	*/
											/*	FOLLOWED BY UP TO 31 CHARS	*/


/*	154-169: FREE	*/

DCL SEQ.MAP.PTRS		LIT ' 170';	/*	POINTERS FOR TEMPO AND METER MAPS	*/
DCL #.OF.MAP.PTRS		LIT '   3';	/*	THREE POINTERS FOR NOW					*/
											/*	NOTE: DECLARE MORE VARIABLES AFTER	*/
											/*	METER.MAP.PTR IF #.OF.MAP.PTRS		*/
											/*	CHANGES !!!									*/
DCL TEMPO.MAP#			LIT '   0';
DCL METER.MAP#			LIT '   1';
DCL CFIT.MAP#			LIT '   2';

DCL SEQ.MAP.CODE		LIT '1024';	/*	STORED AS TRACK # TO IDENTIFY BLOCKS	*/
DCL SEQ.GRPAUX.CODE	LIT '2048';	/*	STORED AS TRACK # TO IDENTIFY BLOCKS	*/

/*	173-189: RESERVE MORE MAP POINTERS (LATER)	*/

DCL SEQ.BUTTON.LIST	LIT ' 190';	/*	WORKING TRACK NUMBERS FOR BUTTON PANL	*/
DCL SEQ.BUTTON.LEN	LIT '   4';	/*	4 USED, BUT SAVE SPACE FOR MORE...		*/

/*	198-255: FREE	*/

/*	NOTE: BAS.LEN IS 2 SECTORS LONG SO PRESUMABLY 256-511 ARE ALSO FREE...	*/


/*	MAGIC NUMBERS:	*/

DCL MAGIC#1			LIT '"123456"';	/*	INDICATES 10 MS. DURATIONS IN SEQ.	*/
DCL MAGIC#2			LIT '"123457"';	/*	INDICATES 5  MS. DURATIONS IN SEQ.	*/
DCL MAGIC#3			LIT '"123460"';	/*	INDICATES SFM SEQUENCE					*/
DCL MAGIC#4			LIT '"123461"';	/*	INDICATES TIMBRE FRAME FORMAT			*/
DCL MAGIC#5			LIT '"123462"';	/*	INDICATES 32 TRACK FORMAT				*/
DCL MAGIC#6			LIT '"123463"';	/*	INDICATES INCLUDE TEMPO MAP			*/
DCL MAGIC#7			LIT '"123464"';	/*	INDICATES INCLUDES GROUPED TRACKS	*/


/*	$PAGE - DEFINITIONS FOR NOTE AREA HEADER, TRACK BASE SECTOR	*/


/*	DEFINITIONS FOR NOTE AREA HEADER:	*/

/*	NOTE AREA HEADER CONTAINS 256 POINTERS, 1 FOR EACH POSSIBLE TRACK.
	EACH POINTER IS A SECTOR NUMBER (RELATIVE TO THE NOTE AREA HEADER)
	THAT CONTAINS THE TRACK HEADER SECTOR FOR THAT TRACK	*/


/*	DEFINITIONS TRACK HEADER SECTOR:	*/

/*	REAL TIME INFORMATION:	*/

DCL THD.FOR			LIT  '( 0)';	/*	FORWARD POINTER TO FIRST NOTE LIST SEGMENT			*/
DCL THD.REV			LIT  '( 1)';	/*	REVERSE POINTER (ALWAYS 0 FOR TRACK HEADER SECTOR)	*/
DCL THD.TRK			LIT  '( 2)';	/*	HOLDS TRACK # FOR GARBAGE COLLECT	*/

DCL THD.NEVF		LIT  '( 3)';	/*	FORWARD POINTER FOR NEXT EVENT QUE	*/
DCL THD.NEVR		LIT  '( 4)';	/*	REVERSE POINTER FOR NEXT EVENT QUE	*/

DCL THD.MRNPTR		LIT  '( 5)';	/*	MOST RECENT NPTR FOR THIS TRACK		*/
DCL THD.ARP			LIT  '( 6)';	/*	ARPEGGIATE  NPTR FOR THIS TRACK		*/

DCL THD.ACTIVE		LIT  '( 7)';	/*	TRUE FOR ACTIVE TRACKS					*/

/*	CURRENT PLAY POINTERS & INFO:	*/

DCL THD.NMSB		LIT  '( 8)';	/*	NEXT EVENT MSB ABSOLUTE TIME	*/
DCL THD.NLSB		LIT  '( 9)';	/*	NEXT EVENT LSB ABSOLUTE TIME	*/
DCL THD.LMSB		LIT  '(10)';	/*	LAST EVENT MSB ABSOLUTE TIME	*/
DCL THD.LLSB		LIT  '(11)';	/*	LAST EVENT LSB ABSOLUTE TIME	*/

DCL THD.WRD			LIT  '(12)';	/*	CURRENT PLAY POINTER - WRD #	*/
DCL THD.SEC			LIT  '(13)';	/*	CURRENT PLAY POINTER - SEC #	*/

DCL THD.CXPOS		LIT  '(14)';	/*	CURRENT TRANSPOSITION				*/
DCL THD.CTIMB		LIT  '(15)';	/*	CURRENT TIMBRE #						*/
DCL THD.CLPITCH	LIT  '(16)';	/*	CURRENT LAST PITCH					*/
DCL THD.CTBITS		LIT  '(17)';	/*	CURRENT REAL TIME RPT/ARP BITS	*/
DCL THD.CG.VAL		LIT  '(18)';	/*	CURRENT MIDI PORTAMENTO SWITCH	*/
DCL THD.CPROGRAM	LIT  '(19)';	/*	CURRENT MIDI PROGRAM NUMBER		*/
DCL THD.POLY		LIT  '(20)';	/*	PREFERED POLY BIN FOR ANY SOUND FILES ON THIS TRACK	*/
DCL THD.XPOSBASE	LIT  '(21)';	/*	BASE KEY NUMBER FOR TRANSPOSING								*/
DCL THD.MIDX	   LIT  '(22)';	/*	MIDI OUTPUT TRANSPOSE         								*/

/*	23: RESERVED FOR FUTURE EXPANSION	*/

DCL THD.RTES		LIT  '(24)';	/*	CURRENT REAL TIME EFFECTS	*/


/*	USER INFORMATION STORED HERE:	*/

DCL THD.MIDI		LIT  '(32)';	/*	MIDI ROUTING FOR TRACK		*/
DCL THD.TVOL		LIT  '(33)';	/*	TRACK VOLUME					*/
DCL THD.TROU		LIT  '(34)';	/*	TRACK ROUTING					*/
DCL THD.TPAN		LIT  '(35)';	/*	TRACK PAN						*/

DCL THD.ORATIO		LIT  '(36)';	/*	OCTAVE RATIO FOR THIS TRACK	*/

/*	MUST BE IN ORDER	*/

DCL THD.NACT		LIT  '(37)';	/*	NUMBER OF ACTIVE NOTES		*/
DCL THD.NDEC		LIT  '(38)';	/*	NUMBER OF DECAY  NOTES		*/

DCL THD.SXPOS		LIT  '(39)';	/*	TRACK STARTING TRANSPOS		*/
DCL THD.STIMB		LIT  '(40)';	/*	STARTING TIMBRE #				*/
DCL THD.SLPITCH	LIT  '(41)';	/*	STARTING LAST PITCH INFO	*/

DCL THD.NN.MSB		LIT  '(42)';	/*	NUMB OF NOTES - MSB			*/
DCL THD.NN.LSB		LIT  '(43)';	/*	NUMB OF NOTES - LSB			*/

/*	$PAGE  -  TRACK HEADER SECTOR (CONTINUED)	*/


/*	THD.CPLIST, THD.CPSUM, THD.CPPSUM MUST BE IN ORDER	*/

DCL THD.CPLIST		LIT  '(44)';	/*	POINTER FOR LINKED LIST OF TRACKS USING CHANNEL PRESSURE	*/
DCL THD.CPSUM		LIT  '(45)';	/*	CURRENT  CHANNEL PRESSURE VALUES ON EACH TRACK	*/
DCL THD.CPPSUM		LIT  '(46)';	/*	PREVIOUS CHANNEL PRESSURE VALUES ON EACH TRACK	*/

/*	THD.CPLIST, THD.RF.TC, THD.RF.PARS MUST BE IN ORDER	*/

DCL THD.ARLIST		LIT  '(47)';	/*	ACTIVE RIBBON LINKED LIST		*/
DCL THD.RF.TC		LIT  '(48)';	/*	DUPLICATE RIBBON TIME CONST	*/
DCL THD.RF.PARS	LIT  '(49)';	/*	PARAMS TO UPDATE					*/

DCL THD.SCALE		LIT  '(50)';	/*	SPECIAL SCALE FOR THIS TRACK	*/

/*	THD.UPD.PARS, THD.UPD.QUED, THD.UPD.LINK MUST BE IN ORDER	*/

DCL THD.UPD.PARS	LIT  '(62)';	/*	UPDATE PAR BITS	*/
DCL THD.UPD.QUED	LIT  '(63)';	/*	TRUE IF LINKED		*/
DCL THD.UPD.LINK	LIT  '(64)';	/*	UPDATE LINK			*/

DCL THD.TRIGGER	LIT  '(65)';	/*	TRIGGER SIDE FOR PING/PONG	*/

DCL THD.INFO.TRIGGER.KEY	LIT  '(66)';	/*	NONZERO WHEN INFO MODE KEY TRIGGER HAS OCCURRED	*/


/*	INFO IN TRACK HEADER SECTOR FOR START OF OVERALL LOOP	*/

DCL THD.LP.NMSB		LIT  '(67)';	/*	LOOP NEXT EVENT MSB ABSOLUTE TIME	*/
DCL THD.LP.NLSB		LIT  '(68)';	/*	LOOP NEXT EVENT LSB ABSOLUTE TIME	*/
DCL THD.LP.LMSB		LIT  '(69)';	/*	LOOP LAST EVENT MSB ABSOLUTE TIME	*/
DCL THD.LP.LLSB		LIT  '(70)';	/*	LOOP LAST EVENT LSB ABSOLUTE TIME	*/

DCL THD.LP.WRD			LIT  '(71)';	/*	LOOP PLAY POINTER - WRD #	*/
DCL THD.LP.SEC			LIT  '(72)';	/*	LOOP PLAY POINTER - SEC #	*/

DCL THD.LP.CXPOS		LIT  '(73)';	/*	LOOP TRANSPOSITION				*/
DCL THD.LP.CTIMB		LIT  '(74)';	/*	LOOP TIMBRE #						*/
DCL THD.LP.CLPITCH	LIT  '(75)';	/*	LOOP LAST PITCH					*/
DCL THD.LP.CTBITS		LIT  '(76)';	/*	LOOP REAL TIME RPT/ARP BITS	*/
DCL THD.LP.CG.VAL		LIT  '(77)';	/*	LOOP MIDI PORTAMENTO SWITCH	*/
DCL THD.LP.CPROGRAM	LIT  '(78)';	/*	LOOP MIDI PROGRAM NUMBER		*/

/*	79-82: RESERVED FOR FUTURE EXPANSION	*/

DCL THD.LP.RTES		LIT  '(83)';	/*	LOOP REAL TIME EFFECTS	*/

/*	91-94: FREE	*/

/*	INDEPENDENT LOOPS:	*/

DCL THD.ILP				LIT  '(95)';	/*	TRUE IF INDEP LOOP			*/
DCL THD.COUNTIN.MSB	LIT  '(96)';	/*	32-BIT COUNT-IN DURATION IN MSEC	*/
DCL THD.COUNTIN.LSB	LIT  '(97)';
DCL THD.LOOPLEN.MSB	LIT  '(98)';	/*	32-BIT ILP LENGTH IN MSEC	*/
DCL THD.LOOPLEN.LSB	LIT  '(99)';


/*	$PAGE  -  TRACK HEADER SECTOR (CONTINUED)	*/


/*	INFO FOR START OF INDEPENDENT LOOP	*/

DCL THD.ILS.WRD		LIT '(100)';	/*	ILS PLAY POINTER - WRD #	*/
DCL THD.ILS.SEC		LIT '(101)';	/*	ILS PLAY POINTER - SEC #	*/

DCL THD.ILS.CXPOS		LIT '(102)';	/*	ILS TRANSPOSITION				*/
DCL THD.ILS.CTIMB		LIT '(103)';	/*	ILS TIMBRE #					*/
DCL THD.ILS.CLPITCH	LIT '(104)';	/*	ILS LAST PITCH					*/
DCL THD.ILS.CTBITS	LIT '(105)';	/*	ILS REAL TIME RPT/ARP BITS	*/
DCL THD.ILS.CG.VAL	LIT '(106)';	/*	ILS MIDI PORTAMENTO SWITCH	*/
DCL THD.ILS.CPROGRAM	LIT '(107)';	/*	ILS MIDI PROGRAM NUMBER		*/

/*	108-111: RESERVED FOR FUTURE EXPANSION	*/

DCL THD.ILS.RTES		LIT '(112)';	/*	ILS REAL TIME EFFECTS		*/


/*	INFO FOR END OF INDEPENDENT LOOP	*/

DCL THD.ILE.WRD		LIT '(120)';	/*	ILE PLAY POINTER - WRD #	*/
DCL THD.ILE.SEC		LIT '(121)';	/*	ILE PLAY POINTER - SEC #	*/

DCL THD.ILE.CXPOS		LIT '(122)';	/*	ILE TRANSPOSITION				*/
DCL THD.ILE.CTIMB		LIT '(123)';	/*	ILE TIMBRE #					*/
DCL THD.ILE.CLPITCH	LIT '(124)';	/*	ILE LAST PITCH					*/
DCL THD.ILE.CTBITS	LIT '(125)';	/*	ILE REAL TIME RPT/ARP BITS	*/
DCL THD.ILE.CG.VAL	LIT '(126)';	/*	ILE MIDI PORTAMENTO SWITCH	*/
DCL THD.ILE.CPROGRAM	LIT '(127)';	/*	ILE MIDI PROGRAM NUMBER		*/

/*	128-131: RESERVED FOR FUTURE EXPANSION	*/

DCL THD.ILE.RTES		LIT '(132)';	/*	ILE REAL TIME EFFECTS	*/


DCL THD.USAGE			LIT '(140)';	/*	TIMBRE USAGE TABLE		*/
												/*	16 2-WORD ENTRIES			*/
												/*	HOLDS TIMBRE #, COUNT	*/

DCL THD.USAGE.LEN		LIT '( 32)';

/*	THE FOLLOWING TWO VARIABLES CONTAIN THE CONTROLLER NUMBER TO WHICH THE
	EQUIVALENT SYNCLAVIER EXPRESSION IS SUPPOSED TO BE ROUTED. EACH ARRAY CAN
	SUPPORT ROUTINGS OF UP TO 8 CONTINUOUS CONTROLLERS AND 8 SWITCH INPUTS FOR
	EACH TIMBRE (0-17).  VALID CONTROLLER/SWITCH NUMBERS ARE IN THE RANGE 0-95.	*/

/*	THD.SYN.CROUT, THD.SYN.SROUT MUST BE IN ORDER	*/

DCL THD.SYN.CROUT			LIT '(172)';	/*	SYNCLAVIER TO MIDI ROUTING ARRAY FOR CONTINUOUS CONTROLLERS	*/
DCL THD.SYN.SROUT			LIT '(180)';	/*	SYNCLAVIER TO MIDI ROUTING ARRAY FOR SWITCHES					*/

DCL THD.NUM.NLS			LIT '(188)';	/*	# OF NOTE LIST SEGMENTS FOR TRACK	*/

/*	INDEP LOOP COUNTERS (KEEP NEXT SIX WORDS IN ORDER)	*/

DCL THD.ILPCTR				LIT '(189)';	/*	CURRENT ILP COUNTER	*/
DCL THD.ANY.FOR			LIT '(190)';	/*	SET TO 1 IF MORE NOTES IN FORWARD DIR	*/
DCL THD.ANY.REV			LIT '(191)';	/*	SET TO 1 IF MORE NOTES IN REVERSE DIR	*/

DCL THD.LP.ILPCTR			LIT '(192)';	/*	LOOP ILP COUNTER		*/
DCL THD.LP.ANY.FOR		LIT '(193)';	/*	SET TO 1 IF MORE NOTES IN FORWARD DIR	*/
DCL THD.LP.ANY.REV		LIT '(194)';	/*	SET TO 1 IF MORE NOTES IN REVERSE DIR	*/

DCL THD.MIDI.CG.VAL		LIT '(195)';	/*	MOST RECENT MIDI OUTPUT			*/
DCL THD.MIDI.CPROGRAM	LIT '(196)';	/*	MOST RECENT MIDI PROGRAM #		*/

DCL THD.MIDI.RTES			LIT '(197)';	/*	MOST RECENT MIDI RTE VALUES	*/

DCL THD.ILS.SCANNED		LIT '(205)';	/*	SET TO ONE WHEN ILS RECORD PLAYED (USED TO DO A CONSISTENCY CHECK)	*/
DCL THD.LP.ILS.SCANNED	LIT '(206)';	/*	LOOPED VERSION OF THD.ILS.SCANNED	*/


/*	THD.ACTIVE.MIDI.RTES CONTAINS SEVERAL BITS WHICH ARE USED TO		*/
/*	ENABLE/DISABLE BOTH INPUT AND OUTPUT OF MIDI RTE CHANGES				*/
/*	(I.E., PITCH WHEEL, MOD WHEEL, PEDALS, PRESSURE, VELOCITY, ETC)	*/
/*	THIS INFO SHOULD BE MOVED AROUND IN THE SAME WAY THAT THD.MIDI		*/
/*	IS MOVED. (I.E., IN SKT, SMT, MOVE.TIMBRE.TO)							*/
/*	THE HIGH BIT OF THIS WORD SHOULD BE SET TO INDICATE THAT THE		*/
/*	DATA IS VALID.  OTHERWISE IT WILL BE RESET TO THE DEFAULT VALUES	*/

/*	BIT DEFINITIONS: (SAME ORDER AS THD.RTES FOR 1ST 6 BITS)			*/
/*				BIT 0  -->	PEDAL1				(B.PEDAL1)					*/
/*				BIT 1  -->	PEDAL2				(B.PEDAL2)					*/
/*				BIT 2  -->	MOD WHEEL			(B.MWHEEL)					*/
/*				BIT 3  -->	BREATH CONTROLLER	(B.BREATH)					*/
/*				BIT 4  -->	PITCH WHEEL			(B.PWHEEL)					*/
/*				BIT 5  -->	RIBBON CONTROLLER	(B.RIBBON)					*/

/*				BIT 6  -->	PRESSURE				(B.PRESSURE)				*/
/*				BIT 7  -->	VELOCITY				(B.VELOCITY)				*/
/*				BIT 15 -->	VALID BIT			(MUST BE SET TO 1)		*/

DCL THD.ACTIVE.MIDI.RTES	LIT '(207)';	/*	BITS FOR ENABLED MIDI EXPRESSION INPUTS	*/

DCL THD.ILS.TIME.MSB		LIT '208';	/*	TIME OF ILS LOOP START			*/
DCL THD.ILS.TIME.LSB		LIT '209';	/*	USED TO DETECT 0 LENGTH LOOPS	*/

DCL THD.CUE.TRACK			LIT '210';	/*	NONZERO IF THIS IS CUE TRK		*/
DCL THD.NEV.MSB			LIT '211';	/*	CUED NEXT EVENT TIME				*/
DCL THD.NEV.LSB			LIT '212';	/*	LSB									*/

DCL THD.CUE.OUT			LIT '213';	/*	DYNAMIC OUTPUT ALLOCATION OUTPUT #	*/

DCL THD.LIVE.RTES			LIT '214';	/*	CURRENT LIVE VALUES (FROM KBD OR MIDI ONLY)	*/
DCL THD.IGNORE				LIT '222';	/*	IF TRUE, COMPUTE.ACTIVE.TRK DOESN'T SET THD.ACTIVE FOR TRACK, EVEN IF SOLOED	*/
DCL THD.START.MSB			LIT '223';	/*	USED BY START.UP.NOTES.IN.MIDDLE	*/
DCL THD.START.LSB			LIT '224';	/*	TO KNOW WHICH NOTES TO START		*/

DCL THD.MIDI.PATH			LIT '225';	/*	LOGICAL MIDI PATH TO MIDINET		*/

/*	BIT DEFINITIONS FOR THD.IGNORE						*/

DCL THD.IGNORE.IGNORE	LIT '1';			/*	IGNORE TRACK DURING PLAYBACK	*/
DCL THD.IGNORE.XPOS		LIT '2';			/*	TRACK IS A TRANSPOSE TRACK		*/

/*	BIT DEFINITIONS FOR THD.SUSTAIN:						*/
/*				BIT 0  -->	CURRENT SUSTAIN STATE		*/
/*				BIT 1  -->	OVERALL LOOP SUSTAIN STATE	*/
/*				BIT 2  -->	ILS SUSTAIN STATE				*/
/*				BIT 3  -->	ILE SUSTAIN STATE				*/

DCL THD.SUSTAIN	LIT '226';	/*	SUSTAIN PEDAL BITS			*/

DCL THD.GROUPLIST	LIT '227';	/*	POINTER TO GROUP LIST		*/
DCL THD.AUXINFO0	LIT '228';	/*	AUX SECTOR OF INFO			*/
DCL THD.AUXINFO1	LIT '229';	/*	AUX SECTOR OF INFO			*/
DCL THD.AUXINFO2	LIT '230';	/*	AUX SECTOR OF INFO			*/
DCL THD.NUMGRPAUX	LIT '  4';	/*	NUMBER POSSIBLE THEREOF...	*/

/*	231-238: FREE	*/

DCL THD.TRACK.TITLE	LIT '239';	/*	239 - 255 - track title	*/

/*	$PAGE - DEFINITIONS FOR NOTE LIST SEGMENT	*/


/*	EACH NOTE LIST SEGMENT CONTAINS A FORWARD POINTER, A REVERESE POINTER,
	A TRACK NUMBER, AND UP TO 126 NOTE RECORDS.  EACH NOTE SEGMENT
	TERMINATES WITH A (-1)	*/

/*	DEFINITIONS:	*/

/*	NLS.FOR - NLS.LP MUST BE IN ORDER	*/

DCL NLS.FOR			LIT '(  0)';	/*	FORWARD POINTER TO NEXT NOTE LIST SEGMENT	*/
DCL NLS.REV			LIT '(  1)';	/*	REVERSE POINTER TO LAST NOTE LIST SEGMENT (OR TRACK HEADER SECTOR)	*/
DCL NLS.TRK			LIT '(  2)';	/*	HOLDS TRACK # FOR GARBAGE COLLECT	*/
DCL NLS.FP			LIT '(  3)';	/*	POINTER IN SECTOR TO FIRST RECRD		*/
DCL NLS.LP			LIT '(  4)';	/*	POINTER IN SECTOR TO LAST  RECRD		*/

DCL NLS.FIRSTL		LIT '(  8)';	/*	FIRST NOTE RECORD WOULD GO HERE		*/
DCL NLS.LAST		LIT '(251)';	/*	LAST NOTE RECORD WOULD GO HERE		*/

DCL NLS.EOS			LIT '( -1)';	/*	FLAG AT END OF NOTE RECORDS			*/


/*	Definitions of track group records	*/

DCL	GRPAUX.FOR	LIT '(  0)';	/*	FORWARD POINTER; SAME AS THD.FOR AND NLS.FOR					*/
DCL	GRPAUX.REV	LIT '(  1)';	/*	REVERSE POINTER TO PRIOR BLOCK OR 0								*/
DCL	GRPAUX.TRK	LIT '(  2)';	/*	HOLDS TRACK IN LOWER, SEQ.GRPAUX.CODE IN UPPER				*/

DCL	GRPAUX.BUT	LIT '(  8)';	/*	HOLDS ASSOCIATED TRACK BUTTON ASSIGNMENTS						*/

DCL	GRPAUX.NUM	LIT '( 16)';	/*	HOLDS NUMBER OF TRACKS ON LIST									*/
DCL	GRPAUX.LST	LIT '( 24)';	/*	THIS IS THE START OF THE LIST										*/
DCL	GRPAUX.MAX	LIT '(216)';	/*	MAXIMUM NUMBER OF ENTRIES IN LIST.  ALLOWS ALL TRACKS		*/
