/* TIMLITS  - $TITLE DEFINITIONS FOR TIMBRE HEAD

   Modified:
   08/05/91 - PF  - added TIM.POLY.EVENT
   07/06/87 - MWH - ADD LITERALS FOR KEYBOARD LOOKUP TABLE
   
*/


/* STORAGE AREAS FOR EACH TIMBRE */

/* A BLOCK OF STORAGE IS ALLOCATED FOR EACH ACTIVE TIMBRE.   THIS
   BLOCK HOLDS PRECOMPUTED INFORMATION FOR THE BASIC TIMBRE AND
   UP TO FOUR PARTIALS.

   THIS SECTOR CONTAINS NUMEROUS PRE-COMPUTED INFORMATION FOR
   EACH PARTIAL (STORED NORMALLY WITH A STRIDE OF 4)  AS WELL
   AS PRECOMPUTED INFORMATION FOR EACH TIMBRE.

   USE THE FOLLOWING DEFINITIONS: */


/* FOR EACH PARTIAL: */


/* TIM.VOLUME.LEV IS PUT */
/* FIRST TO PROVIDE      */
/* SPEEDY LOOKUP DURING  */
/* NOTE START            */

DCL TIM.VOLUME.LEV        LIT  '(  0)';  /* HOLDS COMPUTED VOLUME LEVEL */


/* SET UP BY COMPACT.TIMBRES:  */

DCL TIM.PARTIAL.POINTERS  LIT  '(  4)';  /* WRD POINTER TO START OF PARTIAL (OFF OF PAR.PTR) */
DCL TIM.PINFO.POINTERS    LIT  '(  8)';  /* WRD POINTER TO PINFO AREA (OFF OF PAR.PTR) */


/* SET UP BY ALLOC.TIMBRE:     */

DCL TIM.SYNTH.TYP         LIT  '( 12)';  /* SYNTH TYPE            */
   DCL TIM#FM             LIT      '0';  /* SYNTH TYPE IS FM      */
   DCL TIM#POLY           LIT      '2';  /* SYNTH TYPE IS POLY    */
   DCL TIM#MONO           LIT      '3';  /* SYNTH TYPE IS MONO    */
   DCL TIM#CUE            LIT      '4';  /* TRACK IS CUE TRACK    */
   DCL TIM#STEREO         LIT      '8';  /* SYNTH INCLUDES STEREO */

DCL TIM.KBDTAB.PTR        LIT  '( 16)';  /* POINTER TO KBD LOOK UP TABLE - RELATIVE TO TIM.PTR, OFF BY ONE */
DCL TIM.WMEM#             LIT  '( 20)';  /* FOR FM WAVE MEMORY    */
DCL TIM.CAN.USE.BOTH      LIT  '( 24)';  /* ALLOCATION            */


/* SET UP BY COMPUTE.ENV.PARAMS */

DCL TIM.OPTIONS           LIT  '( 28)';  /* PARTIAL OPTIONS       */
DCL TIM.PARTIAL.VOL       LIT  '( 32)';  /* PARTIAL VOLUME FOR EACH PARTIAL - FROM PARTIAL */

DCL TIM.EATLIM            LIT  '( 36)';  /* EATLIM - EIDTMC       */
DCL TIM.EATLIM.STR        LIT  '(  5)';  /* STRIDE THEREOF        */

DCL (EATLIM.LOC)          LIT ' 0';      /* ENV ATK  LIMIT  0-255 */
DCL (EATINT.LOC)          LIT ' 1';      /* ENV ATK  INTERP INFO  */
DCL (EIDLIM.LOC)          LIT ' 2';      /* ENV IDEC LIMIT  0-255 */
DCL (EIDINT.LOC)          LIT ' 3';      /* ENV IDEC INTERP INFO  */
DCL (EIDTMC.LOC)          LIT ' 4';      /* ENV IDEC TIME   CONST */

DCL TIM.I.ISHC            LIT  '( 56)';  /* INDEX SHIFT COUNT.    */

DCL TIM.IATLIM            LIT  '( 60)';  /* IATLIM - IIDTMC       */
DCL TIM.IATLIM.STR        LIT  '(  5)';  /* STRIDE THEREOF        */

DCL (IATLIM.LOC)          LIT ' 0';      /* INX ATK  LIMIT  0-255 */
DCL (IATINT.LOC)          LIT ' 1';      /* INX ATK  INTERP INFO  */
DCL (IIDLIM.LOC)          LIT ' 2';      /* INX IDEC LIMIT  0-255 */
DCL (IIDINT.LOC)          LIT ' 3';      /* INX IDEC INTERP INFO  */
DCL (IIDTMC.LOC)          LIT ' 4';      /* INX IDEC TIME   CONST */

DCL TIM.EFDINT            LIT  '( 80)';  /* EFDINT - SFDTMC       */
DCL TIM.EFDINT.STR        LIT  '(  6)';  /* STRIDE THEREOF        */

DCL (EFDINT.LOC)          LIT '0';       /* ENV FDEC INTERP INFO  */
DCL (IFDINT.LOC)          LIT '1';       /* INX FDEC INTERP INFO  */
DCL (EFDTMC.LOC)          LIT '2';       /* ENV FDEC TIME   CONST */
DCL (IFDTMC.LOC)          LIT '3';       /* INX FDEC TIME   CONST */
DCL (SFDENV.LOC)          LIT '4';       /* ENV FDEC (SPLICING)   */
DCL (SFDTMC.LOC)          LIT '5';       /*          (SPLICING)   */

/* WRITE(MAL)=TIM.DEC.ADJ+(PTL*TIM.DEC.ADJ.STR); */
DCL TIM.DEC.ADJ           LIT  '(104)';  /* DECAY ADJUST LOOK UP FOR EACH PARTIAL */
DCL TIM.DEC.ADJ.STR       LIT  '(  5)';  /* STRIDE THEREOF *4 PARTIALS     */

DCL TIM.HARM.ADJ          LIT  '(124)';  /* HARDMONIC ADJUST LOOK UP TABLE */
DCL TIM.HARM.ADJ.STR      LIT  '(  8)';  /* STRIDE THEREOF *4 PARTIALS     */

DCL TIM.LOOP.INTERP       LIT  '(156)';  /* INFO FOR LOOPING TIMBRE FRAME  */
DCL TIM.LOOP.DELTAS       LIT  '(160)';  /* FOR EXPONENTIAL INFO FOR TIMBRE FRAME LOOP */


/* SET UP BY COMPUTE.LOGS:  */

DCL TIM.LOG.RA            LIT  '(164)';  /* LOG OF RATIO            */
DCL TIM.LOG.PT            LIT  '(168)';  /* LOG OF PARTIAL TUNING   */
DCL TIM.LOG.NCH           LIT  '(172)';  /* HOLDS LOG OF PAR CHORUS */
DCL TIM.LOG.NCHCH         LIT  '(176)';  /* HOLDS LOG OF CHORUS/PAR CHORUS */
                          

/* SET UP BY COMPUTE.RBITS: */

DCL TIM.INIT.STPOS        LIT  '(180)';  /* HOLDS INITIAL STEREO POSITION */

DCL TIM.PAN.PHASE         LIT  '(184)';  /* TO SYNCHRONIZE STEREO */

/* 188-191: FREE */


/* FOR EACH TIMBRE: */


/* SET UP BY COMPACT.TIMBRES:    */

DCL TIM.MISC.POINTER      LIT  '(192)';  /* WRD POINTER TO MISC AREA (OFF OF PAR.PTR) */
DCL TIM.TINFO.POINTER     LIT  '(193)';  /* WRD POINTER TO TINFO AREA (OFF OF PAR.PTR) */


/* SET UP BY COMPUTE.ENV.PARAMS: */

/* NOTE: TIM.CSEM MUST FOLLOW TIM.FD.SPLICING - SEE FINAL DECAY CODE       */

DCL TIM.TOPTIONS          LIT  '(194)';  /* HOLDS TIMBRE OPTION BITS       */
DCL TIM.FD.SPLICING       LIT  '(195)';  /* TRUE IF FD SPLICING PERFORMED  */
DCL TIM.CSEM              LIT  '(196)';  /* TO DETECT RECALLS              */


/* SET UP BY COMPUTE.MISC.INFO:  */

DCL TIM.PF.TC             LIT  '(197)';  /* PRESSURE FILTER TIME CONSTANT */
DCL TIM.RF.TC             LIT  '(198)';  /* RIBBON   FILTER TIME CONSTANT */


/* SET UP BY COMPUTE.LOGS:       */

DCL TIM.LOG.CH            LIT  '(199)';  /* LOG OF CHORUS (!!!)     */


/* SET UP BY COMPUTE.RBITS:      */

/* THE FOLLOWING ENTRIES EACH CONTAIN ONE BIT FOR EACH CONTINUOUS RTE */
/* PARAMETER (VOLUME, TUNING, ETC.).   THE BIT WILL BE SET IF THE     */
/* PARTICULAR EXPRESSION INPUT IS ROUTED TO THE CONTINUOUS PARAMETER. */
/* THIS PROVIDES A QUICK WAY OF TELLING WHICH CONTINUOUS PARAMETERS   */
/* MUST BE UPDATED WHEN A GIVEN EXPRESSION INPUT CHANGES              */

/* MUST BE IN ORDER: */

DCL TIM.ACT.PARS          LIT  '(200)';  /* BITS FOR PEDAL 1 & 2, MWHEEL, BREATH, PITCH, RIBBON */
DCL TIM.VP                LIT  '(208)';  /* BITS FOR VELOCITY PATCHING */
DCL TIM.PP                LIT  '(209)';  /* BITS FOR PRESSURE PATCHING */
DCL TIM.KP                LIT  '(210)';  /* BITS FOR KBD CV   PATCHING */

/* USED.RTES CONTAINS AN 8 BIT QUANTITY IN EACH HALF.  THESE BITS      */
/* TELL WHETHER A GIVEN EXPRESSION INPUT AFFECTS ANY CONTINUOUS        */
/* PARAMETER (UPPER HALF),  OR SAMPLED PARAMETER (LOWER HALF).         */
/* THIS INFORMATION IS USED TO DECIDE WHICH REAL TIME EFFECTS CHANGES  */
/* TO RECORD.                                                          */

DCL TIM.USED.RTES         LIT  '(211)';  /* HOLDS BITS FOR ACTIVE EXPRESSION INPUTS */

/* THE .LOOK ENTRIES ARE USED TO QUICKLY LOOK TO SEE IF A GIVEN PARAMETER */
/* IS AFFECTED BY 1 OR MORE EXPRESSION INPUT ON 1 OR MORE PARTIALS.       */
/* THEY ARE CHECKED DURING NOTE STARTING (ETC.) TO ACTUALLY APPLY THE     */
/* REAL TIME EFFECT.   THEY CONTAIN A 4 BIT FIELD FOR EACH OF 4 PARTIALS. */
/* EACH FIELD IS A POINTER TO A LIST IF RTE PATCHES STARTING AT           */
/* TIM.RTE.PATCHES.   EACH PATCH CONTAINS 3 5 BIT FIELDS THAT TELL WHAT   */
/* EXPRESSION INPUTS ARE USED.                                            */


/* SAMPLED PARAMETERS - MUST BE IN ORDER: */

DCL TIM.VE.ATK.LOOK       LIT  '(212)';
DCL TIM.VE.IDEC.LOOK      LIT  '(213)';
DCL TIM.VE.DEL.LOOK       LIT  '(214)';
DCL TIM.HE.ATK.LOOK       LIT  '(215)';
DCL TIM.HE.IDEC.LOOK      LIT  '(216)';
DCL TIM.VE.FDEC.LOOK      LIT  '(217)';
DCL TIM.HE.DEL.LOOK       LIT  '(218)';
DCL TIM.P.RATE.LOOK       LIT  '(219)';
DCL TIM.HE.FDEC.LOOK      LIT  '(220)';
DCL TIM.VIB.ATK.LOOK      LIT  '(221)';
DCL TIM.DYN.ENV.LOOK      LIT  '(222)';
                        
/* CONTINUOUS PARAMETERS - MUST BE IN ORDER: */

DCL TIM.V.RATE.LOOK       LIT  '(223)';
DCL TIM.V.DEPTH.LOOK      LIT  '(224)';
DCL TIM.VE.PKSUS.LOOK     LIT  '(225)';
DCL TIM.V.MDEPTH.LOOK     LIT  '(226)';
DCL TIM.S.RATE.LOOK       LIT  '(227)';
DCL TIM.HE.PK.LOOK        LIT  '(228)';
DCL TIM.HE.SUS.LOOK       LIT  '(229)';
DCL TIM.S.DEP.LOOK        LIT  '(230)';
DCL TIM.S.PAN.LOOK        LIT  '(231)';
DCL TIM.TUNING.LOOK       LIT  '(232)';
DCL TIM.FMRATIO.LOOK      LIT  '(233)';
DCL TIM.REPRATE.LOOK      LIT  '(234)';
DCL TIM.CHORUS.LOOK       LIT  '(235)';
DCL TIM.TVOL.LOOK         LIT  '(236)';

DCL TIM.RTE.PATCHES       LIT  '(237)';
DCL TIM.RTE.LENGTH        LIT  '( 10)';

/* OTHER: */

DCL TIM.RANDOM.KEY#       LIT  '(247)';  /* HOLDS 64-BIT RANDOM # KEYS FOR TIMBRE */
DCL TIM.MAX.NUM.NOTES     LIT  '(251)';  /* MAX # OF NOTES FOR TIMBRE */
DCL TIM.ANY.DPAN          LIT  '(252)';  /* TRUE IF ANY DPANING PERFORMED  */
DCL TIM.NEEDS.CUE.ALLOC   LIT  '(253)';  /* TRUE IF CUES NEED ALLOCATING   */
DCL TIM.POLY.EVENT        LIT  '(254)';  /* TRUE IF ANY RAM EVENTS IN PATCH LIST */

/* TIMBRE HEAD UNUSED WORDS : 255 - 255 */


/* REAL TIME EFFECTS BITS IN TIMBRE HEAD: */

/* THE OLD RTE CODE USED A SINGLE 16-BIT WORD TO INDICATE RTE PATCHINGS. */
/* THE FOLLOWING BIT DEFINITIONS WERE USED:                              */

/* (USED ONLY IN EXPAND.RTE BELOW)                                       */

DCL P.RATE       LIT '"100000"'; /* PATCH TO PORT.RATE   */     /* BIT DEFINITIONS */
DCL HE.SUS       LIT '"040000"'; /* HARM ENV SUSTAIN LEV */     /* FOR ORIGINAL */
DCL HE.PK        LIT '"020000"'; /* HARM ENV PEAK    LEV */     /* KEYBOARD      */
DCL HE.DEC       LIT '"010000"'; /* HARM ENV DECAYS      */
DCL HE.ATK       LIT '"004000"'; /* HARM ENV ATTACK      */
DCL VE.PKSUS     LIT '"002000"'; /* PEAK & SUSTAIN LEV   */
DCL VE.DEC       LIT '"001000"'; /* DECAYS    */
DCL VE.ATK       LIT '"000400"'; /* ATTACK    */
DCL V.DEPTH      LIT '"000200"'; /* VIBRATO DEPTH - DEFAULT */

DCL PED.IN       LIT '"000002"'; /* PEDAL     */
DCL VEL.IN       LIT '"000004"'; /* VELOCITY  */
DCL REC.BIT      LIT '"000200"'; /* PATCH PEDAL TO RECORDER PLAYBACK */


/* THE NEW SOFTWARE USES A 40 WORD LOOK UP TABLE WITH EACH TIMBRE */
/* TO ENCODE THE REAL TIME EFFECTS PATCHINGS.   THIS LOOK UP      */
/* TABLE HOLDS 8 5-WORD RECORDS  (1 RECORD FOR EACH OF 8          */
/* EXPRESSION INPUTS).                                            */

/*    WORD 0   -   BITS FOR EACH PARTIAL AFFECTED                 */
/*    WORD 1   -   BITS FOR SAMPLED PARAMETERS                    */
/*    WORD 2   -   BITS FOR CONTINUOUS PARAMETERS                 */
/*    WORD 3   -   BITS FOR INVERTED SAMPLED PARAMETERS           */
/*    WORD 4   -   BITS FOR INVERTED CONTINUOUS PARAMETERS        */

/* SAMPLED PARAMETERS:         */      /* PUT IN THIS ORDER TO */
                                              /* SIMPLIFY CONVERSION  */
DCL N.VE.ATK       LIT '"000001"'; /* NEW VOL  ENV ATTACK               */
DCL N.VE.IDEC      LIT '"000002"'; /* NEW VOL  ENV INITIAL DECAY        */
DCL N.HE.ATK       LIT '"000010"'; /* NEW HARM ENV ATTACK               */
DCL N.HE.IDEC      LIT '"000020"'; /* NEW HARM ENV INITIAL DECAY        */
DCL N.P.RATE       LIT '"000200"'; /* NEW PATCH TO PORT.RATE            */ 

DCL N.VE.DEL       LIT '"000004"'; /* NEW VOL  ENV DELAY                */
DCL N.VE.FDEC      LIT '"000040"'; /* NEW VOL  ENV FINAL DECAY          */
DCL N.HE.DEL       LIT '"000100"'; /* NEW HARM ENV DELAY                */
DCL N.HE.FDEC      LIT '"000400"'; /* NEW HARM ENV FINAL DECAY          */
DCL N.VIB.ATK      LIT '"001000"'; /* NEW VIBRATTO ATTACK               */
DCL N.DYN.ENV      LIT '"002000"'; /* NEW DYNAMIC ENVELOPE PATCH        */


/* BITS FOR CONTINUOUS PARAMETERS: */

/* NOTE:  THESE BITS ARE STORED INTO  TIM.ACT.PARS(0-7), TIM.VP, TIM.PP,
   AND TIM.KP TO TELL WHICH NOTE PARAMETERS MUST BE RECOMPUTED WHEN
   A PARTICULAR EXPRESSION INPUT CHANGES                                */

/* THEY ARE ALSO OF COURSE STORED IN THE TIMBRE TO INDICATE A PATCHING  */

DCL N.VE.PKSUS     LIT '"000004"'; /* NEW VOL  ENV PEAK & SUSTAIN LEV   */
DCL N.HE.PK        LIT '"000040"'; /* NEW HARM ENV PEAK    LEV          */ 
DCL N.HE.SUS       LIT '"000100"'; /* NEW HARM ENV SUSTAIN LEV          */ 

DCL N.V.RATE       LIT '"000001"'; /* NEW VIBRATO RATE      */
DCL N.V.DEPTH      LIT '"000002"'; /* NEW VIBRATO DEPTH     */
DCL N.V.MDEPTH     LIT '"000010"'; /* NEW VIBRATO MOD DEPTH */
DCL N.S.RATE       LIT '"000020"'; /* NEW STEREO  RATE      */
DCL N.S.DEP        LIT '"000200"'; /* NEW STEREO  DEPTH     */
DCL N.S.PAN        LIT '"000400"'; /* NEW STEREO  PAN       */
DCL N.TUNING       LIT '"001000"'; /* NEW TUNING PATCH      */
DCL N.FMRATIO      LIT '"002000"'; /* NEW FM RATIO PATCH    */
DCL N.REPRATE      LIT '"004000"'; /* NEW REPRATE  PATCH    */
DCL N.CHORUS       LIT '"010000"'; /* NEW CHORUS   PATCH    */
DCL N.TVOL         LIT '"020000"'; /* NEW TVOL     PATCH    */
DCL N.NFREQ        LIT '"040000"'; /* BIT SET IN NUPDT ONLY - CAUSES NEW FREQUENCY INFO TO BE COMPUTED */

/* INDEX NUMBERS FOR REAL TIME EFFECTS DATA: */

DCL R.PEDAL1     LIT '0';  /* PEDAL 1                            */
DCL R.PEDAL2     LIT '1';  /* PEDAL 2                            */
DCL R.MWHEEL     LIT '2';  /* MOD WHEEL                          */
DCL R.BREATH     LIT '3';  /* BREATH CONTROLLER                  */
DCL R.PWHEEL     LIT '4';  /* PITCH WHEEL                        */
DCL R.RIBBON     LIT '5';  /* RIBBON CONTROLLER                  */
                           /* NOTE: RAW RIBBON STORED IN 5       */
                           /* RIBBON TO USE IS STORED IN 6       */
                           /* OTHER FILTER ITEMS IN 7            */

/* BIT LITERALS CORRESPONDING TO ABOVE INDEX NUMBERS */

DCL B.PEDAL1     LIT  '01'; /* PEDAL 1           */
DCL B.PEDAL2     LIT  '02'; /* PEDAL 2           */
DCL B.MWHEEL     LIT  '04'; /* MOD WHEEL         */
DCL B.BREATH     LIT  '08'; /* BREATH CONTROLLER */
DCL B.PWHEEL     LIT  '16'; /* PITCH WHEEL       */
DCL B.RIBBON     LIT  '32'; /* RIBBON CONTROLLER */
DCL B.PRESSURE   LIT  '64'; /* PRESSURE          */
DCL B.VELOCITY   LIT '128'; /* VELOCITY          */

/* from 138-pre1 */
/* PARTIAL OPTION DEFINITIONS: (TIM.OPTIONS) */

DCL ANY.FM         LIT '"000001"';   /* SET IF FM IS ACTIVE IN SOUND        */
DCL SPLICE.INFO    LIT '"000002"';   /* SET IF SPLICING IS USED             */
DCL KBD.ENV        LIT '"000004"';   /* SET IF KEYBOARD ENVELOPE USED       */
DCL DYN.ENV        LIT '"000010"';   /* SET IF DYNAMIC ENVELOPE USED        */
DCL ZERO.ATTACK    LIT '"000020"';   /* SET IF ATTACK TIME = 0              */
DCL ANY.DELAY      LIT '"000040"';   /* SET IF ENVELOPE OR INDEX DELAY<>0   */
DCL ANY.STAM       LIT '"000100"';   /* SET IF ANY DYNAMIC STEREO OR AM     */
DCL ENV.DADJ       LIT '"000200"';   /* SET IF DECAY ADJUST IS REQUIRED     */
DCL INX.HADJ       LIT '"000400"';   /* SET IF HARM  ADJUST IS REQUIRED     */
DCL ENV.RTES       LIT '"001000"';   /* SET IF RTES AFFECT ENVELOPE TIMES   */
DCL INX.RTES       LIT '"002000"';   /* SET IF RTES AFFECT INDEX    TIMES   */
DCL MIN.PTUNE      LIT '"004000"';   /* SET IF MINUS PTUNING USED           */
DCL ANY.GLIDE      LIT '"010000"';   /* SET IF PORTAMENTO IS ACTIVE         */
DCL TUN.RTES       LIT '"020000"';   /* SET IF RTES AFFECT TUNINGS          */
DCL FD.RTES        LIT '"040000"';   /* SET IF RTES AFFECT FINAL DECAY      */
DCL SAM.DELAY      LIT '"100000"';   /* **** UNUSED - THIS BIT IS FREE **** */

/* TIMBRE OPTIONS DEFINTIONS: (TIM.TOPTIONS) */

DCL NOT.STEALABLE  LIT '"000001"';   /* CAN NOT STEAL CHANNELS DURING SUST  */
DCL BIT.REPEAT.BIT LIT '"000002"';   /* BIT.REPEAT STORED HERE              */
DCL ANY.SAMPLED    LIT '"000004"';   /* SET IF ANY PARTIALS USE MONO SAMP   */
DCL BIT.ARPEG.BIT  LIT '"000010"';   /* BIT.REPEAT STORED HERE              */
DCL SLAP.BASS      LIT '"000020"';   /* SET IF TIMBRE USES FAST SPLICING    */
DCL BIT.PHRASE.BIT LIT '"000040"';   /* BIT.APHRASE STORED HERE             */
DCL LONG.FDEC      LIT '"000100"';   /* INDICATES TIMBRE HAS LONG F DECAY   */


/*  KEYBOARD LOOKUP TABLES CONSIST OF A SECTOR OF EXTERNAL MEMORY.  THERE
 *  ARE THREE WORDS PER RECORD IN THE FORMAT SHOWN BELOW AND ONE RECORD
 *  PER KEY.  WITH 85 KEYS, THAT USES A TOTAL OF 255 WORDS IN THE SECTOR
 *  AND COVERS NOTES C0 TO C7.  THE LITERALS USED TO DEFINE THE BIT
 *  POSITIONS ARE FOUND IN POLYMOD; THEY ARE PART OF THE DEFINITION USED
 *  FOR 32 BIT POLY "BASE" POINTERS.
 *
 *                      KEYBOARD LOOK UP TABLE
 *                 +-----------------------------+
 *                 | PTR TO PATCH TIMBRE FRAME IN| KLT.PATCH.TIM.PTR
 *                 |    TIMBRE PARAMETER AREA    |
 *                 |-----------------------------|
 *  DATA PRESENT-->| BIN | UNUSED   |STEREO|PAGE | KLT.BASE.MSB
 * BITS IN FIELD-->|..2..|....9.....|..1...|..4..|
 *                 |-----------------------------|
 *                 |     PTR TO FILE BLOCK IN    | KLT.BASE.LSB
 *                 |   EXTERNAL OR POLY MEMORY   |
 *                 |-----------------------------|
 *                 |              .              |
 *                 |              .              |
 *                 |              .              |
 *                 +-----------------------------+
 *
 */

/* LITERALS DEFINING KEYBOARD LOOKUP TABLE STRUCTURE */

DCL KLT.SIZE           LIT    '3';   /* SIZE OF KEYBOARD LOOKUP RECORD      */

DCL KLT.PATCH.TIM.PTR  LIT    '0';   /* PATCH TIMBRE FRAME POINTER          */
DCL KLT.BASE.MSB       LIT    '1';   /* SOUND FILE PTR MSB'S & STEREO BIT   */
DCL KLT.BASE.LSB       LIT    '2';   /* SOUND FILE PTR LSB'S (ALL FOR MONO) */
