/*	:SYNLITS:SYNCLITS  $TITLE  A WHOLE BUNCH OF GENERAL SYNCLAVIER LITERALS	*/

/*
Modified:
2000/10/07 - TY  - Added MWHEEL_PROXY literal
1999/11/07 - CJ  - Increase LIST.SIZE from 15 to 50 for OMS
1999/04/11 - TY  - Added CONVERT.TO.UNMAPPED to the erase button function codes.
1991/12/15 - PF  - Added MIDISUST.DISP
1991/03/22 - cj  - Changed kbd.spl.time to fix Lee Kopp FM retrigger clicks
1991/02/14 - cj  - Added ET.DISP (erase tempo)
1991/02/01 - PF  - Made DIVISIONS literal = SAMP.CLICK.RATE
1990/11/06 - PF  - Add bit literals for THD.SUSTAIN
1990/10/23 - PF  - Add TEMPO.DISP and METER.DISP
1990/09/27 - cj  - added literals for startup control (size of gpdt)
1990/09/06 - TSS - ADDED LITS FOR REV 2 PRESSURE MAPPING UPGRADE
1990/08/27 - PF  - Support all MIDI controllers
1990/02/01 - MWH - Add pre-roll literal
1989/06/05 - TSS - Added offset literals for .SMAP-7 file
1989/04/30 - PF  - Removed "MIDI.NOTE.OFF lit MIDI.NOTE.ON" dcl
1989/03/16 - TSS - Changed KBD.SYNC.DELAY from 15 msec to 0!
1989/03/14 - PF  - Increase LIST.SIZE from 10 to 15
1988/12/02 - CJ  - added used.disp
1988/09/21 - TSS - Changed Clavier button state lits for BSTAT.PTR
1988/09/15 - TSS - Added TBUT.PTR bit literals for Clavier Emulation
*/


/*	KEYBOARD:	*/

DCL FRAME.DISP			LIT '( -1)';	/*	-1  MEANS FRAME   DISPLAY				*/
DCL LINES.DISP			LIT '( -2)';	/*	-2  MEANS LINES   DISPLAY				*/
DCL START.DISP			LIT '( -3)';	/*	-3  MEANS START   DISPLAY				*/	/*	(TRACK START TIME)	*/
DCL BEATS.DISP			LIT '( -4)';	/*	-4  MEANS BEATS   DISPLAY				*/
DCL SMPTE.DISP			LIT '( -5)';	/*	-5  MEANS SMPTE   DISPLAY				*/
DCL LOADM.DISP			LIT '( -6)';	/*	-6  LOADING SF    MESSAGE				*/
DCL SMODE.DISP			LIT '( -7)';	/*	-7  SMPTE MODE    DISPLAY				*/
DCL LOOPL.DISP			LIT '( -8)';	/*	-8  'SECONDS'     DISPLAY				*/
DCL DSEL.DISP			LIT '( -9)';	/*	-9  DRIVE SELECT  DISPLAY				*/
DCL EXT.DISP			LIT '(-10)';	/*	-10 EXTERNAL SYNC DISPLAY				*/
DCL LOD.DISP			LIT '(-11)';	/*	-11 READY FOR LOD DISPLAY				*/
DCL TIME.DISP			LIT '(-12)';	/*	-12 TIME PARAMETER DISPLAY				*/
DCL ERR.DISP			LIT '(-13)';	/*	-13 ERROR DISPLAY							*/
DCL LOOP.DISP			LIT '(-14)';	/*	-14 LOOP PARAMETER DISPLAY				*/
DCL SMPTE.E.DISP		LIT '(-15)';	/*	-15 SMPTE MODE ERROR						*/
DCL POLYPHONY.DISP	LIT '(-16)';	/*	-16 AUTOPHRASING MODE DISP				*/
DCL MIDIPOLY.DISP		LIT '(-17)';	/*	-17 MIDI POLYTIMBRE MODE				*/
DCL MIDISKT.DISP		LIT '(-18)';	/*	-18 MIPGM ON SKT MODE					*/
DCL KBDTRACK.DISP		LIT '(-19)';	/*	-19 KBD TRACK - FOR MULTIRECD MODE	*/
DCL USED.DISP			LIT '(-20)';	/*	-20 VOICES USED DISPLAY					*/
DCL TEMPO.DISP			LIT '(-21)';	/*	-21 INSERT/DELETE TEMPO EVENT			*/
DCL METER.DISP			LIT '(-22)';	/*	-22 INSERT/DELETE METER EVENT			*/
DCL ET.DISP				LIT '(-23)';	/*	-23 ERASE TEMPO/METER INFO				*/
DCL MIDISUST.DISP		LIT '(-24)';	/*	-24 MIDI SUSTAIN MODE					*/
DCL STOPPING.DISP		LIT '(-25)';	/*	-25 STOPPING... ONE MOMENT...			*/
DCL MIDISEL.DISP		LIT '(-26)';	/*	-26 SELECT PATCHING (LOWER)			*/
DCL TPANRESET.DISP	LIT '(-27)';	/*	-27 TRACK BUTTONS RESET (BOTH)		*/
DCL ERAS.DISP			LIT '(-28)';	/*	-28 ERASE BUTTON DISPLAY				*/
DCL TPAN.DISP			LIT '(-29)';	/*	-29 TRACK PAN SETTING DISPLAY			*/
DCL TGROUP.DISP		LIT '(-30)';	/*	-30 CREATE/MODIFY TRACK GROUP			*/

DCL NUM.GLOB.PARS		LIT '10';		/*	NUMBER OF GLOBAL PARAMETERS	*/

DCL TBASE				LIT 'GPDT(0)';	/*	TUNING BASE	*/
DCL OCTRATIO			LIT 'GPDT(1)';	/*	OCTAVE RATIO	*/
DCL TB.DMAX				LIT 'GPDT(2)';	/*	TONE BEND SENSITIVITY - OLD KEYBOARD ONLY	*/
DCL V.S.MIN				LIT 'GPDT(3)';	/*	VELOCITY SENSITIVITY MIN	*/
DCL V.S.CON				LIT 'GPDT(4)';	/*	VELOCITY SENSITIVITY CONSTANT	*/
DCL SYNC.DELAY			LIT 'GPDT(5)';	/*	SYNC TO CLICK DELAY	*/
DCL NUMPOINTS			LIT 'GPDT(6)';	/*	NUMPOINTS FOR LOOP SEARCH	*/
DCL STARTUP.VALUE		LIT 'GPDT(7)';	/*	NOTES TO SEARCH DURING START UP	*/
DCL MWHEEL_PROXY		LIT 'GPDT(8)';	//	holds the INDEX identifying the controller that the mod wheel should proxy for
DCL KBD_TRANSPOSE		LIT 'GPDT(9)';	//	holds the number of semitones to offset keynum by when scanning the VK keyboard -12 to 12 (vkxpos.l)

DCL KBD.SYNC.DELAY	LIT '0';			/*	MSECS OF KEYBOARD SYNC DELAY	*/

/*	KEYBOARD LITERALS	*/

DCL NUM.OCTAVES			LIT ' 5';	/*	# SUPEROCTAVES (16 KEY)	*/
DCL NUM.SW.PANS			LIT '10';	/*	# BUTTON BANKS		*/
DCL NUM.ALPHA.CHARS		LIT '32';	/*	# ALPHA CHARS		*/
DCL NUM.TRACK.BUTTONS	LIT '32';	/*	# TRACK BUTTONS	*/

/*	FROM 072-NEWI	*/
DCL NEW.NOTE.LIST.SIZE  LIT ' 50';
DCL PGM.CHG.LIST.SIZE  	LIT ' 10';
DCL EXT.TRIG.LIST.SIZE	LIT '  5';
DCL RTE.LIST.SIZE			LIT '100';
DCL LEFT.JUST				LIT '  0';
DCL RIGHT.JUST				LIT '  1';

/*	from 137-comp	*/
DCL (MIN.SAMP)	LIT '560';	/*	MIN FOR MONO SAMPLING COMPUTATION	*/
DCL (MAX.SAMP)	LIT '4095';	/*	MAX FOR MONO SAMPLING COMPUTATION	*/

/*	from 141-gdef	*/
dcl (new.max)	lit '15';	/*	size of new string list	*/

/*	from 144-tim1	*/
DCL EPKQF		LIT 'EPQBUF(TIMER.PHASE  )';	/*	ONE QUE FOR EACH PHASE	*/
DCL EPKQB		LIT 'EPQBUF(TIMER.PHASE+1)';

DCL IPKQF		LIT 'IPQBUF(TIMER.PHASE  )';
DCL IPKQB		LIT 'IPQBUF(TIMER.PHASE+1)';

/*	CONFIGURATION LITERALS (FURTHER CONFIG LITS ARE IN 0-MONOIO AND ARE ONLY USED THERE)	*/

DCL MS.TABLE.SECTOR			LIT '(CORE(LOC.P3+1))';	/*	SECTOR LOCATION OF .STAB FILE	*/
DCL LS.TABLE.SECTOR			LIT '(CORE(LOC.P3  ))';
DCL FRQTABLE.OFFSET			LIT  '0';					/*	DATA OFFSETS IN .STAB FILE	*/
DCL SINTABLE.OFFSET			LIT  '8';
DCL LOGTABLE.OFFSET			LIT  '9';
DCL POLY.FRQTABLE.OFFSET	LIT '13';

/*	DATA OFFSETS INTO .SMAP-7 FILE FOR KBD MAPS	*/

DCL PRESSURE.CAL.DATA			LIT  '00';	/*	OFFSET TO THE PRESSURE CALIBRATION DATA				*/
DCL PRESSURE.MAP					LIT  '01';	/*	OFFSET TO THE PRESSURE TO VOL MAP						*/
DCL TTIME.MAPS						LIT  '02';	/*	OFFSET INTO FILE TO THE 10 TTIME TO VOL MAPS			*/
DCL MIDI.MAPS						LIT  '12';	/*	OFFSET INTO FILE TO THE MIDI VELOCITY TO VOL MAP	*/

DCL LOC.PRESSURE.VERSION		LIT '255';	/*	OFFSET INTO PRESSURE.CAL.DATA TABLE OF CURRENT VERSION OF MAP	*/
DCL LOC.PRESSURE.SATURATION	LIT '254';	/*	OFFSET INTO PRESSURE.CAL.DATA OF SATURATION CONSTANT				*/

/*	PRESSURE VERSION HISTORY:															*/
/*	VERSION = 0  ORIGINAL VERSION OF PRESSURE MAP FOR USE WITH ORIGINAL	*/
/*					 TRIPP KBD ON WHICH A 1LB WEIGHT PRODUCED 90% SATURATION	*/
/*	VERSION = 1  VERSION OF PRESSURE MAP FOR USE WITH REV 2 TRIPP KBD		*/
/*					 ON WHICH A 1LB WEIGHT PRODUCED 55% SATURATION				*/

DCL DEFAULT.PRESSURE.VERSION		LIT  '1';	/*	CURRENT PRESSURE MAP REVISION	*/
DCL DEFAULT.PRESSURE.SATURATION	LIT '55';	/*	SATURATION (GOES WITH 1LB WEIGHT ON 2LB KBD)	*/

/*	$PAGE - NOTE RECORD DESCRIPTION	*/

/*	FOR EACH NOTE THAT IS RECORDED IN THE SEQUENCER MEMORY, A TWO WORD OR A
.	FOUR WORD RECORD IS STORED IN MEMORY.  TWO WORD RECORDS ARE USED FOR MOST
.	SIMPLE NOTES (I.E. NOTES WITHOUT REAL TIME EFFECTS OR VOLUME), WHILE FOUR
.	WORD RECORDS ARE REQUIRED FOR NOTES WITH REAL TIME EFFECTS OR VOLUME DATA.
.
.	A BIT IN THE RECORD INDICATES WHETHER THE RECORD IS TWO WORDS OR FOUR
.	WORDS LONG.  TO FACILITATE SCANNING THE NOTE LIST BACKWARDS (DURING
.	REWIND), ALL FOUR WORD RECORDS ARE FLAGGED WITH A SPECIAL BYTE (I.E.
.	'VEL.NOTE') IN THEIR LAST WORD.
.
.	A TWO WORD NOTE RECORD IS AS FOLLOWS:
.
.		[10 BITS - TIME DELTA, MS.	]	[4 BITS - DURATION MSB	]	[2 BITS - RECORD TYPE]
.		[10 BITS - DURATION LSB		]	[6 BITS - KEY #			]
.
.	A FOUR WORD NOTE RECORD IS AS FOLLOWS:
.
.		[10 BITS - TIME DELTA, MS.	]	[4 BITS - DURATION MSB	]	[2 BITS - RECORD TYPE]
.		[10 BITS - DURATION LSB		]	[6 BITS - KEY #			]
.		[ 8 BITS - SBITS				]	[8 BITS - RTE DATA		]
.		[ 8 BITS - VOLUME/OTHER		]	[2 RAISE/LOWER]	[6 BITS - 62 DECIMAL - VEL.NOTE]
.
.
.	SUB FIELDS:
.
.		RECORD TYPE FIELD:
.
.			0 - TWO  WORD BASIC	  RECORD
.			1 - FOUR WORD BASIC	  RECORD
.			2 - TWO  WORD EXPANDED RECORD
.			3 - FOUR WORD EXPANDED RECORD

.		ENCODED DURATION DATA - 14 BITS:
.
.			UPPER  4 BITS:	[ 2 BITS - POWER OF 4 EXPONENT							]
.								[ 2 BITS - UPPER  2 BITS OF 12 BIT DURATION (MS.)	]
.
.			LOWER 10 BITS:	[10 BITS - LOWER 10 BITS OF 12 BIT DURATION (MS.)	]
.
.		SWITCH AND FLAG BITS  -  8 BITS:  (SEE DEFINITIONS)
.
.			BIT 0 - GLIDE FOOT SWITCH (KBD)		  |
.			BIT 1 - REPEAT FOOT SWITCH (KBD)		  |==> STRING NUMBER IF B.GUI=1
.			BIT 2 - ARPEGGIATE FOOT SWITCH (KBD)  |
.			BIT 3 - INDICATES A GUITAR NOTE
.			BIT 4 - INDICATES TIED NOTE.  SLUR FROM PREVIOUS NOTE
.			BIT 5 - INDICATES VALID VOLUME DATA.
.			BIT 6 - INDICATES TO RE-ARTICULATE AFTER TIED NOTE
.			BIT 7 - INDICATES AN 'UPDATE' RECORD. |==> REDEFINES LOWER BITS.
.
.		RAISE/LOWER BITS - 2 BIT FIELD FROM LAST WORD OF 4 WORD RECORD:
.
.			BIT 0 - INDICATES LOWER THE NOTE BY 1 OCTAVE (LOWER.KEY= 64)
.			BIT 1 - INDICATES REASE THE NOTE BY 1 OCTAVE (RAISE.KEY=128)
.
$PAGE - UPDATE RECORD FORMAT
.
.	FORMAT FOR UPDATE RECORDS:
.
.		- UPDATE RECORDS ARE ALWAYS 4 WORD RECORDS
.		- B.UPD (BIT 7) IS ALWAYS SET IN AN UPDATE RECORD
.		- UPDATE RECORDS FOR GUITAR: B.GUI IS SET
.			  1. DURATION FIELD - HOLDS 10-BIT TWO'S COMPLEMENT
.				  PITCH DELTA (-512 THROUGH +511).  RECORDS CHANGES
.				  IN THE GUITAR PITCH.
.			  2. KEY NUMBER FIELD - HOLDS KEY NUMBER NEAREST TO
.				  THE NEW PITCH (USED MOSTLY BY CHANNEL STEALING
.				  ALGORITHM)
.			  3. RTE FIELD			- HOLDS POSSIBLE NEW RTE KNOB
.				  VALUE FOR GUITAR
.			  4. VOLUME FIELD		- HOLDS POSSIBLE NEW VOLUME DATA
.				  FOR GUITAR
.			  5. BITS FIELD - B.UPD + B.GUI + STRING# (0-5)
.				  NOTE: STRING 6 IS USED TO INDICATE GUITAR HOLD
.						  SWITCH
.
.		- UPDATE RECORDS FOR KEYBOARD:
.			  1. B.UPD IS SET, B.GUI IS ZERO. ALL OTHER BITS RESERVED.
.			  2. USED FOR RECORDING CHANGES IN REAL TIME EFFECTS
.			  3. KEY NUMBER FIELD - HOLDS KEY NUMBER IF PRESSURE CHANGE
.											OTHERWISE UNUSED (SET TO C2)
.			  4. DURATION FIELD (10) BITS.
.				  DIVIDED INTO A 2 BIT (LOWER 2 BITS) AND AN 8 BIT (UPPER 8
.				  BITS) FIELD.  2 BIT FIELD DESCRIBES TYPE.
.					  A. TYPE 0:	INDICATES REAL TIME EFFECTS UPDATE
.										RECORD.  UPPER 8 BITS CONTAIN TWO 4-BIT
.										ROUTING FIELDS.  THEY ROUTE THE RTE DATA FIELD
.										AND THE VOLUME FIELD TO TWO SEPARATE
.										EFFECTS.
.					  B. TYPE 1:	TOGGLE BITS.  UPPER 8 BITS IS A BITS
.										WORD FOR THE TBITS ARRAY.  USED FOR
.										REAL TIME RECORDING OF REPEAT/ARPEGGIATE
.										BUTTONS, FOOT SWITCHES.
.					  C. TYPE 2:	PRESSURE RECORD.
//										UPPER 8 BITS ARE THE NEW PRESSURE FOR THIS KEY.	<<===	APPARENTLY INCORRECT
.										KEY # FIELD IDENTIFIES THE KEY.
.										VOL FIELD IS UNUSED.
//										RTE FIELD IS UNUSED.										<<===	APPARENTLY INCORRECT
.					  D. TYPE 3:	MIDI DATA RECORD
.
.			  5. RTE FIELD, VOL FIELD - SEE (4)
*/


/*	$PAGE - NOTE RECORD BIT & FIELD DEFINITIONS		*/


/*	DEFINITIONS FOR 2-WORD AND 4-WORD NOTE RECORDS:	*/

DCL VEL.NOTE	LIT ' 62';	/*	NOTE # 62 MEANS VELOCITY DATA WHEN SCANNING BACKWARDS	*/
DCL REST.NOTE	LIT ' 63';	/*	NOTE # 63 MEANS A REST	*/

DCL LOWER.KEY	LIT ' 64';	/*	THIS BIT IS SET IN 4-WORD RECORDS TO LOWER KEY BY 1 OCTAVE	*/
DCL RAISE.KEY	LIT '128';	/*	THIS BIT IS SET IN 4-WORD RECORDS TO RAISE KEY ONE OCTAVE	*/

/*	BIT DEFINITIONS FOR LOWER HALF OF 'SBITS'			*/
/*	STORED IN UPPER HALF OF WORD 2 OF 4-WORD RECORD	*/

DCL B.GLI		LIT	'1';	/*	FOOT SWITCH - GLIDE			*/
DCL B.REP		LIT	'2';	/*	FOOT SWITCH - REPEAT			*/
DCL B.ARP		LIT	'4';	/*	FOOT SWITCH - ARPEGGIATE	*/
DCL B.GUI		LIT	'8';	/*	INDICATES GUITAR NOTE - MEANS LOWER 3 BITS ARE STRING NUMBER INSTEAD OF PEDAL	*/
DCL B.TIE		LIT  '16';	/*	CONSTRUCTS A SLUR FROM PREVIOUS NOTE TO THIS NOTE	*/
DCL B.VOL		LIT  '32';	/*	INDICATES VALID VOLUME DATA STORED IN RECORD	*/
DCL B.ART		LIT  '64';	/*	INDICATES AN ARTICULATED TIE	*/
DCL B.UPD		LIT '128';	/*	INDICATES UPDATE RECORD	*/


DCL REPSCAN2		LIT '(20+INC.MONO*KBD.MONO3)';	/*	REPEAT/ARPEG PRESCAN FOR KEYBOARD - FIXED AT 20 MSEC REGARDLESS OF SPEED	*/
DCL KBD.SPL.TIM	LIT	'5';	/*	SPLICE TIME FOR POLY NOTES		*/
DCL KBD.FM1			LIT	'3';	/*	SPLICE #1 FOR FM NOTES			*/
DCL KBD.FM2			LIT	'2';	/*	SPLICE #2 FOR FM NOTES			*/

DCL KBD.MONO1		LIT  '10';	/*	10 MSEC RAMP DOWN					*/
DCL KBD.MONO2		LIT	'5';	/*	5  MSEC TO LOAD AND RAMP UP	*/
DCL KBD.MONO3		LIT  '15';	/*	10 MSEC TOTAL						*/

/*	midi stuff from 142-midi	*/
DCL MIDI.SUBSYS	LIT  '16';	/*	SUBSYSTEMS ARE ADDRESSED 16 TO 23 (8 CARDS)	*/
/*	SYNCLAVIER SWITCH INDEX NUMBERS (SWITCHDATA)			*/
DCL R.HOLD.SW		LIT	'0';	/*	HOLD SWITCH				*/
DCL R.REP.SW		LIT	'1';	/*	REPEAT SWITCH			*/
DCL R.GLIDE.SW		LIT	'2';	/*	GLIDE SWITCH			*/
DCL R.SUST.SW		LIT	'3';	/*	SUSTAIN SWITCH			*/
DCL R.ARP.SW		LIT	'4';	/*	ARPEGGIATE SWITCH		*/
DCL R.PUNCH.SW		LIT	'5';	/*	PUNCH IN/PUNCH OUT	*/
DCL R.PHRASE.SW	LIT	'6';	/*	PHRASE SWITCH			*/
DCL R.MUTE.SW		LIT	'7';	/*	MUTE SWITCH				*/

/*	BIT LITERALS CORRESPONDING TO ABOVE INDEX NUMBERS	*/
DCL B.HOLD.SW		LIT '001';	/*	HOLD SWITCH				*/
DCL B.REP.SW		LIT '002';	/*	REPEAT SWITCH			*/
DCL B.GLIDE.SW		LIT '004';	/*	GLIDE SWITCH			*/
DCL B.SUST.SW		LIT '008';	/*	SUSTAIN SWITCH			*/
DCL B.ARP.SW		LIT '016';	/*	ARPEGGIATE SWITCH		*/
DCL B.PUNCH.SW		LIT '032';	/*	PUNCH IN/PUNCH OUT	*/
DCL B.PHRASE.SW	LIT '064';	/*	PHRASE SWITCH			*/
DCL B.MUTE.SW		LIT '128';	/*	MUTE SWITCH				*/


/*	FROM 171-PRF1	*/
/*	BITS DEFINED FOR THE EXTERNAL MEMORY CLAV.PTR ARRAY:	*/

DCL ACTIVE					LIT '1';	/*	BIT SET TO KEEP NOTE SOUNDING	*/
DCL DOWN						LIT '2';	/*	BIT SET IF KEY IS STILL DOWN	*/
DCL HELD						LIT '4';	/*	BIT SET IF KEY IS HELD			*/
DCL SUSTD					LIT '8';	/*	BIT SET IF KEY IS SUSTAINED	*/
											// Upper half of clav.ptr word, if nonzero, is an OS-X Core MIDI OMS time stamp to allow recording of precise note end time.

/*	BIT LITERALS FOR THD.SUSTAIN	*/
DCL B.CURRENT.SUSTAIN	LIT '1';	/*	BIT SET IF SUST CURRENTLY ON	*/
DCL B.LOOP.SUSTAIN		LIT '2';	/*	BIT SET IF SUST IS ON AT LOOP	*/
DCL B.ILS.SUSTAIN			LIT '4';	/*	BIT SET IF SUST IS ON AT ILS	*/
DCL B.ILE.SUSTAIN			LIT '8';	/*	BIT SET IF SUST IS ON AT ILE	*/

DCL HOLDSWITCH				LIT 'SWITCHDATA(0)';	/*	HOLD SWITCH	*/
DCL REPSWITCH				LIT 'SWITCHDATA(1)';	/*	REPEAT SWITCH	*/
DCL GLIDESWITCH			LIT 'SWITCHDATA(2)';	/*	GLIDE SWITCH	*/
DCL SUSTSWITCH				LIT 'SWITCHDATA(3)';	/*	SUSTAIN SWITCH	*/
DCL ARPSWITCH				LIT 'SWITCHDATA(4)';	/*	ARPEGGIATE SWITCH	*/
DCL PUNCHSWITCH			LIT 'SWITCHDATA(5)';	/*	PUNCH IN/PUNCH OUT	*/
DCL PHRASESWITCH			LIT 'SWITCHDATA(6)';	/*	PHRASE SWITCH	*/
DCL MUTESWITCH				LIT 'SWITCHDATA(7)';	/*	MUTE SWITCH	*/

DCL RAW.KNOB.POS			LIT 'ANALOG.IN(0)';
DCL RAW.RIBBON.POS		LIT 'ANALOG.IN(1)';
DCL RAW.PEDAL2.POS		LIT 'ANALOG.IN(2)';
DCL RAW.PEDAL1.POS		LIT 'ANALOG.IN(3)';
DCL RAW.PWHEEL.POS		LIT 'ANALOG.IN(4)';
DCL RAW.MWHEEL.POS		LIT 'ANALOG.IN(5)';
DCL RAW.BREATH.POS		LIT 'ANALOG.IN(6)';
DCL RAW.UNUSED.POS		LIT 'ANALOG.IN(7)';

DCL SILENT.PRE.ROLL.VALUE	LIT '7';	/*	100'S OF MSEC TO BACK UP SEQUENCER	*/

/*****  from 12-EDIT  *****/

/*	CUT, COPY, MOVE, PASTE, MERGE, FILL operation literals	*/

dcl EDIT#Cut		lit '0';
dcl EDIT#Copy		lit '1';
dcl EDIT#Move		lit '2';

dcl EDIT#Paste		lit '0';
dcl EDIT#Merge		lit '1';
dcl EDIT#Fill		lit '2';
dcl EDIT#Insert	lit '3';

/*	error literals from bounce, cut.copy.move, paste.merge.fill	*/
dcl E#NoFindClip	lit '1';	/*	couldn't find clipboard file	*/
dcl E#NoOpenClip	lit '2';	/*	couldn't open clipboard file	*/
dcl E#NoRoom		lit '3';	/*	not enough memory for operation	*/
dcl E#OldSeq		lit '4';	/*	can't recall track from old format sequence	*/
dcl E#LengthErr	lit '5';	/*	can't figure out what length should be (no overall loop)	*/
dcl E#ZeroLength	lit '6';	/*	empty pattern being pasted	*/
dcl E#TooLong		lit '7';	/*	seq. will be too long once repetition count is figured in	*/
dcl E#TimbNoMatch	lit '8';	/*	timbres don't match for bounce	*/

/*	TERMINAL LITERALS -- FROM 500-CAT	*/

/*
	9/12/86 -     - Added literals for MOUSE function codes
	8/14/86 - BSW - removed patch display literals and put them back in 550-assn
						 removed error literals and put them back in 525-err as well
	8/08/86 - BSW - added error declaration
	7/25/86 - BSW - added two new states for direct-to-disk
	7/10/86 - TSS - ADDED STATE FOR DEBUG SCREEN (S.DEBUG)
	6/15/86 - cj  - added lod error declaration
	5/15/86 - "official" creation of release-M modules
*/


/*	from 550-ASSN	*/
/*	the following literals mix up the meanings of x and y	*/
dcl kbdtx		lit ' 9';	/*	cursor position for keyboard timbre name	*/
dcl kbdty		lit '20';

/*	from 557-REC0	*/
dcl note.start	lit  '0'; dcl note.key lit  '1'; dcl note.dur lit  '2';

DCL COLWIDTH	LIT '27';	/*	EACH COLUMN OF TRACK DISPLAY IS THIS WIDE	*/
DCL MODEROW		LIT ' 5';	/*	ROW OF DISPLAY MODE (SECONDS, SMPTE)		*/
DCL MODECOL		LIT '68';	/*	COL OF DISPLAY MODE								*/

dcl enable.mouse		lit 'mouse.cursor.on = 1';
dcl disable.mouse		lit 'mouse.cursor.on = 0';

/*	INFO FOR PRE-COMPUTED	*/
/*	KEYBOARD PARTIAL BLOCKS	*/
DCL (KBD.PRE.NUMP)	LIT ' 4';	/*	NUMBER OF PARTIALS PRECOMPUTED	*/
DCL (KBD.PRE.STR1)	LIT '29';	/*	29 WORDS OF PARTIAL INFO			*/
DCL (KBD.PRE.STR2)	LIT ' 6';	/*	 6 WORDS OF CHORUS HZ INFO			*/
DCL (KBD.PRE.STR)		LIT '(KBD.PRE.STR1+KBD.PRE.STR2)';				/*	STRIDE (WORDS)	*/
DCL (KBD.PRE.LEN)		LIT '(KBD.PRE.NUMP*KBD.PRE.STR*NUM.KEYS)';	/*	LENGTH (WORDS)	*/

/*	THE TBUT.PTR ARRAY CONTAINS A MAPPING OF PHYSICAL TRACK BUTTONS	*/
/*	TO LOGICAL TRACK NUMBER (LOWER 8 BITS).  IN ADDITION, THE UPPER 8	*/
/*	BITS MAY BE USED TO HOLD OTHER STATE INFORMATION RELEVANT TO THE	*/
/*	THE TRACK BUTTONS OR THE TRACKS.  DEFINITIONS FOR THESE BITS		*/
/*	SHOULD BE PUT HERE.																*/

/*	NOTE THAT THE TBUT AREA IS USED IN A RATHER CONFUSING WAY.  IT			*/
/*	IS INDEXED BOTH BY BUTTON NUMBER (E.G. 0 TO 31) AND BY TRACK			*/
/*	NUMBER (E.G. 0-255, WITH TRACK 2 BEING THE FIRST TRACK OF THE			*/
/*	SEQUENCER.																				*/

DCL B.HELD.TRK			LIT '  256';	/*	SET IF CORRESPONDING TRACK BUTTON HELD			**INDEX BY BUTTON NUMBER **	*/
DCL B.SOLOED.TRK		LIT '  512';	/*	SET IF CORRESPONDING TRACK SOLOED				**INDEX BY TRACK  NUMBER **	*/
DCL B.READY.TRK		LIT ' 1024';	/*	SET IF CORRESPONDING TRACK ARMED					**INDEX BY TRACK  NUMBER **	*/
DCL B.MUTED.TRK		LIT ' 2048';	/*	SET IF CORRESPONDING TRACK MUTED					**INDEX BY TRACK  NUMBER **	*/
DCL B.INPUT.TRK		LIT ' 4096';	/*	SET IF CORRESPONDING TRACK IS IN INPUT MODE	**INDEX BY TRACK  NUMBER **	*/
DCL B.AUTO.CUE.TRK	LIT ' 8192';	/*	SET IF CORRESPONDING TRACK IS IN AUTO  MODE	**INDEX BY TRACK  NUMBER **	*/
DCL B.PUSHD.TRK		LIT '16384';	/*	SET WHEN SOLOS ARE 'PUSHED' AND 'POPPED'		**INDEX BY TRACK  NUMBER **	*/
DCL B.GRPSEL.TRK		LIT '32768';	/*	SET AS PART OF TRACK GROUP PROCESSING			**INDEX BY TRACK  NUMBER **	*/


/*	THREE STATUS BITS USED TO KEEP TRACK OF CLAVIER BUTTON			*/
/*	PANEL STATE.  INDEXED INTO BSTAT.PTR BY PHYSICAL BUTTON NUMBER	*/

DCL B.LIT.BUTTON		LIT '1';	/*	SET IF CORRESPONDING KBD BUTTON IS LIT			*/
DCL B.BLINK.BUTTON	LIT '2';	/*	SET IF CORRESPONDING KBD BUTTON IS BLINKING	*/
DCL B.HELD.BUTTON		LIT '4';	/*	SET IF CORRESPONDING KBD BUTTON IS HELD DOWN	*/

/*	DIVISIONS: NUMBER OF SEQUENCER DELTA DIVISIONS PER MIDI QUARTER NOTE		*/
/*	USED IN ALL TEMPO MAPPING CALCULATIONS - STORE IN PLACE OF CLICK.RATE	*/

DCL DIVISIONS			LIT 'SAMP.CLICK.RATE';

/*	LITERALS FOR ERASE BUTTON FUNCTION CODES	*/

DCL ERASE.NO.STYLE		LIT '0';	/*	NONE DEFINED			*/
DCL ERASE.TEMPO.MAP		LIT '1';	//	ERASE TEMPO MAP: PRESERVE BEATS
DCL CONV.TO.UNMAPPED		LIT '2';	//	ERASE TEMPO MAP: PRESERVE TIMES
DCL ERASE.RECD.TRACK		LIT '3';	/*	ERASE RECORDING TRK	*/
DCL ERASE.HELD.TRACKS	LIT '4';	/*	ERASE HELD TRACKS		*/
DCL ERASE.SOLOED.TRACKS	LIT '5';	/*	ERASE SOLED TRACKS	*/
DCL ERASE.ALL.TRACKS		LIT '6';	/*	ERASE SEQUENCER		*/

// Literals for MIDI.THERE
DCL MIDI.THERE.MIDINET  LIT '0x8000';		// Bit  set if MIDINet hardware available
DCL MIDI.THERE.OMS		LIT '0x4000';		// Bit  set if OMS MIDI Output is available (both virtual and hardwired)
DCL MIDI.THERE.ORIG		LIT '0x3FFF';		// Bits set for original MIDI system hardware units

// Literals for THD.MIDI
DCL THD.MIDI.MIDINET  	LIT '0x8000';		// Bit  set if MIDINet hardware available
DCL THD.MIDI.OMS			LIT '0x4000';		// Bit  set if OMS MIDI Output is available
DCL THD.MIDI.OMS.VPORT	LIT '0x0800';		// Bit  set if MIDI output should go to virtual port
DCL THC.MIDI.OMS.VPNUM	LIT '0x07F0';		// Bits set for which virtual port
DCL THC.MIDI.OMS.VPMC	LIT '0x000F';		// Bits set for which MIDI channel to use
DCL THC.MIDI.OMS.VPALL	LIT '0x0FFF';		// All bits for MIDI virtual ports
DCL THC.MIDI.OMS.ALL		LIT '0x4FFF';		// Bits set for some OMS use
DCL THD.MIDI.PRESURE		LIT '0x3000';		// Bits set if pressure of some kind used
DCL THD.MIDI.CHANP		LIT '0x2000';		// Bit  set if channel pressure used; set in partial block for repeating note
DCL THD.MIDI.INDIVP		LIT '0x1000';		// Bit  set if individual pressure used
DCL THD.MIDI.ORIG			LIT '0x0F7F';		// Bits set for original MIDI system hardware units (system, output, channel)

// Codings for THD.MIDI.OMS
//	THD.MIDI.OMS	= use OMS port and hardwired routing
//	THD.MIDI.OMS   0x800 	indicates use virtual port
//						0x7F0	virtuaal port # 0 - 63
//						0x00F	MIDI channel number

// Literals for MIDI.SYNC.OUT
DCL MIDI.SYNC.OMS  		LIT '0x8000';		// Bit  set if MIDI Sync output should go to OMS
DCL MIDI.SYNC.MIDINET	LIT '0x7F00';		// Bits set if MIDI Sync output should go to MIDINet
DCL MIDI.SYNC.ORIG   	LIT '0x00FF';		// Bits set if MIDI Sync output should go to original hardware
