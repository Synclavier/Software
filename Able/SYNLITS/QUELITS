/* :SYNLITS:QUELITS  $TITLE  Literals for Note Block and Partial Block Data Structures   Modified:   09/04/91 - CJ - documented norig usage   04/03/91 - cj - Added D20.STAT to fix Lee Kopp FM bugs   11/08/90 - CJ - Added comments to SBITS   05/04/90 - PF - INCREASED NBLK.SIZE BY 1 / ADDED FROMMIDI   01/25/90 - MWH - Fix "300 msec delay starting cues" bug (from EditView)   07/19/89 - PF - Increased PBLK.SIZE by 1 / Added MIDIPATH   10/12/88 - cj - changed/documented use of note/partial block locations                   to start up poly notes in the middle   04/11/88 - PF - INCREASED NBLK.SIZE BY 1 / ADDED CHORIG   07/02/87 - MWH - ADD COMMENTS RE: KEYBOARD LOOKUP TABLE CHANGES   06/25/87 - MWH - Split FRP.PTR into FP0-FP3.PTR (fixed comment only)   12/31/86 - CJ - MONO SAMPLING COMMENTS*/DCL NBLK.SIZE    LIT '30';     /* NOTE BLOCK SIZE    *//* NOTE : SEVERAL THINGS MUST BE IN ORDER:           *//*        (NFPTR-VELD SET UP QUICKLY IN NOTE START ) *//*        (KEYN-RPRED COPIED OVER FOR TIED NOTES   ) *//*        (NFPTR-XXXX FILLED WITH MR13I IN SCAN.KBD) *//*        (NFPTR-XXXX FILLED WITH MR13I IN SCAN.AXE) */DCL NFPTR   LIT 'CORE(NPTR   )';     /* FORWARD POINTER          */DCL TIMBRE  LIT 'CORE(NPTR+ 1)';     /* STORES TIMBRE # FOR NOTE */DCL TRACK   LIT 'CORE(NPTR+ 2)';     /* STORES TRACK  # FOR NOTE */DCL NORIG   LIT 'CORE(NPTR+ 3)';     /* NOTE ORIGIN              */                                     /* 0: NOTE FROM KEYBOARD, MIDI, EXTERNAL NOTE TRIGGER.  RECORD THIS NOTE IN SEQUENCER IF RECORDING */                                     /* 1: NOTE FROM SEQUENCER                             */                                     /* 3: STARTING MUSIC NOTE IN THE MIDDLE */                                     /* 5: SEQUENCER NOTE AFTER CANCEL.NOTE  */DCL KEYPT   LIT '           4 ';     /* LOCATION OF KEY NUMBER IN BLOCK */DCL KEYN    LIT 'CORE(NPTR+ 4)';     /* INDICATES KEY NUMBER (0-X) */DCL SBITS   LIT 'CORE(NPTR+ 5)';     /* SPECIAL BITS               */                                     /* Holds B.GUI, B.ARP (etc)   */                                     /* in lower half, volume in   */                                     /* upper half if B.VOL set.   */                                     /* B.UPD is set here some     */                                     /* times (see 330-finl)       */DCL VELPT   LIT '           6 ';     /* LOCATION OF NEW PANEL RTE DATA IN NBLK */DCL VELD    LIT 'CORE(NPTR+ 6)';     /* VELOCITY OR OLD PANEL - RTE STORED HERE */DCL FPRED   LIT 'CORE(NPTR+ 7)';     /* FILTERED PRESSURE IS STORED  HERE */DCL KCVD    LIT 'CORE(NPTR+ 8)';     /* KBD CV   IS STORED  HERE   */DCL RECW    LIT 'CORE(NPTR+ 9)';     /* WORD POINTER FOR RECORDING */DCL RECS    LIT 'CORE(NPTR+10)';     /* SECT POINTER FOR RECORDING */DCL FENDM   LIT 'CORE(NPTR+11)';     /* FOR SEQ NOTES: HOLDS FORCED ENDING TIME OF NOTE IN REAL TIME UNITS */DCL FENDL   LIT 'CORE(NPTR+12)';     /* FOR KDB NOTES: HOLDS RECORDING START TIME OF NOTE IN SEQUENCER UNITS */DCL OTIMM   LIT 'CORE(NPTR+13)';     /* HOLDS TIME AT WHICH TO START THE NOTE */DCL OTIML   LIT 'CORE(NPTR+14)';     /* USING PLAY.TIME FOR SEQ NOTES,  KBD.MILLISECONDS FOR KBD NOTES */DCL RPRED   LIT 'CORE(NPTR+15)';     /* LOWER HALF: RAW PRESSURE DATA. UPPER HALF - LSB OF FILTERED PRESSURE */DCL GDATA   LIT 'CORE(NPTR+16)';     /* GUITAR STRING IN LOWER HALF, PEAK VOLUME IN UPPER HALF. 0 FOR NON-GUITAR NOTE */DCL GPITCH  LIT 'CORE(NPTR+17)';     /* HOLDS GUITAR FREQUENCY INFO  */DCL NUPDT   LIT 'CORE(NPTR+18)';     /* BITS ARE SET IN THIS WORD TO CAUSE SYNTH UPDATES FOR NEW/CHANING PITCH, RTES */                                     /* ALSO HOLDS NEW FREQ INFO FOR UPDATE RECORDS (OR RTE ROUTING INFO), OR INITIAL PITCH OFFSET FOR GUITAR *//* SET UP BY NOTE START: *//* NSTAT THRU RRATE MUST *//* BE KEPT IN ORDER      */                              DCL NSTAT   LIT 'CORE(NPTR+19)'; /* NOTE STATE: 0=ACTIVE, 1=DECAYING, 2=COMPLETED, NO CHANNELS LEFT *//* NOTE STATES (NSTAT) :.     0 - NOTES START OUT WITH NSTAT=0.   MEANS DELAY,ATTACK,INITIAL DECAY, OR SUSTAIN.     1 - NSTAT CHANGES TO 1 AS FINAL DECAY IS BEGIN.     2 - NSTAT CHANGES TO 2 WHEN ALL FINAL DECAYS ARE COMPLETED.     3 - NSTAT IS SET  TO 3 MOMENTARILY TO STOP A NOTE (GUITAR) */DCL STEALOK LIT 'CORE(NPTR+20)'; /* SET TO 256+TRACK# WHEN THIS NOTE IS DECAYING TOWARDS 0 - ALLOWS CHANNEL STEALING */DCL NACT    LIT 'CORE(NPTR+21)'; /* NUMBER OF ACTIVE PARTIALS - WHEN ZERO,  NOTE IS DONE. */DCL PTLST   LIT 'CORE(NPTR+22)'; /* PARTIAL TIMBRE BLOCK LIST                 */DCL RRATE   LIT 'CORE(NPTR+23)'; /* REPEAT/ARPEGGIATE INFO IS STORED HERE     */                                 /* "100000" - ARPEGGIATE                     */                                 /* "040000" - REPEAT                         */                                 /* "020000" - HAS SOUNDED                    */                                 /* "017777" - HOLDS RATE INFO                */DCL RTLOC   LIT '(         24)'; /* LOCATION OF RTIM IN NOTE BLOCK            */DCL RTIM    LIT 'CORE(NPTR+24)'; /* REPEAT TIME ACCUMULATOR                   */DCL TFLAG   LIT 'CORE(NPTR+25)'; /* TIMBRE RECALL SEMAPHORE - USED TO TERMINATE NOTE WITH SPECIAL DECAY IF TIMBRE RECALLED */DCL QME     LIT 'CORE(NPTR+26)'; /* QME IS USED FOR 3 DIFFERENT PURPOSES DURING THE LIFE OF A NOTE: */                                 /* BETWEEN SCANNING THE NOTE (SCAN.KBD, SCAN.SEQ, ETC)                                    AND NOTE START (SETUP.NOTE):                                        0: NON-MIDI (KEYBOARD, EXTERNAL TRIGGER, SEQUENCER)                                        1: MIDI     (I.E. DO NOT SEND OUT MIDI NOTE-ON)                                    AFTER NOTE START (SETUP.NOTE) UNTIL QUEING:                                       -1: NOTE MUST BE QUED FOR ENV ATTACK ONLY                                       -2: QUE FOR ENV ATTACK, THEN SET UP FOR FD SPLICING                                        -3: NOTE MUST STILL BE QUED FOR ATTACK + FINAL DECAY (VERY SHORT SEQUENCER NOTE)                                     AFTER FINAL DECAY HAS STARTED (NSTAT=1)                                        0: NORMAL FINAL DECAY                                        1: INIDICATES CONTINUE SPLICING DURING FINAL DECAY */DCL RELOC    LIT '(         27)';   /* LOCATION OF REMAINDER                  */DCL REMAIN   LIT 'CORE(NPTR+27)';   /* HOLDS REMAINDER FOR REPEAT/ARPEG TIMER */DCL CHORIG   LIT 'CORE(NPTR+28)';   /* MIDI CHANNEL ORIGIN (+NUM.KBD.TRACKS)  */DCL FROMMIDI LIT 'CORE(NPTR+29)';   /* SET TO 1 IF THIS NOTE ORIGINATED FROM MIDI *//* $PAGE - PARTIAL BLOCK DEFINITION: */DCL PBLK.SIZE  LIT '81'; /* PARTIAL BLOCK SIZE */DCL PFPTR   LIT 'CORE(PPTR   )';    /* HOLDS FORWARD POINTER             */DCL PLOGLOC LIT '(          1)';    /* LOCATION OF PLOG IN PARTIAL BLOCK */DCL PLOG    LIT 'CORE(PPTR+ 1)';    /* POINTER FOR CHORUS (OR ZERO)      *//* NOTE: (!!!)    THE ORDER OF ITEMS IN THE PARTIAL BLOCK IS                  IMPORTANT,  TO WIT:(LEN)  RANGE          WHEN USED-----  -----          ---------( 4)   UCHN-SMCHN     ARE ACCESSED USING 'CORE' DURING SYNTH DATA WRITES(18)   UCHN-RTUNG     ARE ZEROED      DURING RELP  (FOR SPEED DURING NOTE START)( 2)   RRATO,RCHOR    ARE INITIALIZED DURING RELP  (FOR SPEED DURING NOTE START)(47)   PANR-FMINFO    ARE QUICKLY COPIED TO SET UP CHORUS BLOCKS(29)   SSTAT-ETMC     ARE PRE-COMPUTED FOR KEYBOARD PARTIALS (ALL KEYS)  */DCL UCHN    LIT 'CORE(PPTR+ 2)';    /* USED CHANEL            */DCL SUCHN   LIT 'CORE(PPTR+ 3)';    /* SPLICE CARRIER CHANNEL */DCL MCHN    LIT 'CORE(PPTR+ 4)';    /* MODULATOR CHANNEL (ACTUAL CHAN FOR POLY) */DCL SMCHN   LIT 'CORE(PPTR+ 5)';    /* SPLICE MODULATOR CHANNEL - OR 0 IF NO SPLICE *//* SYNTHESIZER CHANNEL NUMBER CODES *//* 16-BIT NUMBERS ARE USED WITHIN THIS PROGRAM TO ALLOCATE & IDENTIFY THE   CHANNELS FROM DIFFERENT SYNTHESIZERS.   DURING INITIALIZATION,    SEVERAL 'FREE CHANNEL LISTS' ARE CREATED (FR1.PTR, FR2,PTR, FRM.PTR,    FP0.PTR, FP1.PTR, FP2.PTR, FP3.PTR).  WHEN A NOTE IS STARTED,  AN    APPROPRIATE CHANNEL IS ALLOCATED.  THIS IS DONE BY REMOVING THE    CHANNEL WORD FROM THE FREE LIST,  AND STORING IT IN THE NOTE BLOCK    (MCHN, SMCHN).   TWO CHANNELS ARE USED FOR SPLICING.   THE FORMAT OF THE CHANNEL WORDS IS AS FOLLOWS :             [4-BITS] [4-BITS] [8-BITS]             UPPER 4-BITS: STATE CONTROL, SYNTH ID (SEE BIT DEFINITIONS BELOW)             NEXT  4-BITS: WAVE MEMORY # (8-15).  INDICATES WAVE MEMORY                           TO USE FOR SPLICING IN ORIGINAL SYNTHESIZER             LOWER 8-BITS: CHANNEL # 0-255] */DCL B.SOUNDING  LIT '"100000"';  /* SET IN CHANNEL NUM IF SOUNDING.  MEANS TIMBRE BITS CAN'T BE CHANGED */                                 /* DURING STEALING WITHOUT CAUSING A CLICK */                                 /* THIS BIT MUST BE MSB - IS CHECKED WITH SIGNED COMPARISONS FREQUENTLY */DCL B.SPLICE    LIT '"040000"';  /* SET DURING NOTE START/CHANNEL STEALING. INDICATES */                                 /* THAT THIS CHANNEL WAS A SPLICE CHANNEL */DCL B.MONO      LIT '"020000"';  /* INDICATES A CHANNEL USING MONO SAMPLING HARDWARE (W. DISK) */DCL B.POLY      LIT '"010000"';  /* INDICATES A CHANNEL USING POLY SAMPLING/NEW SYNTHESIZER HARDWARE */DCL B.STEREO    LIT '"004000"';  /* POLY ONLY-CHANNEL IS OR HAS BEEN USED AS A STEREO MASTER OR SLAVE */DCL PSTAT   LIT 'CORE(PPTR+ 6)';    /* INDICATES CURRENT STATE (DELAY, ATTACK, DECAY, REPEATING) *//* PSTAT BITS - ENCODED INTO 'PSTAT' TO INDICATE STATE WE ARE IN *//* NOTE - VIBRATO IS ONLY PERFORMED ON ODD STATES (1,3,5 ETC.) */DCL DELAY.STATE LIT '00'; /* 00- MEANS DELAYING */DCL ACTIV.STATE LIT '01'; /* 01- ACTIVE NOTE */DCL REPT.STATE  LIT '03'; /* 03- INDICATES DELAYING DURING REPEATED ATTACK */DCL DECAY.STATE LIT '05'; /* 05- PERFORM BOTH DECAYS */DCL D20.STATE   LIT '07'; /* 07- SHORT DECAY TO 0    */DCL DONE.STATE  LIT '08'; /* 08- ENV DECAY DONE, CHANNEL CLEANED UP */DCL C.E.L   LIT 'CORE(PPTR+ 7)';    /* CHECK ENVELOPE LIMIT            */DCL P.E.E   LIT 'CORE(PPTR+ 8)';    /* PERFORM ENVELOPE EXPONENTIATION */DCL P.I.E   LIT 'CORE(PPTR+ 9)';    /* PERFORM INDEX    EXPONENTIATION */DCL VIBVL   LIT 'CORE(PPTR+10)';    /* VIBRATO VALUE - FINAL - CARRIER ONLY */DCL MVIBV   LIT 'CORE(PPTR+11)';    /* SPECIAL MODULATOR VIBRATO DEPTH  */DCL SUPR    LIT 'CORE(PPTR+12)';    /* VOLUME IN LOWER HALF.            */                                    /* UPPER HALF - 32768 - SET TO      */                                    /*   SUPPRESS FM VOICE WHEN RTE     */                                    /*   VOL BROUGHT TO 0 TO REDUCE     */                                    /*   FEEDTHROUGH.                   */                                    /* UPPER HALF - 16384 - SET AT END  */                                    /*   OF FM VOICE DECAY TO 0         *//* Note: Panr - Fminfo are quickly copied over to set up 'chorus' blocks */DCL PANRLOC LIT '(         13)';    /* LOCATION OF PANR IN BLOCK         */DCL PANR    LIT 'CORE(PPTR+13)';    /* UPPER 8: DEPTH    LOWER 8: RATE   */DCL PANA    LIT 'CORE(PPTR+14)';    /* STEREO PAN ACCUMULATOR (SAME AS PHASE 0-999) */DCL PANF    LIT 'CORE(PPTR+15)';    /* UPPER 7: MODE     LOWER 9: CENTER */DCL GLIDE   LIT 'CORE(PPTR+16)';    /* HOLDS PORTAMENTO CONTROL BITS, BITS FOR TIMBRE FRAME FREQUENCY OFFSET */DCL QSTAT   LIT 'CORE(PPTR+17)';    /* STATE VARIABLE FOR REAL TIME QUEING */DCL STLOC   LIT '(         18)';    /* LOCATION OF STIMER IN BLOCK  */DCL STIMER  LIT 'CORE(PPTR+18)';    /* SEQUENCE TIMER               */DCL RTUNG   LIT 'CORE(PPTR+19)';    /* PITCH BEND INFO FOR THIS NOTE */DCL RRATO   LIT 'CORE(PPTR+20)';    /* SCALE FACTOR FOR FM RATIO REAL TIME EFFECTS */DCL RCHOR   LIT 'CORE(PPTR+21)';    /* SCALE FACTOR FOR CHORUS REAL TIME EFFECTS */DCL PARTL   LIT 'CORE(PPTR+22)';    /* INDICATES PARTIAL # FOR TABLE LOOKUP */DCL BVOL    LIT 'CORE(PPTR+23)';    /* BASIC VOLUME - SCRIPT VOLUME, PARTIAL VOLUME, KBD ENVELOPE (I.E DO NOT CHANGE WITH NOTE) */DCL RVOL    LIT 'CORE(PPTR+24)';    /* RTE   VOLUME - BASIC VOLUME + RTE INFO */DCL AVOL    LIT 'CORE(PPTR+25)';    /* AM    VOLUME - RTE   VOLUME + A.M. INFO */DCL LIND    LIT 'CORE(PPTR+26)';    /* HOLDS LINEAR DISTANCE FOR LINEAR GLIDE */DCL FTLOC   LIT '(         27)';    /* LOCATION OF FTIMER IN BLOCK            */DCL FTIMER  LIT 'CORE(PPTR+27)';    /* FINAL DECAY TIMER FOR SEQUENCER NOTES  */DCL PPTMB   LIT 'CORE(PPTR+28)';    /* OLD FORMAT ONLY - HOLDS POINTER TO PARTIAL TIMBRE */                                    /* SPLICING   ONLY - HOLDS STARTING SPLICE TIME FOR S-CURVE COMPUTATINS */                                    /*                 - HOLDS INTERPOLATOR NUMBER DURING FINAL DECAY (FOR EXPONENTIATION) */                                    /* PATCH LIST ONLY - HOLDS KEY# OF CORRECT SOUND FILE -- USED IN TRANSPOSE & KNOB UPDATES *//* $PAGE *//* ITEMS QUICKLY SET UP           *//* DURING KEYBOARD NOTE           *//* START (MUST BE PRE-COMPUTED    *//* AND IN ORDER).                 */DCL SSLOC   LIT '(         29)';    /* LOCATION OF SSTAT IN PARTIAL BLOCK */DCL SSTAT   LIT 'CORE(PPTR+29)';    /* SPLICE TIMBRES - HOLDS SATE OF SPLICING FOR FINAL DECAY COMPUTATIONS */                                    /* MONO   TIMBRES - HOLDS XMEM BASE SECTOR OF ATTACK BUFFER */                                    /* POLY   TIMBRES - HOLDS MY.VOL INFO FOR POLY SAMPLING     */DCL ISTAT   LIT 'CORE(PPTR+30)';    /* FM     TIMBRES - INDICATES STATE OF FM ENVELOPE FOR RTE UPDATES */                                    /* MONO   TIMBRES - HOLDS SPECIAL STATE INFO FOR NOTE START */                                    /* POLY   TIMBRES - HOLDS COPY OF MULTI CHANNEL INFORMATION */DCL FMPTR   LIT 'CORE(PPTR+31)';    /* SPLICE TIMBRES - HOLDS CURRENT FRAME POINTER */                                    /* PATCH  TIMBRES - HOLDS FILE VOLUME INFO */DCL MRLCH   LIT 'CORE(PPTR+32)';    /* SPLICE TIMBRES - HOLDS MOST RECENTLY LOADED CHANNEL; USED WHEN                                       UPDATING & CHANNEL STEALING */                                    /* PATCH  TIMBRES - HOLDS PITCH CORRECTION INFO */DCL DADJ    LIT 'CORE(PPTR+33)';    /* DEC  ADJ */   DCL HADJ    LIT 'CORE(PPTR+34)';    /* HARM ADJ */   /* PORTAMENTO ITEMS: */DCL CURRF   LIT 'CORE(PPTR+35)';    /* HOLDS CURRENT FREQUENCY */DCL DESTF   LIT 'CORE(PPTR+36)';    /* HOLDS DESTINATION FREQUENCY *//* VIBRATO ITEMS: */DCL PVIB    LIT 'CORE(PPTR+37)';    /* USED TO DISTRIBUT VIBRATO PROCESSING WORKLOAD */DCL VIBWD   LIT 'CORE(PPTR+38)';    /* VIBRATO CONTROL WORD (INDICATES STATE) *//* ATTACK TIMERS: */DCL ETLOC   LIT '(         39)';    /* LOCATION OF ETIMER IN BLOCK          */DCL ETIMER  LIT 'CORE(PPTR+39)';    /* TIMER FOR SYNCR STARTS  -  ENVELOPE  */                              /* ETIMER IS ALSO USED FOR SPLICE DELAY */                              /* SEGMENTS OF SPLICING PARTIALS        */DCL ITLOC   LIT '(         40)';    /* LOCATION OF ITIMER IN BLOCK          */DCL ITIMER  LIT 'CORE(PPTR+40)';    /* TIMER FOR SYNCR STARTS  -  INDEX     *//* FREQUENCY INFO: (INCLUDING PARTIAL CHORUS) */DCL UONULOC LIT '(         41)'; /* LOCATION IF UONU IN PARTIAL BLOCK */DCL UONU    LIT 'CORE(PPTR+41)'; /* USER CHANNEL INC, MMM, ONU.       */DCL UNNM    LIT 'CORE(PPTR+42)'; /* NOTE: CONTAINS BASIC HZ INFO IN   */DCL UINC    LIT 'CORE(PPTR+43)'; /* LOWER HALF, PARTIAL CHORUS INFO   */                                 /* IN UPPER HALF                     */DCL DO.FM   LIT 'CORE(PPTR+44)'; /* NONZERO IF FM USED IN SOUND    */                                 /* MUST BE ZERO FOR POLY AND MONO */                       DCL MONU    LIT 'CORE(PPTR+45)'; /* FOR FM   - MODULATOR FREQ INFO   */                                 /* FOR POLY - HOLDS PT.WTABL INFO   */DCL MNNM    LIT 'CORE(PPTR+46)'; /*            (TWO WORDS)           */DCL MINC    LIT 'CORE(PPTR+47)'; /* FOR POLY - HOLDS BASE ADDRESS    */                                 /*            FOR POLY SYNTH        *//* INX ENV INFO: */DCL IATLIM   LIT 'CORE(PPTR+48)';   /* HOLDS LIMIT FOR INX ATK       */                                     /* FOR POLY - PAGE/WORD OF BASE  */                                    /*            ADDRESS            */DCL IATINT   LIT 'CORE(PPTR+49)';   /* INT INFO FOR INX ATTK         */                                    /* FOR POLY - TOTAL LOOP LENGTH  */                                    /*            MSB                */DCL IIDLIM   LIT 'CORE(PPTR+50)';   /* INT LIM  FOR INX IDEC         */                                    /* FOR POLY - TOTAL LOOP LENGTH  */                                    /*            LSB                */DCL IIDINT   LIT 'CORE(PPTR+51)';   /* INT INFO FOR INX IDEC         */                                    /* FOR POLY - PT.ONLOOP          */DCL ITMC     LIT 'CORE(PPTR+52)';   /* INX DECAY TIME CONST          */                                    /* FOR POLY - HOLDS BIN AND      */                                    /*            STEREO BIT PRIOR   */                                    /*            AND DURING         */                                    /*            CHANNEL ALLOCATION */                                    /*            ONLY               *//* VOL ENV INFO: */DCL EATLIM   LIT 'CORE(PPTR+53)';   /* HOLDS LIMIT FOR ENV ATK */DCL EATINT   LIT 'CORE(PPTR+54)';   /* INT INFO FOR ENV ATTK   */DCL EIDLIM   LIT 'CORE(PPTR+55)';   /* INT LIM  FOR ENV IDEC   */DCL EIDINT   LIT 'CORE(PPTR+56)';   /* INT INFO FOR ENV IDEC   */DCL ETMC     LIT 'CORE(PPTR+57)';   /* ENV DECAY TIME CONST    */DCL FMINFO   LIT 'CORE(PPTR+58)';   /* INFO FOR FM SYNTH NOTE START  */                                    /* USED DURING FINAL DECAYS OF   */                                    /* MONO SAMPLING NOTES           *//* $PAGE *//* FINAL DECAY INFO: */DCL EFDINT   LIT 'CORE(PPTR+59)';   /* INT INFO FOR ENV FDEC   */DCL SFDINT   LIT 'CORE(PPTR+60)';   /* INT INFO FOR SUCHN FDEC */DCL IFDINT   LIT 'CORE(PPTR+61)';   /* INT INFO FOR INX FDEC   *//* QUES FOR INTERRUPT SYNTH I/O:	*//* QUE POINTERS MUST BE KEPT		*//* IN ORDER - SEE STEAL.CHANS		*/DCL EQFLOC  LIT '(   62)'; /* LOCATION OF ENV Q PTR   */DCL EQF     LIT 'CORE(PPTR+62)'; /* ENV Q FORWARD PTR       */DCL EQB     LIT 'CORE(PPTR+63)'; /* ENV Q BACK    PTR       */DCL IQFLOC  LIT '(         64)'; /* LOCATION OF INX Q PTR   */DCL IQF     LIT 'CORE(PPTR+64)'; /* INX Q FORWARD PTR       */DCL IQB     LIT 'CORE(PPTR+65)'; /* INX Q BACK    PTR       */DCL FQFLOC  LIT '(         66)'; /* LOCATION OF FDEC Q PTR  */DCL FQF     LIT 'CORE(PPTR+66)'; /* FDEC Q FORWARD PTR      */DCL FQB     LIT 'CORE(PPTR+67)'; /* FDEC Q BACK    PTR      *//* MISC DATA STORAGE AREAS IN PARTIAL BLOCK:  */DCL EDAT     LIT 'CORE(PPTR+68)';   /* HOLDS INFO FOR EXP DECS */DCL IDAT     LIT 'CORE(PPTR+69)';   /* HOLDS INFO FOR EXP DECS */                                    /* HOLDS VOLUME INFO FOR MONO SAMPLING */                                    /* HOLDS STERO INFO FOR POLY SOUNDS    */DCL L.V.T    LIT 'CORE(PPTR+70)';   /* TIME OF LAST VIBRATO COMPUTATION */DCL VIBMX    LIT 'CORE(PPTR+71)';   /* HOLDS MAX FOR VIBRATO ATTACK ACCUMULATOR */DCL VIBAC    LIT 'CORE(PPTR+72)';   /* HOLDS ACCUMULATOR FOR VIBRATO ATTACK */DCL VBLEV    LIT 'CORE(PPTR+73)';   /* VIBRATO LEVEL FROM ATTACK */DCL VBRAM    LIT 'CORE(PPTR+74)';   /* HOLDS VIBRATO RAMP ACCUMULATOR */DCL VRAT     LIT 'CORE(PPTR+75)';   /* VIBRATO RATE SCALED FOR REAL TIME EFFECTS */DCL VMDE     LIT 'CORE(PPTR+76)';   /* VIBRATO MODULATOR DEPTH SCALED FOR REAL TIME EFFECTS */DCL GFPTR    LIT 'CORE(PPTR+77)';   /* POINTER TO GHOST BLOCK       */DCL MIDIRT   LIT 'CORE(PPTR+78)';   /* SAMPLED MIDI ROUTING INFO    */DCL MIDIINFO LIT 'CORE(PPTR+79)';   /* MIDI KEY # AND VEL DATA      */DCL MIDIPATH LIT 'CORE(PPTR+80)';   /* SAMPLED MIDINET ROUTING INFO */