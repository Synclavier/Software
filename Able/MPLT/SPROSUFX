% Music Engraving routines - 3/11/90 G.1% Fix for Fontographer bug/NEDMusicFont findfont begin   InvMtx FontMatrix invertmatrix popend% Efficiency aliases/T  /translate        load def/SC /scale            load def/R  /rotate           load def/M  /moveto           load def/L  /lineto           load def/RL /rlineto          load def/CP /closepath        load def/H  /show             load def/K  /stroke           load def/FL /fill             load def/FF /findfont         load def/CF /scalefont        load def/F  /setfont          load def/W  /setlinewidth     load def/GS /gsave            load def/GR /grestore         load def/-  /neg              load def/" {300 mul} bind def/# {200 div add 300 mul round} bind def/in {300 mul} bind def/cm {2.54 div 300 mul} bind def/pt {72 div 300 mul} bind def/l0 {[] 0 setdash}            bind def/l1 {[10] 0 setdash}          bind def/l2 {[10 10 20 10] 0 setdash} bind def/l3 {[20] 0 setdash}          bind def/l4 {[40] 0 setdash}          bind def/SlurWidth 3 def/SlurBorder .75 def/Atan {               % Redef of atan to handle 0/0  2 copy 0 eq exch 0 eq and  {pop pop 0.0} {atan} ifelse} bind def/WL {              % wide line (VERT(0/1), X1, Y1, X2, Y2, LIMIT)  /LIM exch def  /Y2 exch def  /X2 exch def  /Y1 exch def  /X1 exch def  currentlinewidth exch  1 setlinewidth  {    {    X1 Y1 moveto    X2 Y2 lineto stroke    X1 LIM eq {exit} if    /X1 X1 1 add def    /X2 X2 1 add def    } loop  }  {    {    X1 Y1 moveto    X2 Y2 lineto stroke    Y1 LIM eq {exit} if    /Y1 Y1 1 add def    /Y2 Y2 1 add def    } loop  }  ifelse  setlinewidth} bind def/ST           % staff{  2 copy  312 moveto  312 lineto  2 copy  336 moveto  336 lineto  2 copy  360 moveto  360 lineto  2 copy  384 moveto  384 lineto  408 moveto  408 lineto  stroke} bind def/A         % bar{  setlinewidth  2 index exch  moveto  lineto  stroke  2 setlinewidth} bind def/B         % beam { /wdt exch def   exch .5 add exch   2 copy   wdt add moveto   wdt sub lineto   exch .5 sub exch   2 copy   wdt sub lineto   wdt add lineto   closepath   fill} bind def/bracepic {  dup /q exch dup log 7.5 mul div def  % Q = L/(logL * 7.5) (a good Q for 200 is 14)  q 15 gt {/q 15 def} if               % limit Q to 15  /x2 q 1.5 mul neg def           % X2 = X1-1.5q  /y2 exch neg def  0 0 moveto                      % X1, Y1  4 q mul neg 6 q mul neg         % X1-4q, Y1-6q  x2 2.6 q mul add y2 4 q mul add % X2+2.6q, Y2+4q  x2 y2 curveto                   % X2, Y2  x2 4 q mul add y2 6 q mul add   % X2+4q, Y2+6q  2.6 q mul neg 4 q mul neg       % X1-2.6q, Y1-4q  0 0 curveto                     % X1, Y1  } def/BR {      % brace  /bl exch def  /by exch def  /bx exch def  gsave  bx by bl add translate  bl 0 lt {-1 -1 scale /bl bl neg def} if  bl 2 div bracepic  0 bl neg translate  1 -1 scale  bl 2 div bracepic  gsave SlurBorder setlinewidth stroke grestore fill  grestore} bind def/wavepic {  0 -3.75 translate  .75 .75 scale  /X2 exch 1 1 3 div add mul def  X2 30 div cvi 30 mul dup  X2 exch div 1 scale  /X2 exch def  /X  0   def  {X 0 moveto   X 13 add  15   X 17 add -15   X 30 add dup /X exch def 0 curveto   X 5  add  7.5 lineto   X 8  sub -7.5    X 12 sub 22.5   X 25 sub  7.5 curveto   fill   X X2 ge {exit} if   } loop } def/WV {          % wave  gsave  2 copy 6 -2 roll matrix translate  dup 4 1 roll itransform  exch Atan matrix rotate  exch matrix concatmatrix  dup 4 1 roll itransform pop  exch concat wavepic  grestore} bind def/FindCpts { % passed BX,BY,X,Y  /Y  exch def  /X  exch def  /BY exch def  /BX exch def  Y BY sub dup mul X BX sub dup mul add sqrt 5 div dup  SlurWidth lt {/wid exch def} {pop /wid SlurWidth def} ifelse  /VectorAngle Y BY sub X BX sub Atan def  VectorAngle BaseAngle sub dup  abs 10 lt {    0 lt {/VectorAngle BaseAngle 10 sub def}         {/VectorAngle BaseAngle 10 add def}    ifelse  } {pop} ifelse  /E wid BaseAngle 90 add VectorAngle sub cos div def  X E VectorAngle cos mul add  Y E VectorAngle sin mul add  X E neg VectorAngle cos mul add  Y E neg VectorAngle sin mul add} def/box {  exch 10 sub exch 10 sub moveto  0 20 rlineto 20 0 rlineto  0 -20 rlineto closepath} def/S { % slur (passed DOTTED,X0,Y0,X1...Y3)  gsave  /Y3 exch def  /X3 exch def  /Y2 exch def  /X2 exch def  /Y1 exch def  /X1 exch def  /Y0 exch def  /X0 exch def  1 eq {    /l X0 X1 lt {X0} {X1} ifelse def    /m X3 X2 gt {X3} {X2} ifelse def    l 25 m {     dup        -3000 moveto     dup         3000 lineto     dup 15 add  3000 lineto         15 add -3000 lineto closepath    } for    X0 Y0 box    X3 Y3 box    clip newpath  } if  /BaseAngle Y3 Y0 sub X3 X0 sub Atan def  X0 Y0 X1 Y1 FindCpts  /LY1 exch def  /LX1 exch def  /UY1 exch def  /UX1 exch def  X3 Y3 X2 Y2 FindCpts  /LY2 exch def  /LX2 exch def  /UY2 exch def  /UX2 exch def  X0 Y0 moveto  UX1 UY1 UX2 UY2 X3 Y3 curveto  LX2 LY2 LX1 LY1 X0 Y0 curveto  SlurBorder 0 gt  {gsave SlurBorder setlinewidth stroke grestore} if  fill grestore} bind def% Set up special font encoding/NEDEncoding StandardEncoding 256 array copy dup 128 [/grave          /acute          /circumflex     /tilde          /dotaccent/dieresis       /ring           /cedilla        /hungarumlaut   /ogonek/caron          /dotlessi       /yen            /florin         /quotesingle/ellipsis/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef                /space          /exclamdown     /Otilde         /macron/sterling       /perthousand    /fl             /otilde         /quotesinglbase/quotedblbase   /periodcentered /guillemotleft  /ydieresis      /endash/zcaron         /fraction       /quotedblright  /paragraph      /section/germandbls/cent           /breve          /ordmasculine   /fi             /bullet/quotedblleft   /Ograve         /ograve         /Ydieresis      /guilsinglleft/Zcaron         /questiondown   /currency       /Iacute         /Ucircumflex/Scaron         /Idieresis      /Adieresis      /Igrave         /Lslash         /Ntilde         /Ccedilla       /Oacute         /Ocircumflex    /Odieresis      /Ugrave         /Udieresis      /Eacute         /Ecircumflex    /Aacute         /Agrave         /Icircumflex    /Aring          /AE             /Uacute         /Acircumflex    /OE             /Atilde         /Oslash         /edieresis      /dagger         /egrave         /ordfeminine    /emdash         /guilsinglright /iacute         /ucircumflex    /scaron         /idieresis      /adieresis      /igrave         /lslash         /ntilde         /ccedilla       /oacute         /ocircumflex    /odieresis      /ugrave         /udieresis      /eacute         /ecircumflex    /aacute         /agrave         /icircumflex    /aring          /ae             /uacute         /acircumflex    /oe             /atilde         /oslash         /Edieresis      /daggerdbl      /Egrave         /guillemotright] putinterval def/Times-Roman findfontdup length dict /newdict exch def{1 index /FID ne  {newdict 3 1 roll put}  {pop pop}  ifelse} forallnewdict /Encoding NEDEncoding put/NEDTimes-Roman newdict definefont pop/Times-Italic findfontdup length dict /newdict exch def{1 index /FID ne  {newdict 3 1 roll put}  {pop pop}  ifelse} forallnewdict /Encoding NEDEncoding put/NEDTimes-Italic newdict definefont pop/Times-Bold findfontdup length dict /newdict exch def{1 index /FID ne  {newdict 3 1 roll put}  {pop pop}  ifelse} forallnewdict /Encoding NEDEncoding put/NEDTimes-Bold newdict definefont pop/Times-BoldItalic findfontdup length dict /newdict exch def{1 index /FID ne  {newdict 3 1 roll put}  {pop pop}  ifelse} forallnewdict /Encoding NEDEncoding put/NEDTimes-BoldItalic newdict definefont pop/Courier findfontdup length dict /newdict exch def{1 index /FID ne  {newdict 3 1 roll put}  {pop pop}  ifelse} forallnewdict /Encoding NEDEncoding put/NEDCourier newdict definefont pop% Set up quick call variables for fonts/SF  /NEDTimes-Roman      findfont  53 1 3 div add scalefont def/IF  /NEDTimes-Italic     findfont  53 1 3 div add scalefont def/BF  /NEDTimes-Bold       findfont  53 1 3 div add scalefont def/BIF /NEDTimes-BoldItalic findfont  53 1 3 div add scalefont def/MF  /NEDMusicFont        findfont 144             scalefont def/SMF /NEDMusicFont        findfont 108             scalefont def/OMF /NEDMusicFont        findfont 144 50 div      scalefont def/AF  /NEDCourier          findfont  53 1 3 div add scalefont def/DF  /NEDTimes-Roman      findfont 106 2 3 div add scalefont def/LF  /NEDTimes-Bold       findfont  40             scalefont def/SM [1 0 25 sin 1 0 0] def/FR       % frame C1 F1  C2 F2  C3 F3  C4 F4  C5 F5  C6 F6  Root Size X Y{  2 setlinecap  /y exch def  /x exch def  /yt exch 24 mul y add def  /root exch def  /str 2 string def  /chr 1 string def  /cft currentfont def  y 24 yt                      % Frets  {    dup x 40 sub exch moveto        x 40 add exch lineto  } for stroke  root 1 eq                    % Root  {                            % Nut    x 40 sub yt moveto    x 40 add yt lineto    x 40 add yt 4 sub lineto    x 40 sub yt 4 sub lineto fill  }  {                            % Non-nut    /Helvetica findfont 30 scalefont setfont    root str cvs dup stringwidth pop    x  45 sub exch sub    yt 36 sub    moveto show  } ifelse  MF setfont  x 40 add -16 x 40 sub         % Strings  {    dup y  moveto    dup yt lineto stroke    yt 9 add 3 2 roll 24 mul sub moveto    chr 0 3 2 roll dup 0 eq    {pop pop pop}    {put chr show} ifelse  } for  0 setlinecap  cft setfont} bind def/cropms .25 in def/trim_dx 75 def /trim_dy 20 def/trim {  .25 pt setlinewidth  trim_dx trim_dy translate  cropms neg 0 moveto 0 0 lineto 0 cropms neg lineto  trim_h 2 div dup  cropms neg exch moveto 0 exch lineto stroke  cropms neg trim_h moveto  0 trim_h lineto  0 trim_h cropms add lineto  trim_w 2 div dup  trim_h moveto trim_h cropms add lineto stroke  trim_w trim_h cropms add moveto  trim_w trim_h lineto  trim_w cropms add trim_h lineto  trim_h 2 div dup  trim_w cropms add exch moveto trim_w exch lineto stroke  trim_w cropms add 0 moveto  trim_w 0 lineto  trim_w cropms neg lineto  trim_w 2 div dup  0 moveto cropms neg lineto stroke} bind def/clip_dx 0 def /clip_dy 0 def/clip {  clip_dx clip_dy translate} bind def/page_top_mrgn 0 def/top {  currentpoint  mark  (T) false charpath flattenpath pathbbox  2 index sub /DY exch def  newpath cleartomark  DY sub moveto} bind def/right {  dup  stringwidth pop neg 0 rmoveto} bind def/center {  dup  stringwidth pop 2 div neg 0 rmoveto} bind def/showline {  {    counttomark dup    0 eq {pop pop exit} if    -1 roll    dup type    /dicttype eq {setfont} {show} ifelse  } loop} bind def/findNEDfont {  findfont  dup length dict /newdict exch def  {1 index /FID ne    {newdict 3 1 roll put}    {pop pop}    ifelse  } forall  newdict /Encoding NEDEncoding put  /NEDfont newdict definefont} bind def/fontsize 0 def/leading 0 def/cur_y 0 def/setfontsize {  1 eq {/cur_y cur_y fontsize 1.2 mul 3 index sub add def} if  /fontsize 1 index def  scalefont} bind def/tile {       % hori_page vert_page tile  /ts 0 def  exch  imag_w overlap sub mul  % Horizontal  dup imag_w add trim_w ge {/ts 1 def} if  neg exch  imag_h overlap sub mul  % Vertical  dup imag_h add trim_h ge {/ts ts 2 add def} if  neg translate  ts 1 string cvs print flush} bind def