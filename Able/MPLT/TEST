library ':RELOC:PSPKRTNS';library 'HARD.';abort.scsi:procedure public; end; /* This may go away (into -xpl:scsiswap) *//* Insert all necessary Operating System literals explicitly */insert ':-xpl:asciidef';insert ':-xpl:termutil';insert ':-xpl:plotlib';insert ':-xpl:catswap';insert ':-xpl:strings';insert 'lits';insert 'hdcl';dcl OVLY_BASE fixed public;dcl MAIN_MODE fixed public;dcl CATCH_PS_ERRORS  boolean public;dcl PS_ERROR_PRESENT boolean public;dcl THE_END label;ERROR:proc (str) public;  dcl str fixed array;  pstringr(str);  goto THE_END;end;AQUIRE_PRINTER:procedure swap;  dcl (F,G) boolean;  dcl C     fixed;  if ~d40_present then call ERROR ('No D40');  call PS_ENABLE ("40"); /* Enable D40 interrupts */  if MAIN_MODE = TEST# then do;    F = false; /* Wait until printer responds */    hcr;  end;  else F = true;  G = false;  do while F;    hchar(ctrl.t);    if READ_PS_MESSAGE ('%%[ status: waiting; source: serial 25 ]%%')    then call CLOSE_PS_JOB;    hchar(ctrl.t);    if READ_PS_MESSAGE ('%%[ status: idle ]%%') then F = false;    if F & ~G then do;      pos(13,23); reverse(1);      pstring(' Waiting for printer to respond ');      reverse(0); pos(16,0); flush_term; G = true;    end;    do while ~term_idle;      C = rchar;      if C = sp then do;        call PS_DISABLE;        goto THE_END;      end;      else if C = asc.refresh then do;        clear_all;        G = false;      end;    end;  end;  if G then do;    pos(13,0); erase_line; pos(16,0);  end;end AQUIRE_PRINTER;FINISH_ENGRAVING:procedure swap;  if MAIN_MODE = TEST# then hchar(ff); /* Eject page if not talking to PostScript */  call CLOSE_PS_JOB;  call PS_DISABLE;  if PS_ERROR_PRESENT then do;    crlf;    pstring('Press <RETURN> to continue: ');    call rchar; crlf;  end;end FINISH_ENGRAVING;dcl (C,I,PAGES) fixed;  PS_ERROR_PRESENT = false;  CATCH_PS_ERRORS  = false;  clear_all;  pstring('Test? '); C = rchar; crlf;  if C = asc.y | C = lower.y then MAIN_MODE = TEST#;                             else MAIN_MODE = 0;  pstring('Pages? '); PAGES = getnum; crlf;  pstringr('Loading overlay file'); flush_term;  call LOAD_OVERLAY_FILE;  pstringr('Aquiring printer'); flush_term;  call AQUIRE_PRINTER;  flush_term;  CATCH_PS_ERRORS = true;  pstringr('Setting up page');  call SCAN_OVERLAY_FILE(0);  pstringr('Starting page');  do I = 1 to PAGES;    hstringr('save');    hstringr('trim clip');    call SCAN_OVERLAY_FILE(I);    /* Plot music here */    hstringr('showpage restore');  end;  call FINISH_ENGRAVING;THE_END:  pstringr('Done');flush_term;