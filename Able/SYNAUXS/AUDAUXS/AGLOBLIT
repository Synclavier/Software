/*	:SYNAUXS:AUDAUXS:AGLOBLIT  $TITLE  Audio Event Editor Global Literals

Modified:
2001/01/30 - TY  - OPT XFER bug fix by utilizing Get.SFD.Reserved.Sectors() to reserve space for SFD
1991/02/28 - MWH - Moved saved mark points from TRD area to general XMEM
1989/05/02 - TSS - Merged SGS Optical Disk code
1989/02/23 - SGS - Added Optical Disk Transfer panel
1988/05/20 - TSS - Added Locked.Item.Indicator.Id literal
1988/03/18 - MWH - Add wave display storage area in external memory
*/

/*** SCREEN MANAGER ALLOCATION ID'S FOR DIFFERENT PANELS ***/

dcl Locked.Item.Indicator.Id	lit  '1';	/*	object id for locked item status indicator message	*/

dcl Project.Manager.Group.Id	lit  '1'; dcl Project.Manager.Alloc	lit  '1000';
dcl Shuttle.Group.Id				lit  '2'; dcl Shuttle.Alloc			lit  '2000';
dcl Cue.Group.Id					lit  '3'; dcl Cue.Alloc					lit  '3000';
dcl Cue.Menu.Group.Id			lit  '4'; dcl Cue.Menu.Alloc			lit  '4000';
dcl Seq.Group.Id					lit  '5'; dcl Seq.Alloc					lit  '5000';
dcl Routing.Group.Id				lit  '6'; dcl Routing.Alloc			lit  '6000';
dcl Sync.Group.Id					lit  '7'; dcl Sync.Alloc				lit  '7000';
dcl Storage.Group.Id				lit  '8'; dcl Storage.Alloc			lit  '8000';
dcl Panel.Menu.Group.Id			lit  '9'; dcl Panel.Menu.Alloc		lit  '9000';
dcl Record.Group.Id				lit '10'; dcl Record.Alloc				lit '10000';
dcl Motion.Group.Id				lit '11'; dcl Motion.Alloc				lit '11000';
dcl Optical.Group.Id				lit '12'; dcl Optical.Alloc			lit '12000';


/*** TRD AREA AUDIO EVENT EDITOR ALLOCATION ***/

dcl AEE.Trd.Storage.Needed				lit '(54+Get.SFD.Reserved.Sectors()+AEE.Smgr.Len)';

/*	 Scratch space - do not use	  (TRD.PTR  )	*/
/*	 Scratch space - do not use	  (TRD.PTR+1)	*/
dcl Cue.Flag.Ptr					lit '(TRD.PTR+2)';
dcl Cue.Symbol.Ptr				lit '(TRD.PTR+3)';
dcl AEE.Panel.Base				lit '(TRD.PTR+4)';
/*	 Place.Base							  (TRD.PTR+5)	(set in Initialize.Audio.Event.Editor	*/
/*	 Place.Base							  (TRD.PTR+6)	*/
/*	 Place.Base							  (TRD.PTR+7)	*/
/*	 Place.Base							  (TRD.PTR+8)	*/
/*	 Place.Base							  (TRD.PTR+9)	*/
dcl AEE.Cur.Seq.Snap				lit '(TRD.PTR+10)';	/*	for 16	*/
dcl AEE.Old.Seq.Snap				lit '(TRD.PTR+26)';	/*	for 16	*/
/*	dcl AEE.Locate.Stack			lit '(TRD.PTR+42)';	*/	/*	spares: moved elsewhere	*/
dcl AEE.Seq.Cat					lit '(TRD.PTR+44)';	/*	holds cached sequence catalog for fast scrolling	*/
dcl AEE.Coarse.Wave				lit '(TRD.PTR+48)';	/*	3 for coarse wave display	*/
dcl AEE.Fine.Wave					lit '(TRD.PTR+51)';	/*	3 for fine wave display	*/

	dcl AEE.SFDir.Base			lit '(TRD.PTR+54)';		/*	Space for sound file directory (optical disk xfer) display	*/
	dcl AEE.SFDir.Len				lit '(Get.SFD.Reserved.Sectors())';

	dcl AEE.Smgr.Base				lit '(AEE.SFDir.Base+AEE.SFDir.Len)';
	dcl AEE.Smgr.Len				lit '40';

/*	 Screen Manager space		from top of TRD.Ptr back 40 sectors	*/

/*	GID/PID Locations for Audio Event Editor	*/

/*	The GID/PID dynamic area is split up into different sections for		*/
/*	AEE. One section contains the Sound File Directory variables (SFD).	*/
/*	Another section contains general AEE variables for various panels.	*/
/*	Both sections can be moved anywhere in the GID/PID area by simply		*/
/*	changing their base offsets (remember, however, that the dynamic		*/
/*	area of GID/PID is only two sectors long!)									*/
dcl  SFD.GID.PID.Base		lit '  0';	/*	offset, in words, to beginning of SFD GID/PID vars	*/
dcl  AEE.GID.PID.Base		lit '256';	/*	offset, in words, to beginning of AEE GID/PID vars	*/

/**** The SFD GID/PID variables ****/
dcl OptFullSize				lit '(SFD.GID.PID.Base+  1)';	/*	size of full-width mode, in rows	*/

dcl OptDlgFirstId				lit '(SFD.GID.PID.Base+ 10)';	/*	Holds id of first dialog object id defined	*/
/*	Locations 11-19 are reserved for object ids used by Dialog Panels	*/

	/*	General object def for dialog panels	*/
	dcl OptDlgGo				lit '(SFD.GID.PID.Base+ 11)';	/*	holds id of POSITIVE response object	*/
	dcl OptDlgAbort			lit '(SFD.GID.PID.Base+ 12)';	/*	holds id of NEGATIVE response object	*/

	/*	Specific object defs for COPY Dialog Panel	*/
	dcl OptDlgCueName			lit '(SFD.GID.PID.Base+ 13)';	/*	holds id of cue name to save sound file under	*/
	dcl OptDlgTrk1				lit '(SFD.GID.PID.Base+ 14)';	/*	holds id of track number to store left, or mono, sound	*/
	dcl OptDlgTrk2				lit '(SFD.GID.PID.Base+ 15)';	/*	holds id of track number to store right sound of stereo file	*/

	/*	Specific object defs for DISPLAY OPTIONS Dialog Panel	*/
	dcl OptDlgPanelSize		lit '(SFD.GID.PID.Base+ 13)';	/*	holds id of size of opt xfer panel	*/
	dcl OptDlgDisp1			lit '(SFD.GID.PID.Base+ 14)';	/*	holds id of NAME button	*/
	dcl OptDlgDisp2			lit '(SFD.GID.PID.Base+ 15)';	/*	holds id of CAPTION button	*/
	dcl OptDlgDisp3			lit '(SFD.GID.PID.Base+ 16)';	/*	holds id of LENGTH button	*/
	dcl OptDlgSort				lit '(SFD.GID.PID.Base+ 17)';	/*	holds id of sort switch	*/

	/*	Specific object defs for STORE CUE Dialog Panel	*/
	dcl OptDlgSFName			lit '(SFD.GID.PID.Base+ 13)';	/*	holds id of what to call cue saved on optical disk	*/
	dcl OptDlgRate				lit '(SFD.GID.PID.Base+ 14)';	/*	holds id of rate at which to store sound file	*/

dcl OptDlgLastId				lit '(SFD.GID.PID.Base+ 20)';	/*	holds id of the last dialog object id defined	*/

dcl OptXferLeftTrack			lit '(SFD.GID.PID.Base+ 21)';	/*	holds last selected left track (Opt -> DTD)	*/
dcl OptXferRightTrack		lit '(SFD.GID.PID.Base+ 22)';	/*	holds last selected right track (Opt -> DTD)	*/
dcl OptXferMonoTrack			lit '(SFD.GID.PID.Base+ 23)';	/*	holds last selected mono track (Opt -> DTD)	*/

/*	Free: 24-255	*/

/**** The AEE GID/PID variables ****/
dcl  Cue.Menu.Id.Table		lit '(AEE.GID.PID.Base+  0)';	/*	Holds id look up table for delete cue function	*/
dcl  Cue.Menu.Id.Table.Len	lit '81';							/*	length of table - 0 to 80								*/
																			/*	next gid/pid location is 81							*/
dcl  Aee.Initial.TRD.LEN	lit '(AEE.GID.PID.Base+ 81)';	/*	holds starting trd.len upon entry					*/

dcl  Seq.Dialog.Object		lit '(AEE.GID.PID.Base+ 82)';	/*	object id memories for up to	*/
dcl  Seq.Dialog.Len			lit '10';							/*	10 seq panel dialog objects	*/

/*	Dialog Panel Lits Useable by any Seq Panel Dialog	*/
dcl SEQ#Ok						lit '(Seq.Dialog.Object+0)';	/*	OK     Button	*/
dcl SEQ#Cancel					lit '(Seq.Dialog.Object+1)';	/*	CANCEL Button	*/

/*	Track Bounce Dialog Literals	*/
dcl SEQ#FromTrack				lit '(Seq.Dialog.Object+2)';
dcl SEQ#ToTrack				lit '(Seq.Dialog.Object+3)';
dcl SEQ#Duplicate				lit '(Seq.Dialog.Object+4)';
dcl SEQ#Bounce					lit '(Seq.Dialog.Object+5)';
dcl SEQ#Toggle					lit '(Seq.Dialog.Object+6)';

/*	Track Display Control Dialog Literals	*/
dcl SEQ#DispTracks			lit '(Seq.Dialog.Object+2)';
dcl SEQ#TrackNum				lit '(Seq.Dialog.Object+3)';
dcl SEQ#ColNum					lit '(Seq.Dialog.Object+4)';
dcl SEQ#VolButton				lit '(Seq.Dialog.Object+5)';
dcl SEQ#PanButton				lit '(Seq.Dialog.Object+6)';
dcl SEQ#RoutButton			lit '(Seq.Dialog.Object+7)';
dcl SEQ#PriorityButton		lit '(Seq.Dialog.Object+8)';

/*	Track Display Scroll Range Literals	*/
dcl SEQ#ScrollStart			lit '(Seq.Dialog.Object+2)';
dcl SEQ#ScrollEnd				lit '(Seq.Dialog.Object+3)';

/*	Track Display Resize Dialog Literals	*/
dcl SEQ#DisplaySize			lit '(Seq.Dialog.Object+2)';

/*	FREE: 92 - 102	*/

dcl Checksum.Drive.Allocation		lit '(AEE.GID.PID.Base+103)';	/*	16 words for checksum info		*/

dcl Any.Recording.Happened			lit '(AEE.GID.PID.Base+119)';	/*	nonzero if any record happened	*/

dcl Cue.Menu.Drag.Button			lit '(AEE.GID.PID.Base+120)';	/*	object id #s for the place	*/
dcl Cue.Menu.Sync.Button			lit '(AEE.GID.PID.Base+121)';	/*	mode control section of		*/
dcl Cue.Menu.Chain.Button			lit '(AEE.GID.PID.Base+122)';	/*	the cue directory				*/
dcl Cue.Menu.Real.Button			lit '(AEE.GID.PID.Base+123)';
dcl Cue.Menu.Place.Track.Label	lit '(AEE.GID.PID.Base+124)';
dcl Cue.Menu.Place.Track.Field	lit '(AEE.GID.PID.Base+125)';
dcl Cue.Menu.Drag.Mode.Switch		lit '(AEE.GID.PID.Base+126)';
dcl Cue.Menu.Delete.Button			lit '(AEE.GID.PID.Base+127)';
dcl Cue.Menu.Current.Cues			lit '(AEE.GID.PID.Base+128)';
/*	dcl Cue.Menu.Delete.All.Button fixed;	*/	/*	not used anymore?	*/

/*	Reserve next 10 locations for Dialog Box stuff	*/
/*	each dialog box should define literals for the	*/
/*	objects it uses. The different dialogs will		*/
/*	share PID/GID locations, so only one dialog		*/
/*	box of this sort can be open at a time				*/

dcl Edit.Dialog.Is.Open	lit '(AEE.GID.PID.Base+129)';	/*	set to true when dialog is opened, reset when done	*/

/*	Shuttle Editor EDIT command (CUT,COPY,PASTE...) dialog literals	*/

dcl Edit.Dlg.Label		lit '(AEE.GID.PID.Base+130)';
dcl Edit.Dlg.Mode			lit '(AEE.GID.PID.Base+131)';
dcl Edit.Dlg.Cancel		lit '(AEE.GID.PID.Base+132)';
/*	 NOTE: Shuttle.Displaced.Audio.Reel's id = GID(Edit.Dlg.Cancel)+1	*/
/*	reserve 133-139 for more edit dialog items	*/

dcl Recording.Going.On	lit '(AEE.GID.PID.Base+140)';	/*	true if record panel recording going on	*/
dcl Big.Time.String		lit '(AEE.GID.PID.Base+141)';	/*	9 words reserved for GIANT TIME display stuff	*/

dcl Big.Time.Format		lit '(AEE.GID.PID.Base+150)';	/*	current display format of GIANT TIME display	*/
dcl Saved.Get.Enables	lit '(AEE.GID.PID.Base+151)';	/*	(18 words) saved copy of GET_ENABLE words + 1 extra word	*/

/*	FREE: 169 - 179	*/

/*	Gid/Pid area for Sequence panel	*/

dcl Seq.Panel.Output.Values	lit '(AEE.GID.PID.Base+180)';	/*	displayed output value (16)	*/
dcl Seq.Panel.Tvol.Values		lit '(AEE.GID.PID.Base+196)';	/*	displayed tvol   value (16)	*/

/*	Gid/Pid area for Project Manager	*/

dcl Pmgr.Status.Contents		lit '(AEE.GID.PID.Base+212)';	/*	indicates contents of		*/
																				/*	pmgr status switch (16)		*/
dcl Pmgr.Channel.Contents		lit '(AEE.GID.PID.Base+228)';	/*	indicates contents of		*/
																				/*	pmgr channel switch (16)	*/

/*	Gid/Pid area for Sync panel	*/

dcl Sync.Compute.Event.Time	lit '(AEE.GID.PID.Base+244)';	/*	event time (2 words)			*/

/*	FREE: 246 - 255	*/

/*	SOME GLOBAL CUE LITERALS FOR PLACING CUES		*/
/*	literals to use for values in CUE.PLACE.MODE	*/
	dcl P#Drag			lit '0';
	dcl P#Sync			lit '1';
	dcl P#Chain			lit '2';
	dcl P#Real			lit '3';
/*	literals to use for values in CUE.DRAG.MODE	*/
	dcl D#Place			lit '0';	/*	literals for DRAG PLACE modes	*/
	dcl D#Replace		lit '1';
	dcl D#RepSync		lit '2';
	dcl D#Insert		lit '3';
	dcl D#RepInsert	lit '4';
