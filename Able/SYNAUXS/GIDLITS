/*	:SYNAUXS:GIDLITS  $TITLE  Literal for use with PID/GID routines	*//*Modified:2001/09/02 - TY  - Fixed bug: sav.seq.sw.pos was being paved by sav.max.dur (and vice versa)2000/02/27 - TY  - Made changes to accommodate display of sound file loops1999/04/11 - TY  - Added literals for sequence editor dialog, and for 4.20 user defaults1990/08/27 - PF  - Support all MIDI controllers1989/05/02 - TSS - Merged changes for Optical disk to DTD transfer project1989/05/02 - eeg - added literals to save "paste at" time for cut paste dialog1989/04/24 - SGS - Expanded dynamic area by one sector1988/04/04 - SGS - Shortened DC.Ptr blocks for B-Page and R-Page*/dcl PID.GID.Len			lit '1280';	/*	allow 5 sectors for PID/GID area		*/dcl PID.GID.DynamicLen	lit '512';	/*	2 sectors for dynamic vars				*/dcl PID.GID.StaticStart	lit '512';	/*	2 sectors dynamic, 3 sectors static	*//*	The PID/GID area is divided into 2 parts.  The first part,			*//*	beginning at word 0, is available for use by all screens				*//*	to store values while that screen is active.  Whenever				*//*	a screen starts up, it assumes the 1st 2 sectors are undefined.	*//*	The remaining words, starting at word PID.GID.StaticStart,			*//*	are never trashed.  This area is used to store variables				*//*	which must be preserved throughout all screens. To assign			*//*	a location of the static area, you need to insert a literal			*//*	for that location below.  No literal, no memory!						*////////////////////////////////////////////////////////////////////////////////	SHARED BY SEQUENCE EDITOR, AUDIO EVENT EDITOR, AND LINKSOU/*	these are also used by the click routines in LINKSOU	*/dcl sync.click.mode							lit '(PID.GID.StaticStart+0)';	/*	internal, external or live	*/dcl sync.click.sound							lit '(PID.GID.StaticStart+1)';	/*	0 = sound off, 1 = sound on	*/dcl live.click.track							lit '(PID.GID.StaticStart+2)';	/*	abs trk# of live click track	*/dcl sync.click.format						lit '(PID.GID.StaticStart+3)';	/*	display format	*//*	code words for sync mode switch	*/dcl sync.mode.switch0						lit '(PID.GID.StaticStart+4)';	//	5 words, 4 through 8/*	FREE:	9 through 13	(FOR FUTURE ADDITIONAL SYNC MODES)	*////////////////////////////////////////////////////////////////////////////////	SEQUENCE EDITOR SCREEN//	For saving the state of the non-dialog-specific fields:////	Edit Start	("Cut/Move/Copy Start" when Cut/Paste dialog is active)dcl sav.time1.ms								lit '(PID.GID.StaticStart+	14)';dcl sav.time1.ls								lit '(PID.GID.StaticStart+	15)';//	Edit End		("Cut/Move/Copy End" when Cut/Paste dialog is active)dcl sav.time2.ms								lit '(PID.GID.StaticStart+	16)';dcl sav.time2.ls								lit '(PID.GID.StaticStart+	17)';//	Edit Length	("Paste/Merge/Fill At" when Cut/Paste dialog is active)dcl sav.time3.ms								lit '(PID.GID.StaticStart+	18)';	//	2 words, 18 through 19dcl sav.time.mode								lit '(PID.GID.StaticStart+	20)';dcl sav.mem.ms									lit '(PID.GID.StaticStart+	21)';	//	8 words, 21 through 28dcl sav.mem.ls									lit '(PID.GID.StaticStart+	29)';	//	8 words, 29 through 36dcl sav.cur.dialog							lit '(PID.GID.StaticStart+	37)';dcl dispbits									lit '(PID.GID.StaticStart+	38)';	/*	used to hold button display states	*//*	FREE:	39	*//*	area for sequence editor dialog info to be saved	*//* keep each dialog's literals in order					*///	for BOUNCE dialogdcl sav.bounce.sw.pos						lit '(PID.GID.StaticStart+	40)';dcl sav.bounce.source						lit '(PID.GID.StaticStart+	41)';dcl sav.bounce.dest							lit '(PID.GID.StaticStart+	42)';//	for CHANGE DURATION dialogdcl sav.dur.sw.pos							lit '(PID.GID.StaticStart+	43)';dcl sav.dur.percent							lit '(PID.GID.StaticStart+	44)';dcl sav.dur.set.ms							lit '(PID.GID.StaticStart+	45)';	//	2 words, 45 through 46dcl sav.dur.add.ms							lit '(PID.GID.StaticStart+	47)';	//	2 words, 47 through 48dcl sav.dur.min.ms							lit '(PID.GID.StaticStart+	49)';	//	2 words, 49 through 50dcl sav.dur.max.ms							lit '(PID.GID.StaticStart+	51)';	//	2 words, 51 through 52dcl sav.dur.from.ms							lit '(PID.GID.StaticStart+	53)';	//	2 words, 53 through 54dcl sav.dur.to.ms								lit '(PID.GID.StaticStart+	55)';	//	2 words, 55 through 56//	for CHANGE RTE dialogdcl sav.rte.type.sw.pos						lit '(PID.GID.StaticStart+	57)';dcl sav.rte.mode.sw.pos						lit '(PID.GID.StaticStart+	58)';dcl sav.rte.midi.cntrl						lit '(PID.GID.StaticStart+	59)';dcl sav.rte.percent							lit '(PID.GID.StaticStart+	60)';dcl sav.rte.monopolar.set					lit '(PID.GID.StaticStart+	61)';dcl sav.rte.monopolar.add					lit '(PID.GID.StaticStart+	62)';dcl sav.rte.monopolar.min					lit '(PID.GID.StaticStart+	63)';dcl sav.rte.monopolar.max					lit '(PID.GID.StaticStart+	64)';dcl sav.rte.monopolar.from					lit '(PID.GID.StaticStart+	65)';dcl sav.rte.monopolar.to					lit '(PID.GID.StaticStart+	66)';dcl sav.rte.ptchw.set						lit '(PID.GID.StaticStart+	67)';dcl sav.rte.ptchw.add						lit '(PID.GID.StaticStart+	68)';dcl sav.rte.ptchw.min						lit '(PID.GID.StaticStart+	69)';dcl sav.rte.ptchw.max						lit '(PID.GID.StaticStart+	70)';dcl sav.rte.ptchw.from						lit '(PID.GID.StaticStart+	71)';dcl sav.rte.ptchw.to							lit '(PID.GID.StaticStart+	72)';dcl sav.rte.ribbon.set						lit '(PID.GID.StaticStart+	73)';dcl sav.rte.ribbon.add						lit '(PID.GID.StaticStart+	74)';dcl sav.rte.ribbon.min						lit '(PID.GID.StaticStart+	75)';dcl sav.rte.ribbon.max						lit '(PID.GID.StaticStart+	76)';dcl sav.rte.ribbon.from						lit '(PID.GID.StaticStart+	77)';dcl sav.rte.ribbon.to						lit '(PID.GID.StaticStart+	78)';dcl sav.rte.midi.set							lit '(PID.GID.StaticStart+	79)';dcl sav.rte.midi.add							lit '(PID.GID.StaticStart+	80)';dcl sav.rte.midi.min							lit '(PID.GID.StaticStart+	81)';dcl sav.rte.midi.max							lit '(PID.GID.StaticStart+	82)';dcl sav.rte.midi.from						lit '(PID.GID.StaticStart+	83)';dcl sav.rte.midi.to							lit '(PID.GID.StaticStart+	84)';//	for CHANGE VELOCITIES dialogdcl sav.vel.sw.pos							lit '(PID.GID.StaticStart+	85)';dcl sav.vel.percent							lit '(PID.GID.StaticStart+	86)';dcl sav.vel.set								lit '(PID.GID.StaticStart+	87)';dcl sav.vel.add								lit '(PID.GID.StaticStart+	88)';dcl sav.vel.min								lit '(PID.GID.StaticStart+	89)';dcl sav.vel.max								lit '(PID.GID.StaticStart+	90)';dcl sav.vel.from								lit '(PID.GID.StaticStart+	91)';dcl sav.vel.to									lit '(PID.GID.StaticStart+	92)';//	for CUT/PASTE dialogdcl sav.source.switch						lit '(PID.GID.StaticStart+	93)';dcl sav.to.switch								lit '(PID.GID.StaticStart+	94)';dcl sav.dest.switch							lit '(PID.GID.StaticStart+	95)';dcl sav.fr.switch								lit '(PID.GID.StaticStart+	96)';dcl sav.paste.reps							lit '(PID.GID.StaticStart+	97)';dcl sav.paste.at.ms							lit '(PID.GID.StaticStart+	98)';	//	 2 words,  98 through  99dcl sav.clip.len.ms							lit '(PID.GID.StaticStart+100)';	//	 2 words, 100 through 101dcl sav.silence.len.ms						lit '(PID.GID.StaticStart+102)';	//	 2 words, 102 through 103dcl sav.to.filename							lit '(PID.GID.StaticStart+104)';	//	13 words, 104 through 116	(23-character TREENAME)dcl sav.fr.filename							lit '(PID.GID.StaticStart+117)';	//	13 words, 117 through 129	(23-character TREENAME)//	for FIT TO TIME dialogdcl sav.fit.pct								lit '(PID.GID.StaticStart+130)';dcl sav.fit.cutoff							lit '(PID.GID.StaticStart+131)';dcl sav.fit.dur.switch						lit '(PID.GID.StaticStart+132)';dcl sav.fit.method							lit '(PID.GID.StaticStart+133)';//	for JUSTIFY dialogdcl sav.just.pct								lit '(PID.GID.StaticStart+134)';dcl sav.just.range							lit '(PID.GID.StaticStart+135)';dcl sav.just.offset							lit '(PID.GID.StaticStart+136)';//	for SEQUENCE FILES dialogdcl sav.seq.sw.pos							lit '(PID.GID.StaticStart+137)';dcl sav.seq.treename							lit '(PID.GID.StaticStart+138)';	//	24 words, 138 through 161	(46-character TREENAME)//	for Joint SMT/SKT dialogdcl sav.smt.skt.src.sw.pos					lit '(PID.GID.StaticStart+162)';dcl sav.smt.skt.dst.sw.pos					lit '(PID.GID.StaticStart+163)';dcl sav.smt.skt.src.track					lit '(PID.GID.StaticStart+164)';dcl sav.smt.skt.src.bank					lit '(PID.GID.StaticStart+165)';dcl sav.smt.skt.src.entry					lit '(PID.GID.StaticStart+166)';dcl sav.smt.skt.dst.track					lit '(PID.GID.StaticStart+167)';//	dcl sav.smt.skt.dst.bank					lit '(PID.GID.StaticStart+168)';//	dcl sav.smt.skt.dst.entry					lit '(PID.GID.StaticStart+169)';//	for TRACK SOLOS dialogdcl sav.trk.solos.sw.pos					lit '(PID.GID.StaticStart+170)';//	for TRACK VOLUME dialogdcl sav.trk.vol.sw.pos						lit '(PID.GID.StaticStart+171)';dcl sav.trk.vol.percent						lit '(PID.GID.StaticStart+172)';//	for CHANGE PITCH dialogdcl sav.pitch.mode.sw.pos					lit '(PID.GID.StaticStart+173)';dcl sav.pitch.xpos.from						lit '(PID.GID.StaticStart+174)';dcl sav.pitch.xpos.semitones				lit '(PID.GID.StaticStart+175)';dcl sav.pitch.inv.from						lit '(PID.GID.StaticStart+176)';dcl sav.pitch.inv.to							lit '(PID.GID.StaticStart+177)';	dcl sav.pitch.scale.xa						lit '(PID.GID.StaticStart+178)';	dcl sav.pitch.scale.xb						lit '(PID.GID.StaticStart+179)';	dcl sav.pitch.scale.ya						lit '(PID.GID.StaticStart+180)';	dcl sav.pitch.scale.yb						lit '(PID.GID.StaticStart+181)';	dcl sav.pitch.scale.anchor					lit '(PID.GID.StaticStart+182)';//	for UNWRAP LOOPS dialogdcl sav.unwrap.time.ms						lit '(PID.GID.StaticStart+183)';	//	2 words, 183 through 184/*	FREE:	185 through 189	(FOR SEQUENCE EDITOR SCREEN)	*////////////////////////////////////////////////////////////////////////////////	AUDIO EVENT EDITOR SCREEN/*	for audio event editor presets	*/dcl Record.Mode.Switch.Setting			lit '(PID.GID.StaticStart+190)';dcl Record.Trigger.Switch.Setting		lit '(PID.GID.StaticStart+191)';dcl Record.Rec.Switch.Setting				lit '(PID.GID.StaticStart+192)';dcl Saved.AEE.Time.Format					lit '(PID.GID.StaticStart+193)';dcl Saved.AEE.Cue.In.Time					lit '(PID.GID.StaticStart+194)';	//	2 words, 194 through 195dcl Saved.AEE.Cue.Out.Time					lit '(PID.GID.StaticStart+196)';	//	2 words, 196 through 197dcl AEE.Record.Cue.Name						lit '(PID.GID.StaticStart+198)';	//	17 words, 198 through 214	(32-character cue name)/*	holds current AEE Panel layout	*/dcl AEE.Screen.Layout						lit '(PID.GID.StaticStart+215)';	//	8 words,	215 through 222/*	Format of Layout words:	*//*		Bits 00-04:  # of lines used by panel (0 if unused, else 1-24)	*//*		Bits 05-09:  top row number of panel  (0-23)							*//*		Bits 10-13:  AEE panel id # (0-15)										*//*		Bits 14-15:  reserved														*/dcl Saved.AEE.Panel.Bits					lit '(PID.GID.StaticStart+223)';	/*	used to restore last selected user defined panel layout button	*//*	AEE Cue Menu settings	*/dcl Saved.CM.Format							lit '(PID.GID.StaticStart+224)';dcl Saved.CM.Sort.Switch					lit '(PID.GID.StaticStart+225)';dcl Saved.CM.Function.Switch				lit '(PID.GID.StaticStart+226)';dcl Saved.CM.Playback.Switch				lit '(PID.GID.StaticStart+227)';dcl Saved.CM.Display.Switch				lit '(PID.GID.StaticStart+228)';dcl Saved.CM.Scroll.Bar						lit '(PID.GID.StaticStart+229)';dcl Saved.AEE.Cue.Sync.Time				lit '(PID.GID.StaticStart+230)';	//	2 words, 230 through 231dcl Saved.AEE.Cue.Offs.Time				lit '(PID.GID.StaticStart+232)';	//	2 words, 232 through 233dcl Saved.AEE.Cue.Out.Switch				lit '(PID.GID.StaticStart+234)';dcl Cue.Place.Track							lit '(PID.GID.StaticStart+235)';dcl Cue.Place.Mode							lit '(PID.GID.StaticStart+236)';dcl Cue.Drag.Mode								lit '(PID.GID.StaticStart+237)';dcl Saved.AEE.Cue.Offset.Switch			lit '(PID.GID.StaticStart+238)';dcl Saved.AEE.Shuttle.Coarse.Switch		lit '(PID.GID.StaticStart+239)';dcl Saved.AEE.Shuttle.Fine.Switch		lit '(PID.GID.StaticStart+240)';dcl Saved.AEE.Shuttle.Capt.Switch		lit '(PID.GID.StaticStart+241)';dcl Saved.AEE.Shuttle.Cue.Out.Switch	lit '(PID.GID.StaticStart+242)';dcl Saved.AEE.Shuttle.Edit.Out.Switch	lit '(PID.GID.StaticStart+243)';/*	Defaults for the above switch settings:	*/dcl Coarse.Switch.Default					lit '0';dcl Fine.Switch.Default						lit '1';dcl Capt.Switch.Default						lit '0';dcl Default.CM.Format						lit '2';	/*	3 columns				*/dcl Default.CM.Display.Switch				lit '1';	/*	display current proj	*/dcl Saved.AEE.Edit.In.Time					lit '(PID.GID.StaticStart+244)';	//	2 words, 244 through 245dcl Saved.AEE.Edit.Out.Time				lit '(PID.GID.StaticStart+246)';	//	2 words, 246 through 247dcl AEE.Shuttle.Graphics.Code				lit '(PID.GID.StaticStart+248)';dcl AEE.Sequence.Name.Wlen					lit '16';dcl Cur.Seq.Path.Name.Wlen					lit 'AEE.Sequence.Name.Wlen';dcl AEE.Sequence.Name						lit '(PID.GID.StaticStart+249)';	//	16 words, 249 through 264dcl AEE.Cue.File.Name						lit '(PID.GID.StaticStart+265)';	//	16 words, 265 through 280/*	holds name of recalled sequence	*/dcl Cur.Seq.Path.Name						lit '(PID.GID.StaticStart+281)';	//	16 words, 281 through 296/*	Holds which mode the Opt Xfer panel is in	0 = full width (default); 1 = half width	*/dcl AEE.Opt.Width.Mode						lit '(PID.GID.StaticStart+297)';/*	FREE:	298 through 299	(FOR AUDIO EVENT EDITOR)	*////////////////////////////////////////////////////////////////////////////////	STATIC USER DEFAULTSdcl Default.Click.Rate						lit '(PID.GID.StaticStart+300)';	//	Click Rate								(for null sequence)dcl Default.Speed								lit '(PID.GID.StaticStart+301)';	//	Speed										(for null sequence)dcl Default.MIDI.RTEs						lit '(PID.GID.StaticStart+302)';	//	MIDI RTEs								(for null timbre)dcl Default.VelocitySens					lit '(PID.GID.StaticStart+303)';	//	Velocity Sensitivity & Response	(for null timbre)dcl Default.FDecay							lit '(PID.GID.StaticStart+304)';	//	Final Decay								(for loading sound files)/*	FREE:	305 through 349	*///////////////////////////////////////////////////////////////////////////////*	The following are memory locations that are reserved for display			*//*	control pointers.  Each device has its own DC pointers.  Furthermore,	*//*	there are separate pointers for each format for each device.				*//*	A device's storage block looks like this:											*//*																									*//*	TopIndex    --\              -----------\											*//*	TopOffset     |___Cats Only             |											*//*	CursorIndex   |                         |											*//*	CursorOffset--/                         |											*//*	TopIndex    --\                         |											*//*	TopOffset     |___Cats and Files        |------ Device						*//*	CursorIndex   |                         |											*//*	CursorOffset--/                         |											*//*	TopIndex    --\                         |											*//*	TopOffset     |___Files Only            |											*//*	CursorIndex   |                         |											*//*	CursorOffset--/               ----------/											*//*																									*//*	Pointers are indexed by the (device number-1) (Dev 0 does					*//*	not count) and the format.																*/dcl DC#Base						lit '(PID.GID.StaticStart+350)';dcl DC#NumDevs					lit '(13-1)';	/*	no. of devices possible	*/dcl DC#DevLen					lit '12';		/*	no. of words per device	*/dcl DC#FormatLen				lit '4';			/*	no. of words per format	*/dcl DC#TotalLength			lit 'shl(shr(((DC#NumDevs+1)*DC#DevLen)+1,1),1)';	//	= 156		(NOTE: This must be even)/*	formats	*/dcl DC#CatsOnly				lit '0';dcl DC#FilesAndCats			lit '1';dcl DC#FilesOnly				lit '2';dcl DC#TopIndex				lit '0';	/*	pointer to top leftmost file or cat in display	*/dcl DC#TopOffset				lit '1';dcl DC#CursorIndex			lit '2';	/*	pointer to file or cat associated with cursor	*/dcl DC#CursorOffset			lit '3';/*	FREE:	506 through 509	*////////////////////////////////////////////////////////////////////////////////	SOUNDFILE RECALL SCREENS/*	sound file recall screen states	*/dcl FullScreenMode			lit '(PID.GID.StaticStart+510)';dcl sfr.dirdevice				lit '(PID.GID.StaticStart+511)';dcl sfr.sortinfo				lit '(PID.GID.StaticStart+512)';dcl sfr.functioninfo			lit '(PID.GID.StaticStart+513)';dcl sfr.showinfo				lit '(PID.GID.StaticStart+514)';dcl sfr.itemfilter			lit '(PID.GID.StaticStart+515)';dcl ods.laserformat			lit '(PID.GID.StaticStart+516)';	//	position of optical display format switch on R-page/*	FREE:	517 through 519	(FOR SOUNDFILE RECALL SCREENS)	*//*	memory blocks for the sound file dir screen	*/dcl sfr#MemBase				lit '(PID.GID.StaticStart+520)';dcl sfr#NumDevs				lit '13';	/*	no. devs with mem blocks		*/dcl sfr#NumMems				lit '2';		/*	no. of memory blocks/device	*/dcl sfr#MemLen					lit '4';		/*	no. of words/mem block			*/dcl sfr#MemTotalLength		lit '(sfr#NumDevs * sfr#NumMems * sfr#MemLen)';	//	= 104dcl sfr#MemTopIndex			lit '0';		/*	pointer to top leftmost file or cat in display	*/dcl sfr#MemTopOffset			lit '1';dcl sfr#MemCursorIndex		lit '2';		/*	pointer to file or cat associated with cursor	*/dcl sfr#MemCursorOffset		lit '3';/*	FREE:	624-767  (remember, memory ends at (1280-PID.GID.StaticStart) = 768)	*/