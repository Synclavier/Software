/* :SYNRDCLS:05-BDCLS  $TITLE  External declarations for the modules in 05-butt */

/*
Modified:
2007/02/02 - CJ  - Change NUM.MIDI.TRACKS to MAX.INPUTS = 202
2002/08/10 - TY  - Added Conditionally_Set_Solos dcl
1998/05/15 - TY  - Added FIND.FIRST.NONREST dcl
1991/12/15 - PF  - Added MIDISUST.MODE dcl
1991/04/26 - cj  - Removed some more publics
1991/03/14 - cj  - Removed some publics
1991/02/11 - PF  - added DISPLAY.CLICK.RATE
1990/11/06 - PF  - Add START.MIDI.SUSTAIN and STOP.MIDI.SUSTAIN
1990/10/11 - CJ  - removed unneeded publics for knob, modwheel, etc.
1990/08/27 - PF  - Support all MIDI controllers
1990/06/17 - PF  - Changed argument to DISPLAY.BEAT.NUMBER from beat number
						 to seqeunce time
1989/03/09 - PF  - Increase MAX.INPUTS to 128
1990/01/25 - MWH - Fix "300 msec delay starting cues" bug (from EditView)
1989/07/19 - PF  - Added PATH argument to MIDI.NOTE.OFF and MIDI.NOTE.ON
1989/07/28 - cj  - Removed Display.Enabled.Tracks
1989/07/07 - TSS - Added dcls for Pressure Calibration stuff
1989/07/07 - TSS - ADDED LAST.NOTE.KEY# & LAST.NOTE.VEL DCLS
1989/06/15 - PF  - Sysex dcls for MIDInet - SYSEX.PACKET and SEND.SYSEX.PACKET
1989/06/09 - PF  - Added MIDI.BUF dcl
1989/06/08 - MWH - Process start/stop record protocol packets faster
1989/04/20 - PF  - Added MIDI.NOTE.OFF dcl
1989/03/14 - PF  - Added HELD.STOP.BUTTON,MIDI.SONG.PTR.INFO
1989/01/13 - MWH - Add Auto Punch feature
1988/09/30 - TSS - Added CLAVIER.EMULATION.KNOB.DELTA dcl
1988/09/22 - TSS - Added RESET.KEYBOARD.TIMBRE.CONTROL dcl
1988/06/15 - CJ  - changed name & arguments of smpte generator procedure
1987/12/01 - cj  - added set.sequencer.mark.start
1987/10/13 - EG  - ADDED INFO.BUTTON.PRESS
1987/05/14 - TS  - ADDED SET.TRACK.SOLO.STATE 
1987/04/16 - TS  - ADDED ARG TO TOGGLE.TRACK.SOLO.STATE DCL
1986/11/19 - TS  - ADDED 2 DCLS TO DEBOUNCE INSERT/DELETE OPERATIONS
1986/10/30 - TS  - ADDED MIDI.ECHO.DISABLED & HELD.INSERT.BUTTON & HELD.DELETE.BUTTON DCLS
1986/09/15 - TS  - ADDED HELD.STARTLOOP.BUTTON & HELD.ENDLOOP.BUTTON DCL
1986/07/15 - CJ  - CHANGED DECLARATIONS FOR MIDI.CONTROL.CHANGE, ETC
1986/07/01 - TSS - ADDED DCL FOR STEP.RTE.PATCHING
1986/06/25 - TSS - ADDED DCL FOR FIND.ANY.NOTE
1986/05/16 - TIM - send MIDI Program Changes from Synclavier buttons
1986/05/15 - "official" creation of release-M modules
*/

/* FROM 071-NEWL */
DCL LPN.LOOKUP proc(fixed) external;

DCL (BLINKTABLE) DATA external; /* USED TO LOOK UP BLINKING PARAMETERS - NONE FOR THE MOMENT */

/* FROM 072-NEWI */
DCL NEW.NOTE.STAK  ARRAY EXTERNAL;
DCL NEW.NOTE.KEY#  ARRAY EXTERNAL;
DCL NEW.NOTE.VEL   ARRAY EXTERNAL;
DCL NEW.NOTE.TIME  ARRAY EXTERNAL;
DCL MIDI.RTE.STAK  ARRAY EXTERNAL;
DCL MIDI.RTE.VALUE ARRAY EXTERNAL;
DCL MIDI.RTE.MSB   ARRAY EXTERNAL;
DCL MIDI.RTE.LSB   ARRAY EXTERNAL;

DCL NEW.BUTTON.LIST ARRAY EXTERNAL;
DCL EXT.TRIG.STAK   ARRAY EXTERNAL;

DCL NUM.HELD.KEYS   FIXED EXTERNAL;

DCL DP.DATAS   ARRAY EXTERNAL;
DCL DP.TABLE   DATA  EXTERNAL;

DCL SW1.CHANGES    FIXED EXTERNAL;  /* SET TO 1 WHEN SWITCHDATA STATES HAVE CHANGED */
DCL SW2.CHANGES    FIXED EXTERNAL;  /* SET TO 1 WHEN SWITCHDATA STATES HAVE CHANGED */
DCL SWITCHDATA     ARRAY EXTERNAL;  /* INDIVIDUAL SWITCH STATE BITS */
DCL ANALOG.IN      ARRAY EXTERNAL;  /* ANALOG CONTROLLER VALUES FOR SYNCLAVIER */
DCL LAST.NOTE.TYPE FIXED EXTERNAL;
DCL LAST.NOTE.KEY# FIXED EXTERNAL;
DCL LAST.NOTE.VEL  FIXED EXTERNAL;
DCL TTIME.MIN      FIXED EXTERNAL;  /* TRANSIT TIME REQUIRED TO ACHIEVE MAX VOLUME */
DCL NEWKEY         FIXED EXTERNAL;  /* SET WHEN NEW KEY PRESS DETECTED DURING INTERRUPT */
DCL OLDKCR         FIXED EXTERNAL;
DCL (OLD.SAR)      FIXED EXTERNAL;
DCL BOTH.DISPLAY   FIXED EXTERNAL;  /* TRUE IF BOTH UPPER & LOWER USED FOR SAME MESSAGE */

DCL COMPUTE.SYNC.TTIME.MAP   PROC(FIXED) EXTERNAL; /* COMPUTES A LOOKUP TABLE FOR TRANSIT TIME TO VOLUME */
DCL SCAN.VKP.FOR.NOTES       PROC EXTERNAL;        /* CREATE LIST OF NEW NOTES ON KEYBOARD */
DCL SCAN.ORK.FOR.NOTES       PROC EXTERNAL;        /* CREATE LIST OF NEW NOTES ON KEYBOARD */
DCL SCAN.NEW.VKP.BUTTONS     PROC EXTERNAL; /* CREATE LIST OF BUTTONS CHANGING STATE */
DCL SCAN.NEW.ORK.BUTTONS     PROC EXTERNAL; /* CREATE LIST OF BUTTONS CHANGING STATE */
DCL KBD.INIT                 PROC EXTERNAL;     /* TURN OFF ALL BUTTON PANEL LIGHTS */
DCL SET.DECIMAL.POINT        PROC(FIXED) EXTERNAL; /* UPDATED FOR NEW DISPLAY BOARD - DO NOT SWAP SO TRACK BUTTONS ARE FAST */
DCL CLEAR.DECIMAL.POINT      PROC(FIXED) EXTERNAL; /* DO NOT SWAP - CALLED OFTEN FROM EMIT.NUMBER */
DCL EMIT.NUMBER              PROC(FIXED,FIXED,FIXED,FIXED) EXTERNAL; /* WRITE VALUE TO ALPHA, STARTING AT POS */
DCL EMIT.LARGE.NUMBER        PROC(FIXED,FIXED,FIXED) EXTERNAL; /* EMIT NUMBER UP TO 9,999,999 */
DCL EMIT.STRING              PROC(FIXED, FIXED ARRAY) EXTERNAL;   /* NON-SWAP!! */ /* WRITE STRING TO ALPHA, STARTING AT POS - NOTE - DOES NOT CLEAR DECIMAL POINT */
DCL CLEAR.DISPLAY            PROC EXTERNAL;
DCL CLEAR.UPPER              PROC EXTERNAL;    /* CLEAR THE UPPER LINE OF DISPLAY */
DCL CLEAR.LOWER              PROC EXTERNAL;    /* CLEAR THE LOWER LINE OF DISPLAY */

/* FROM 073-NEWW */
DCL (DISPLAY.EBL)            FIXED EXTERNAL; /* SET TO NONZERO AFTER SIGN ON TO ALLOW ALL DISPLAYS */
DCL (NEW.BEAT.NUMBER)        FIXED EXTERNAL; /* SET TRUE WHEN CHANGED */
DCL (SUPRESS.BEAT.DISPLAY)   FIXED EXTERNAL; /* SET TO TRUE IF SHOULD SUSPEND BEAT DISPLAY */
DCL (BEAT.DISPLAY.TIME)      FIXED EXTERNAL; /* TIME TO RESUME */
DCL LAST.ERR                 FIXED EXTERNAL;
DCL HELD.RTE.BUTTONS         FIXED EXTERNAL;
DCL (NOTES.LEFT.MSB)         FIXED EXTERNAL; /* FOR DISPLAY PURPOSES ONLY  -  MSB */
DCL (NOTES.LEFT.LSB)         FIXED EXTERNAL; /*                            -  LSB */
DCL REMOVE.KBD.ERROR         FIXED EXTERNAL;

DCL DISPLAY.SIGNON         PROC(FIXED) EXTERNAL;   /* DISPLAY SIGN-ON MESSAGE */
DCL DISPLAY.ERR            PROC(FIXED) EXTERNAL;   /* DISPLAY ERR0 - ERR9, ER10 - ER19 */
DCL INFO.PROMPT            PROC        EXTERNAL;   /* RE-DISPLAY INFO PROMPT */
DCL DISPLAY.FRAME.NUMBER   PROC(FIXED) EXTERNAL;   /* DISPLAY A FRAME NUMBER IN WINDOW */
DCL REMOVE.FRAME.NUMBER    PROC        EXTERNAL;   /* REMOVE FRAME NUMBER FROM DISPLAY (UPON PARTIAL BUTTON RELEASE) */
DCL DISPLAY.OUR.DEV        PROC        EXTERNAL;   /* PUT NAME OF DEVICE TO ACCESS IN WINDOW */
DCL REMOVE.OUR.DEV         PROC        EXTERNAL;
DCL DISPLAY.CLICK.RATE     PROC(FIXED) EXTERNAL;
DCL DISPLAY.BEAT.NUMBER    PROC(ARRAY)       EXTERNAL;   /* SPECIAL PROCEDURE FOR BEAT NUMBER */
DCL DISPLAY.TIMBRE.NAME    PROC(FIXED,FIXED) EXTERNAL;   /* PUT TIMBRE NAME ON UPPER OR LOWER DISPLAY - PASS TINFO POINTER, POSITION */
DCL DISPLAY.TIMBRE.RECALL.INFO PROC(FIXED,FIXED,FIXED) EXTERNAL; /* PASS TINFO PTR, NUMBER OF PARTIALS, NUMBER OF FRAMES */
DCL DISPLAY.NUMB.LEFT      PROC              EXTERNAL;   /* DISPLAY # OF NOTES LEFT IN SEQUENCER */
DCL DISPLAY.TRACK.START    PROC(FIXED,FIXED,FIXED,FIXED) EXTERNAL;  /* DISPLAY BEAT # OF FIRST NOTE ON TRACK - PASS FORMAT, PLAY TIME, PLAY TIME CARRIES, CLICK RATE */
DCL REMOVE.TRACK.START.DISPLAY PROC          EXTERNAL;   /* CLEAR TRACK START DISPLAY */
DCL DISPLAY.UNITS          PROC(FIXED)       EXTERNAL;                         /* DISPLAY UNITS WORD */
DCL DISPLAY.PAR.NUM        PROC(FIXED,FIXED,FIXED) EXTERNAL; /* DISPLAY PARAMETER NUMBER */
DCL DISPLAY.LARGE.PAR.NUM  PROC(FIXED,FIXED,FIXED) EXTERNAL; /* DISPLAY (LARGE) PARAMETER NUMBER */
DCL DISPLAY.SIGNED.PAR.NUM PROC(FIXED,FIXED) EXTERNAL;    /* DISPLAY A SIGNED SHORT BYTE (STEREO CENTER, HARMONIC ADJUST) */
DCL DISPLAY.VIBRATO        PROC(FIXED) EXTERNAL; /* DISPLAY A VIBRATO WAVE TYPE */
DCL DISPLAY.STEREO         PROC(FIXED) EXTERNAL; /* DISPLAY A STEREO MODE */
DCL KBD.ERROR              PROC(FIXED) EXTERNAL;                  /* PRESENT ERROR ON KEYBOARD NOTE */
DCL DISPLAY.MORE.NOTES     PROC(FIXED) EXTERNAL;
DCL DISK.MESSAGE           PROC(FIXED) EXTERNAL; /* FOR NEW PANEL - DISPLAY # OF DISK SECTORS WRITTEN */
DCL DISPLAY.SMODE          PROC(FIXED) EXTERNAL;           /* DISPLAY SMPTE MODE IN LOWER */
DCL DISPLAY.EXT.SYNC.MODE  PROC(FIXED) EXTERNAL; /* DISPLAYS EXT SYNC MODE */
DCL PRESENT.TPAN.DISPLAY   PROC		   EXTERNAL; /* PRESENT TRACK PAN BUTTON DISPLAY */

DCL PRESSURE.CALIBRATION.MODE                 FIXED EXTERNAL;
DCL PRESSURE.CALIBRATION.KEY                  FIXED EXTERNAL;
DCL PRESSURE.CALIBRATION.VALUE                FIXED EXTERNAL;
DCL PRESSURE.CALIBRATION.DISPLAY PROC (FIXED,FIXED) EXTERNAL;

/* FROM 150-BUTT */
DCL (NEW.GDISPLAY)      FIXED EXTERNAL; /* SET TRUE WHEN BUTTON CHANGES SO GUITAR PANEL WILL BE UPDATED */
DCL (HELD.PSEL.BUTTONS) FIXED EXTERNAL;              /* BITS FOR PARTIAL BUTTONS THAT ARE HELD */
DCL (TB.ENABLED)        FIXED EXTERNAL;          /* SET TRUE IF TONE BEND ACTIVE */

DCL (NUM.OF.HELD.TRACK.BUTTONS) FIXED EXTERNAL; /* NUMBER OF CURRENTLY HELD TRACK BUTTONS */
DCL (HELD.TRINF.BUTTON)         FIXED EXTERNAL; /* TRACK INFO BUTTON HELD (ROUTING, VOLUME) */
DCL (HELD.INSERT.BUTTON)        FIXED EXTERNAL;
DCL (HELD.DELETE.BUTTON)        FIXED EXTERNAL;
DCL (TROUT.TRK#)                FIXED EXTERNAL; /* BUTTON # (0 TO NUM.TRACK.BUTTONS-1) OR (-1) FOR KBD */

DCL (HGS)                     FIXED EXTERNAL;  /* 0 = 1-12,  1 = 13-24,  2=25-36 (NEW PANEL ONLY) */
DCL (SCALE.ADJUST.IS.ACTIVE)  FIXED EXTERNAL;

DCL PRESENT.RTE.DISPLAY  FIXED EXTERNAL;
DCL RTE.DISPLAY.STATE    FIXED EXTERNAL;
DCL TRACK.FIRST.TIME.MSB FIXED EXTERNAL; /* GLOBAL OUTPUTS OF FIND.FIRST.NOTE    */
DCL TRACK.FIRST.TIME.LSB FIXED EXTERNAL; /* ONLY VALID IF FIND.FIRST.NOTE        */
DCL TRACK.FIRST.SEC      FIXED EXTERNAL; /* RETURNS A 1. SEC & WRD POINT TO      */
DCL TRACK.FIRST.WRD      FIXED EXTERNAL; /* THE FIRST SOUNDING NOTE ON THE TRACK */
DCL TRACK.FIRST.KEYN     FIXED EXTERNAL;
DCL (ANY.TRACKING)       FIXED EXTERNAL;            /* TRACKING BITS FOR FILTERS */
DCL MISC.TOGGLE.BITS      DATA EXTERNAL;
DCL (ACTIVE.PARMS)       ARRAY EXTERNAL;              /* ALLOW 20 ACTIVE PARAMETERS */
DCL (IN.BLINK.MODE)      FIXED EXTERNAL;

DCL stack.on.panel                   proc(FIXED) EXTERNAL; /* store info on panel stack - used by upper routine to simulate certain switches */
DCL OFF                              PROC(FIXED) EXTERNAL; /* SET LPN TO BLINK MODE */
DCL ON                               PROC(FIXED) EXTERNAL; /* SET LPN TO ON MODE */
DCL BLINK                            PROC(FIXED) EXTERNAL;                         /* SET LPN TO BLINK MODE */
DCL ASSIGN                           PROC(FIXED,FIXED) EXTERNAL; /* ASSIGN OFF, ON, BLINKING TO LPN */
DCL ASSIGN.MULTIPLE                  PROC(FIXED,FIXED,FIXED) EXTERNAL; /* ASSIGN SAME STATE TO MANY BUTTONS */
DCL TBUT.MAPPING                     PROC(FIXED) EXTERNAL;        /* RETURNS LOGICAL FIXED # CORRESPONDING TO BUTTON # */
DCL PUSH.TBUT.SOLOS                  PROC EXTERNAL;      /* SAVES CURRENT TRK SOLO STATE IN LITTLE PDL */
DCL POP.TBUT.SOLOS                   PROC EXTERNAL;      /* RESTORES CURRENT TRK SOLO STATE FROM PDL */
DCL DISPLAY.PARTIAL.BUTTONS          PROC EXTERNAL;
DCL DISPLAY.TONE.BEND.BUTTON         PROC EXTERNAL;      /* SET TONE.BEND LIGHT IN SCALE.RESET.BUTTON */
DCL TURN.OFF.PARAMS                  PROC EXTERNAL;      /* CALL ROUTINE TO TURN OFF ALL PARAMETER LITES */
DCL FLICKER.PARAMETER.BUTTONS        PROC EXTERNAL;      /* CALL TO QUICKLY LIGHT ALL PARAMETER BUTTONS */
DCL TURN.ON.PARAMS                   PROC EXTERNAL;      /* LIGHT THOSE REQUIRED */
DCL DISPLAY.PARAMETER.BUTTONS        PROC EXTERNAL;      /* SET PARAMETER BUTTONS */
DCL DISPLAY.BOUNCE.AND.RECD.JUST.BUTTONS PROC EXTERNAL;  /* SET APPROPRIATE STATE OF BOUNCE BUTTON AND JUSTIFIED RECORDING BUTTON */
DCL DISPLAY.BMODE                    PROC EXTERNAL;      /* DISPLAY CORRECT BMODE BUTTON (new panel only) */
DCL DISPLAY.TIMBRE.RECALL.BUTTONS    PROC EXTERNAL;      /* SET CORRECT TIMBRE RECALL BUTTONS (CHANGES WITH SKT/SMT) */
DCL DISPLAY.BANK.BUTTONS             PROC EXTERNAL;
DCL DISPLAY.SEQUENCER.RECALL.BUTTONS PROC EXTERNAL;
DCL FIND.FIRST.HELD.TRACK.BUTTON     PROC EXTERNAL;
DCL DISPLAY.SEQUENCER.STATUS         PROC EXTERNAL;     /* SETS UP CORRECT SEQUENCER DISPLAY LIGHTS */
DCL DISPLAY.ACTIVE.TRACKS            PROC EXTERNAL;     /* AN INFO MODE FUNCTION TO SHOW WHICH TRKS HAVE NOTES */
DCL DISPLAY.TRACK.BUTTONS            PROC EXTERNAL;     /* SET UP CORRECT TRACK BUTTONS - DO NOT SWAP THIS SO TRACK BUTTONS ARE FAST */
DCL DISPLAY.SMT.SKT.BUTTONS          PROC EXTERNAL;     /* DISPLAY CORRECT SMT, SKT BUTTONS */
DCL DISPLAY.HGS                      PROC EXTERNAL;     /* DISPLAY APPROPRIATE HARMONIC GROUP SELECT */
DCL COMPUTE.RTE.BUTTONS              PROC EXTERNAL;     /* COMPUTE PROPER RTE DISPLAY FROM INTERNAL VARIABLES */
DCL FIND.FIRST.NONREST					 PROC(FIXED) RETURNS(FIXED) EXTERNAL; /* FIND TIME & PTRS FOR FIRST NON-REST NOTE ON SPECIFIED TRACK */
DCL FIND.FIRST.NOTE                  PROC(FIXED) RETURNS(FIXED) EXTERNAL; /* FIND TIME, PTRS & KEY# FOR FIRST SOUNDING NOTE ON SPECIFIED TRACK */
DCL COMPUTE.START.TIME.DISPLAY       PROC(FIXED) EXTERNAL; /* COMPUTE DISPLAY OF STARTING TIME OF TRACK - GIVEN ABS. TRACK# (0-255) */
DCL COMPUTE.TOGGLE.DISPLAY           PROC EXTERNAL;        /* CALL TO SET UP TOGGLE BUTTONS ON PANEL (PORT,VIBRATO,FILTERS,REPEAT/ARPEG) */
DCL COMPUTE.DSEL.BUTTON              PROC EXTERNAL;
DCL panel.init                       proc EXTERNAL;        /* initialize panel and set up PBN.LOOKUP table */

/* FROM 155-SCN1 */
DCL TOGGLE FIXED EXTERNAL;    /* FLAG TO SCAN BUTTONS EVERY OTHER TIME TO REDUCE BOUNCING & COMPUTE LOAD */

/* VARIABLES USED FOR BOTH KEYBOARDS     */

DCL RAW.KNOB.BASE                FIXED EXTERNAL;  /* NEUTRAL POSITION OF KNOB               */
DCL KNOB.DELTA                   FIXED EXTERNAL; /* CURRENT POSITION OF KNOB FROM BASE */
DCL CLAVIER.EMULATION.KNOB.DELTA FIXED EXTERNAL; /* PICK UP POTENTIAL SETTING */
DCL RIBBON.RELEASE               FIXED EXTERNAL; /* SET TRUE FOR RIBBON RELEASE         */
DCL RIBBON.AMOUNT                FIXED EXTERNAL; /* AMOUNT OF DEFLECTION BEFORE RELEASE */

DCL (NEW.GVOL,NEW.GRTE) FIXED EXTERNAL;        /* SET TRUE IF CHANGE IN GUITAR INPUT KNOB */

DCL RTE.CHANGEBITS		FIXED EXTERNAL;		  /* BITS SET FOR ENTRIES OF RTE.CHANGETABLE */
DCL RTE.CHANGETABLE     ARRAY EXTERNAL;        /* BITS ARE SET FOR CHANNELS WITH CHANGING RTE'S FOR RECORDING */
DCL RTE.CHANGES         ARRAY EXTERNAL;        /* BITS ARE SET FOR CHANGING RTE'S WHICH NEED TO BE RECORDED */

DCL (NEW.INFO)          FIXED EXTERNAL;        /* SET TRUE ON CHANGE OF ANY RTE DATA */
DCL (NEW.TOGGLES)       FIXED EXTERNAL;        /* ON CHANGE OF FOOT SWITCH/TOGGLES */
DCL SWITCHBITS          ARRAY EXTERNAL;        /* PACKED BITS OF FOOT SWITCH BITS */

DCL AMOUNT              FIXED EXTERNAL;        /* AMOUNT TO CHANGE KNOB PARAMETER (SEE 'UPDATE') */

DCL NEW.PM              FIXED EXTERNAL;        /* SET TRUE IF NEW PITCH/MOD WHEEL */
DCL NEW.ORK             FIXED EXTERNAL;        /* TRUE TO HANDLE ORK IN VK BUILD  */
DCL MIDI.ECHO.DISABLED  FIXED EXTERNAL;        /* 0 TO DISALLOW ECHO OF MIDI NOTES, 1 TO ALLOW */

DCL RESTORE.POWER   PROC EXTERNAL;             /* RE-MEASURE INPUT ITEMS ON POWER RESTORE */
DCL SCANDATA        PROC EXTERNAL;             /* SCANS ALL INPUT DEVICES */

/* FROM 157-SCN2 */
DCL PANEL.RESCAN PROC EXTERNAL;     /* PROCEDURE TO ALWAYS RESCAN */

/* FROM 171-PRF1 */
DCL RESET.INFO          FIXED EXTERNAL; /* HOLDS BUTTON # OF BUTTON PRESSED TWICE (FOR RESETTING VARIABLES) */

DCL SPLIT.KEYBOARD      FIXED EXTERNAL; /* TRUE IF SPLIT ACTIVE */
DCL SPLIT.KBD.LOC       FIXED EXTERNAL; /* DEFINES LOCATION OF KEYBOARD SPLIT */
DCL TRACK.STATE         FIXED EXTERNAL; /* INDICATES WHAT TO DO IF TRACK BUTTON PRESSED */
DCL TRACK.ONE           FIXED EXTERNAL; /* INDICATES SOURCE TRACK FOR BOUNCE */
DCL PARTIAL.STATE       FIXED EXTERNAL; /* USED FOR BOUNCING PARTIALS */
DCL PARTIAL.ONE         FIXED EXTERNAL; /* INDICATES FIRST PARTIAL */

DCL (TB.POS,VB.POS)     FIXED EXTERNAL; /* TONE BEND/VIBRATO DEPTH FROM MASTER KNOB */

DCL (NUM.HELD.BUTTONS)  FIXED EXTERNAL;  /* COUNTS HELD BUTTON FOR ALGORITHM */

DCL (PRESET.KBD.ENVELOPE)        FIXED EXTERNAL;
DCL (NEW.FRAME.COEFF)            FIXED EXTERNAL;
DCL (KBD.VAL)                    FIXED EXTERNAL;
DCL (NEW.KBD.ENV)                FIXED EXTERNAL;
DCL (MIDI.INPUT.ENABLED)			FIXED EXTERNAL;
DCL (POLY.TIMBRE.MIDI.CONTROL)   FIXED EXTERNAL;
DCL (OMS.MIDI.ENABLED)   			FIXED EXTERNAL;
DCL (KEYBOARD.TIMBRE.CONTROL)    FIXED EXTERNAL;

DCL (HELD.KBD.ENV.BUTTONS)       FIXED EXTERNAL;
DCL (HELD.SCALE.ADJUST.BUTTONS)  FIXED EXTERNAL;
DCL (HELD.TNAME.BUTTON)          FIXED EXTERNAL;
DCL (HELD.VIBR.BUTTON)           FIXED EXTERNAL;
DCL (HELD.SMPTE.BUTTON)          FIXED EXTERNAL;
DCL (HELD.EXT.BUTTON)            FIXED EXTERNAL;
DCL (HELD.PVOL.BUTTON)           FIXED EXTERNAL;
DCL (HELD.PTUN.BUTTON)           FIXED EXTERNAL;
DCL (HELD.CLIK.BUTTON)           FIXED EXTERNAL;
DCL (HELD.SPEED.BUTTON)          FIXED EXTERNAL;
DCL (HELD.RATE.BUTTON)           FIXED EXTERNAL;
DCL (HELD.MARK.BUTTON)           FIXED EXTERNAL;
DCL (HELD.STARTLOOP.BUTTON)      FIXED EXTERNAL;
DCL (HELD.ENDLOOP.BUTTON)        FIXED EXTERNAL;
DCL (HELD.MIDI.BUTTON)           FIXED EXTERNAL;

DCL ABORT.BOUNCE.SMT.SKT PROC EXTERNAL; 			 /* STOP THESE FUNCTIONS MIDSTREAM IF REQUIRED */
DCL CLEAR.ERAS.BUTTON	 PROC EXTERNAL;				 /* DIM ERASE LIGHT AND CLEAR ERASE DISPLAY	   */

DCL SKT.SPLT.SUB         PROC(FIXED) EXTERNAL;       /* PROCESS SKT/SPLT */
DCL STEP.RTE.PATCHING    PROC(FIXED,FIXED) EXTERNAL; /* CHANGES RTE PATCHING ON KBD TIMBRE */
DCL CLEAR.PARAMETERS     PROC EXTERNAL;              /* PROCEDURE TO ERASE PARAMETERS - DO NOT SWAP SO TRACK BUTTONS ARE FAST */
DCL TOGGLE.BLINK         PROC EXTERNAL;              /* PROCEDURE TO TOGGLE BLINKING MODE */
DCL DISPLAY.LENGTH.LOOP  PROC EXTERNAL;              /* CALL IF POLY PATCH LIST PARTIAL IS SELECTED */
DCL PARTIAL.BUTTON       PROC(FIXED,FIXED) EXTERNAL; /* PROCESS PARTIAL SELECT BUTTON */
DCL SELECT.PARTIAL       PROC(FIXED) EXTERNAL;       /* ACTIVE A SELECTED PARTIAL ONLY - CALLED FROM TDS */
DCL TOGGLE.SMPTE         PROC EXTERNAL;              /* TOGGLE SMPTE MODE        */
dcl Display.Track.Format.Change	proc	EXTERNAL;
DCL PARAMETER.BUTTON     PROC(FIXED,FIXED) EXTERNAL; /* PROCESS PARAMETER BUTTON */
DCL SELECT.TIMBRE.FRAME  proc(FIXED,FIXED) EXTERNAL; /* activates an active timbre frame */     
DCL SELECT.PARAMETER     PROC(FIXED) EXTERNAL;       /* ACTIVATE A PARAMETER SELECTION FROM TDS */
DCL SMPTE.GENERATOR      PROC(FIXED) EXTERNAL;       /* SMPTE GENERATOR VIA SOFTWARE */
DCL INFO.BUTTON.PRESS    PROC EXTERNAL;
DCL RESET.KEYBOARD.TIMBRE.CONTROL PROC(FIXED) EXTERNAL; /* RESTORES NORMAL KEYBOARD TIMBRE MODE */

/* FROM 172-PRF2 */
DCL (LAST.FF.REWIND.PRESS)      FIXED EXTERNAL; /* ABS TIME WHEN FF/REWIND BUTTON WAS LAST PRESSED */
DCL (HELD.STOP.BUTTON)          FIXED EXTERNAL; /* SET TO 1 IF STOP         BUTTON PRESSED */
DCL (HELD.REWIND.BUTTON)        FIXED EXTERNAL; /* SET TO 1 IF REWIND       BUTTON PRESSED */
DCL (HELD.FF.BUTTON)            FIXED EXTERNAL; /* SET TO 1 IF FAST FORWARD BUTTON PRESSED */
DCL HELD.SCALE.ADJUST.BUTTON    FIXED EXTERNAL;
DCL (INSERT.DELETE.LOCKED)      FIXED EXTERNAL; /* SET TO 1 TO LOCK OUT SUBSEQUENT INSERT/DELETES */
DCL (INSERT.DELETE.UNLOCK.TIME) FIXED EXTERNAL; /* TIME AT WHICH TO TURN OFF LOCKOUT */

DCL COMPUTE.NEAREST.BEAT.TIME PROC (ARRAY) EXTERNAL; /* ROUNDS PLAY.TIME.MSB & PLAY.TIME.LSB TO NEAREST BEAT TIME */

DCL TAKE.PRE.ROLL.TIME        PROC EXTERNAL;  /* SNAPSHOT THE CURRENT SEQUENCER TIME */
DCL TAKE.RECORD.TIME          PROC (FIXED) EXTERNAL;  /* SNAPSHOT THE CURRENT SEQUENCER TIME */
DCL START.SEQUENCER           PROC EXTERNAL;  /* START SEQUENCER PLAYING */
DCL STOP.SEQUENCER            PROC EXTERNAL;
DCL CLEAR.LOOP.PARMS          PROC EXTERNAL;
DCL SET.LOOP.START.TIME       PROC (FIXED,FIXED) EXTERNAL; /* SET LOOP.START TO PASSED TIME & SELECT OVERALL LOOP START PARM */
DCL CONTINUE.SEQUENCER        PROC EXTERNAL;
DCL CONTINUE.SEQ.WITH.PRE.ROLL PROC (FIXED) EXTERNAL;
DCL FAST.FORWARD.SEQUENCER    PROC EXTERNAL;
DCL REWIND.SEQUENCER          PROC EXTERNAL;
DCL SET.SEQUENCER.MARK.START.POINT PROC (FIXED, FIXED, FIXED) EXTERNAL; /* MSW, LSW, CODE (0=NO LOCATE. 1 = LOCATE IF PLAY = 0.  2 = STOP PLAY AND LOCATE */
DCL CONTROL.SEQUENCER         PROC EXTERNAL; /* PROCESSES SEQUENCER.CONTROL.REG */

DCL SAFE.READY.TOGGLES  FIXED EXTERNAL;

/* FROM 173-PRF3 */
DCL HELD.KCV.BUTTON           FIXED EXTERNAL;              /* USED FOR SETTING KCV */
DCL KCV.TRACK                 FIXED EXTERNAL;              /* FOR KCV OUTPUT       */
DCL DISPLAY.TRACK.INFO        FIXED EXTERNAL; /* TIME TO DO FIXED DISPLAY */
DCL DISPLAY.TRACK.#           FIXED EXTERNAL; /* ABS. FIXED # TO DISPLAY  */
DCL INFO.MODE.UPDATE.TIME     FIXED EXTERNAL; /* USED TO TIME TRACK BUTTON INFO MODE DISPLAY REFRESHES */
DCL MIPGM.ON.SKT.CONTROL      FIXED EXTERNAL; /* ON/OFF FLAG FOR MIDI SKT FEATURE */

DCL FLICKER.PARAMS  FIXED EXTERNAL;  /* SET TRUE TO START FLICKER */
DCL PERFORM.FLICKER FIXED EXTERNAL;  /* SET TRUE BELOW TO PERFORM PARAMETER FLICKERING */
DCL (BANK.WRITE,ENTRY.WRITE) FIXED EXTERNAL;
DCL (KBD.SPECIAL)    FIXED EXTERNAL;   /* SET TRUE IF SPECIAL CHECK IN KEYBOARD SCAN IS REQUIRED (DONE THIS WAY FOR SPEED) */

DCL PROCESS.RECORD.BUTTON     PROC EXTERNAL;
DCL PROCESS.PUNCH.BUTTON      PROC EXTERNAL;
DCL PROCESS.ERASE.BUTTON      PROC EXTERNAL;
DCL SEQUENCER.BUTTON          PROC(FIXED,FIXED) EXTERNAL;       /* ROUTINE TO PROCESS SEQUENCER BUTTONS */

DCL CLEAR.TRACK.SOLO.STATES			PROC								EXTERNAL;	/* CLEAR ALL SOLOS							*/
dcl Conditionally_Set_Solos			proc (fixed)					external;
DCL TOGGLE.TRACK.SOLO.STATE			PROC (FIXED)					EXTERNAL;	/* TOGGLE SOLO STATE OF TRACK OR GROUP */
DCL SET.TRACK.SOLO.STATE				PROC (FIXED, FIXED, FIXED)	EXTERNAL;	/* SET THE SOLO STATE OF A TRACK RANGE	*/

DCL TRACK.BUTTON  PROC(FIXED,FIXED) EXTERNAL;            /* PROCESS PRESS/RELEASE OF TRACK BUTTON */
DCL RTE.BUTTON    PROC(FIXED,FIXED) EXTERNAL;            /* PRESS OF RTE BUTTON */
DCL BANK.BUTTON   PROC(FIXED,FIXED,FIXED) EXTERNAL;      /* PROCESS BANK BUTTON PRESS */
DCL TIMBRE.BUTTON PROC(FIXED,FIXED,FIXED) EXTERNAL;
DCL SEQUENCER.RECALL.BUTTON PROC(FIXED,FIXED,FIXED) EXTERNAL;
DCL MISC.BUTTON PROC(FIXED,FIXED,FIXED) EXTERNAL;        /* MISCELLANEOUS BUTONS */
DCL NEW.BUTTON  PROC EXTERNAL;
DCL PERFORM     PROC EXTERNAL; /* PERFORM A PANEL-DIRECTED COMMAND */

/* FROM 174-PRF4 */
DCL NUM.ENABLED.TRKS   FIXED EXTERNAL;
DCL MIDISUST.MODE      FIXED EXTERNAL;

/* FROM 181-UPD1 */
DCL DISPLAY.UPDATED.PARAMETER PROC(FIXED,FIXED,FIXED) EXTERNAL; /* UPDATE THE DISPLAY - PASS PARAMETER INDEX NUMBER, THE NEW VALUE */
DCL ADD.TO.SMPTE  PROC(FIXED) EXTERNAL;
DCL ADD.TO.TEMPO  PROC(FIXED) EXTERNAL;
DCL ADD.TO.LENGTH PROC(FIXED) EXTERNAL;            /* PASS POINTER OFF OF PTPTR */
DCL SLIDE.TRACKS  PROC(FIXED) EXTERNAL;  /* PROCEDURE TO MOVE TRACK TIME */
DCL FRAME.SLIDE   PROC EXTERNAL;      

/* FROM 182-UPD2 */
DCL (XXXXCH)          FIXED EXTERNAL;    /* CHANNEL # FOR XXXX PROGRAM              */

DCL MAJOR.UPDATE PROC EXTERNAL;

DCL STORE.SYNCL.PARAM PROC (FIXED,FIXED,FIXED,FIXED) EXTERNAL; /* PASS PARTIAL # (0,1,2,3),  FRAME # (0-X), LPN# (!!), VALUE */
DCL (TDS.VALUE)       FIXED EXTERNAL;    /* VALUE     FROM TDS FOR STORE */

/* FROM 142-MIDI */
DCL MIDI.OVERRUN      FIXED EXTERNAL;     /* 1 IF DETECT AN OVERRUN ON INPUT, ELSE 0 */
DCL LAST.MIDI.STATUS  ARRAY EXTERNAL; /* VALUE OF LAST MIDI STATUS SENT ON EACH OUTPUT */
DCL MIDI.BUF          ARRAY EXTERNAL; /* BUFFER FOR MIDI EVENTS TO NETWORK */
DCL MIDI.CROUT        ARRAY EXTERNAL; /* MIDI TO SYNCLAVIER ROUTING ARRAY FOR CONTINUOUS CONTROLLERS */
DCL MIDI.SROUT        ARRAY EXTERNAL; /* MIDI TO SYNCLAVIER ROUTING ARRAY FOR SWITCHES */

DCL MIDI.SYNC.OUT     FIXED external; /* MODE OF OPERATION FOR MIDI SYNC OUTPUT (0->DON'T SEND BYTES, 1-32 SEND TO OUTPUT #1-32) */
DCL MIDI.SYNC.IS.TC   FIXED external; /* TRUE IF MIDI SYNC OUTPUT FORMAT IS MIDI TC */
DCL MIDI.TC.VAL       ARRAY external; /* HRS, MIN, SEC, FRA, BIT TIME CODE VALUE */
DCL MIDI.TC.NUM		  FIXED external; /* HOLDS RATIO OF MILLISECONDS PER QUARTER-FRAME */
DCL MIDI.TC.DEN		  FIXED external;
DCL MIDI.TC.NEXT.CODE FIXED external; /* COUNTS QUARTER FRAME MESSAGE TYPE */
DCL DISPLAY.MTC		  FIXED external; /* SET WHEN SHOULD SHOW MTC IN LOWER WINDOW WHILST PLAYING */
DCL NEW.MTC.VAL       FIXED external; /* SET WHEN NEW MTC VALUE AVAILABLE FOR DISPLAY */
DCL MIDI.INPUT.CHAN   FIXED external; /* INPUT CHAN TO LISTEN TO.  */

/* DECLARATIONS FOR MIDI CONTINUOUS CONTROLLERS AND SWITCHES */
DCL MIDI.PRESSURE             ARRAY EXTERNAL; /* MIDI CHANNEL PRESSURE */
DCL MIDI.KEY.PRESS            FIXED EXTERNAL; /* MIDI INDIVIDUAL PRESSURE */
DCL MIDI.ANALOG.IN            FIXED EXTERNAL; /* MIDI CONTINUOUS CONTROLLER VALUES */
DCL MIDI.SWITCHDATA           FIXED EXTERNAL; /* MIDI SWITCH VALUES */

DCL MIDI.ANALOG.CHANGEBITS		FIXED EXTERNAL; /* BITS SET FOR ENTRIES OF MIDI.ANALOG.CHANGETABLE */
DCL MIDI.ANALOG.CHANGETABLE   ARRAY EXTERNAL; /* BITS FOR INPUT CHANNELS WITH CHANGING CONTIUOUS CONTROLLERS */
DCL MIDI.ANALOG.CHANGES       ARRAY EXTERNAL; /* BITS FOR CONTINUOUS CONTROLLERS WHICH HAVE CHANGED */
DCL MIDI.SWITCH.CHANGEBITS		FIXED EXTERNAL; /* BITS SET FOR ENTRIES OF MIDI.SWITCH.CHANGETABLE */
DCL MIDI.SWITCH.CHANGETABLE   ARRAY EXTERNAL; /* BITS FOR INPUT CHANNELS WITH CHANGING SWITCHES */
DCL MIDI.SWITCH.CHANGES       ARRAY EXTERNAL; /* BITS FOR SWITCHES WHICH HAVE CHANGED */

DCL MISSED.MIDI.CLOCKS        FIXED EXTERNAL; /* COUNTS UNPROCESSED MIDI TIMING CLOCKS */
DCL TIMING.CLOCK.ENABLE       FIXED EXTERNAL; /* 1 ENABLES ACCUMULATION OF TIMING CLOCKS RECEIVED */
DCL NEW.PROGRAM.STAK          ARRAY EXTERNAL; /* LIST FOR NEW PROGRAM CHANGES OF SIZE "LIST.SIZE" */
DCL MIDI.MAPPING              ARRAY EXTERNAL; /* MIDI CHANNELS TO TRACK ROUTING */
DCL SYSEX.BUF                 FIXED EXTERNAL; /* POINTER TO 16 SECTOR CIRCULAR BUFFER IN XMEM */
DCL SYSEX.WRITE.PTR           FIXED EXTERNAL; /* NEXT LOCATION TO WRITE TO */
DCL SYSEX.READ.PTR            FIXED EXTERNAL; /* NEXT LOCATION TO READ FROM */
DCL SYSEX.PACKET              FIXED EXTERNAL; /* POINTER TO PACKET RESERVED FOR SYSEX OUTPUT */
DCL MIDI.TRACK.RTES           FIXED EXTERNAL; /* POINTER TO XMEM STORAGE FOR 128 MIDI CONTROLLERS FOR ALL TRACKS */

/* $SUBTITLE  ROUTINES TO SET UP AND CLEAR CONTROLLER ROUTING INFO */
DCL (#MOUT,#MSTA) FIXED EXTERNAL; /* TEMPS USED BELOW FOR ALL PROCS EXCEPT MIDI.NOTE.ON */
DCL MIDI.SEQ.STATUS FIXED EXTERNAL; /* CURRENT STATE OF MIDI SEQUENCERS (0=STOPPED, 1=PLAYING) */
DCL MIDI.SONG.PTR.INFO FIXED EXTERNAL;

DCL CLEAR.MIDI.OUT.CONTROLLERS  PROC(FIXED) EXTERNAL; /* REMOVES MIDI CONTROLLER ROUTINGS */
DCL SET.MIDI.OUT.CONTROLLERS    PROC(FIXED) EXTERNAL; /* SETS UP ROUTINGS FOR DX7 */
DCL INIT.MIDI.ROUTINGS          PROC EXTERNAL;
DCL INIT.MIDI.RTE.AREA          PROC EXTERNAL;
DCL COMPUTE.MIDI.VELMAPS        PROC EXTERNAL; /* COMPUTES NEW VELOCITY TO VOLUME TABLE */
DCL INIT.MIDI.FIFO              PROC(FIXED,FIXED) EXTERNAL; /* INIT THE DESIRED FIFO */
DCL INIT.MIDI.SUBSYSTEMS        PROC EXTERNAL; /* INIT ROUTINE FOR MIDI SUBSYSTEMS */
DCL CLEANUP.MIDI.PRESSURE       PROC(FIXED) EXTERNAL; /* TURNS OFF PRESSURE IN CURRENT MODE */
DCL ALL.MIDI.NOTES.OFF          PROC EXTERNAL;        /* TURNS OFF ALL NOTES ON ALL SUBSYSTEMS AND MIDI CHANNELS */
DCL SCAN.MIDI                   PROC EXTERNAL;  /* PROCESSES MIDI BYTES */
DCL PROCESS.MIDI.AUX.BYTE		  PROC(FIXED) EXTERNAL; /* PROCESS MIDI SYNC BYTES ONLY */
DCL MIDI.CONTROL.CHANGE         PROC(FIXED,FIXED) EXTERNAL; /* SENDS MIDI CONTROL CHANGE */
DCL REAL.MIDI.CONTROL.CHANGE    PROC(FIXED,FIXED) EXTERNAL; /* SENDS MIDI CONTROL CHANGE */
DCL MIDI.PITCH.WHEEL            PROC(FIXED) EXTERNAL;       /* SENDS MIDI PITCH WHEEL UPDATE */
DCL MIDI.CHANNEL.PRESSURE       PROC(FIXED) EXTERNAL;       /* SENDS MIDI CHANNEL PRESSURE UPDATE */
DCL MIDI.MAP.KEY                PROC(FIXED) EXTERNAL;       /* MAP MIDI KEY FOR OUTPUT XPOS */
DCL MIDI.INDIVIDUAL.PRESSURE    PROC(FIXED,FIXED            ) EXTERNAL; /* SENDS MIDI INDIVID. PRESSURE UPDATE */
DCL MIDI.NOTE.OFF               PROC(FIXED,FIXED,FIXED      ) EXTERNAL; /* SENDS MIDI NOTE OFF EVENT */
DCL MIDI.NOTE.ON                PROC(FIXED,FIXED,FIXED,FIXED) EXTERNAL; /* SENDS MIDI NOTE ON EVENT */
DCL SEND.MIDI.START             PROC EXTERNAL;
DCL SEND.MIDI.CONTINUE    PROC EXTERNAL;
DCL SEND.MIDI.STOP        PROC EXTERNAL;
DCL MIDI.SONG.POS.PTR     PROC(FIXED,FIXED) EXTERNAL; 	/* TELLS MIDI DEVICES TO GO TO DESIRED BEAT */
DCL MIDI.FULL.MODE.CODE   DATA EXTERNAL;			  	/* maps sm.mode encoding to bit			*/
DCL MIDI.FULL.FRAME		  PROC(FIXED, FIXED) EXTERNAL;	/* creates midi full frame message		*/
DCL BROADCAST.MTC         PROC EXTERNAL;				/* BROADCAST CUR POSITION OVER MIDI 	*/
DCL PREP.FOR.MTC.OUTPUT   PROC (FIXED, FIXED, FIXED) EXTERNAL;	/* set up real time variables			*/
DCL MIDI.PROGRAM.CHANGE   PROC(FIXED) EXTERNAL; /* TELLS MIDI DEVICES TO GOTO NEW TIMBRE */
DCL CHECK.MIDI.EFFECTS    PROC        EXTERNAL; /* CHECK MIDI EFFECTS FOR UPDATE */
DCL CHECK.MIDI.RTES       PROC        EXTERNAL; /* CHECK MIDI RTES FOR UPDATE */
DCL CHECK.ALL.MIDI.TRACKS PROC        EXTERNAL; /* CHECK ALL TRACKS ON STARTUPT  */
DCL CHECK.ALL.MIDI.RTES   PROC        EXTERNAL; /* CHECK ALL MIDI RTE TRACKS ON STARTUP */
DCL START.MIDI.SUSTAIN    PROC        EXTERNAL; /* CHECK ALL TRACKS FOR CURRENT SUSTAIN STATE AT START PLAY */
DCL STOP.MIDI.SUSTAIN     PROC        EXTERNAL; /* CHECK ALL TRACKS FOR CURRENT SUSTAIN STATE AT STOP PLAY */
DCL SEND.SYSEX.PACKET     PROC        EXTERNAL; /* SENDS A PACKET OF SYSEX TO MIDINET */
DCL SEND.SYSEX            PROC(FIXED) EXTERNAL; /* SENDS A BYTE OF SYSTEM EXCLUSIVE DATA */
DCL LOCATE.MIDI.SLAVES    PROC EXTERNAL;		/* LOCATE MIDI SLAVE DEVICES  */

/* FROM 400-MISC */

DCL DO.RTE.DISPLAY              PROC EXTERNAL;  /* DO RTE DISPLAY IN SEVERAL LOOPS FOR SPEED */
DCL IS.BUTTON.SOLOED            PROC(FIXED) EXTERNAL; /* TRUE IF TRACK CONNECTED TO BUTTON IS SOLOED */

