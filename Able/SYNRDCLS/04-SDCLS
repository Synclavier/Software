/* 04-SDCLS  $TITLE  MODULE '04-SEQ' EXTERNAL VARIABLE AND PROCEDURE DECLARATIONS   Modified:   08/24/91 - PF  - Added TIMED.INFO.NOTES   01/19/89 - MWH - Add Auto Punch feature   09/28/88 - CJ - ADDED SEQUENCER MATCH VARIABLES FOR VITC SCROLLING   04/14/88 - PF - ADDED MULTI RECORD STUFF   01/27/88 - EG - ADDED IGNORE LOOPS EXTERNAL   12/23/87 - MWH - Merge SYN-NMP MIDI bug fixes with N-Final plus AEE and POLY   09/03/87 - MWH - FIX MIDI BUG: NOTES NOW SOUND EVEN IF KEYBOARD UNPLUGGED   11/14/86 - TS - ADDED ARG TO BOUNCE.DOWN & ADDED OK.TO.COPY.TIMBRE DCL   11/13/86 - TS - MADE INIT.TRACK.HEAD.FOR.PLAY PUBLIC FOR EDIT MODULE   11/5/86 - TS - MADE ADJUST.SEQUENCER.PTRS PUBLIC   10/28/86 - eg,ts - added allocate.first.nls   10/07/86 - eeg - added isa.rest.note   10/1/86 - TS - MADE MARK.BUTTON.VAL INTO 32-BIT VARS (VALM,VALL)   9/11/86 - EG,CJ - MARK BUTTON PUBLIC DECLARATIONS   9/10/86 - eeg - added isa.rte.note   8/15/86 - CJ - FIXED CSEM/FDECAY BUG   8/07/86 - EEG - added transpose.tracks   8/04/86 - TSS - ADDED INSERT.REST.RECORD DCL   7/24/86 - tss - removed insert.debug dcl   7/11/86 - CJ,TS - ADDED KBD.PHOTO   7/08/86 - TSS - ADDED DCLS FOR STORE.#.INFO & LOAD.#.INFO, ADD 2 ARGS TO CREATE.ILP.ON.TRACK   7/08/86 - eeg - added set.clock.case   7/07/86 - eeg - added isa.ilp   6/28/86 - cj - argument changes for remove.note   6/20/86 - CJ - MORE 1 MSEC SMPTE ITEMS   6/17/86 - TSS - Removed lots of unnecessary dcls   6/15/86 - CJ - ADDED FIRST.PLAY.TIME.ACU   5/15/86 - "official" creation of release-M modules*//*********** EXTERNAL DECLARATIONS FOR '131-MAP' ***********/DCL REMAPPED.TIME.MSB      FIXED EXTERNAL;DCL REMAPPED.TIME.LSB      FIXED EXTERNAL;DCL REMAPPED.DUR.MSB       FIXED EXTERNAL;DCL REMAPPED.DUR.LSB       FIXED EXTERNAL;DCL REMAP.WITH.LIVE.CLICK  PROC (FIXED,FIXED,FIXED,FIXED,FIXED) EXTERNAL; /* CONVERTS TIMES USING LIVE CLICK TRACKS *//*********** EXTERNAL DECLARATIONS FOR '160-SEQ0' ***********/DCL LOOP.TIME.IS.AT.0              FIXED              EXTERNAL; /* INDICATES PRESET LOOP TIMES ON FIRST NOTE RECORDED */DCL SET.CLOCK.CASE                 PROC               EXTERNAL;DCL COMPUTE.NEXT.MIDI.LIMIT        PROC (ARRAY,ARRAY) EXTERNAL;DCL RESYNC.TIME.BASE               PROC               EXTERNAL; /* RESETS EXT CLOCK ACCUMULATOR FOR PROPER SYNC */DCL RESYNC.TO.MIDI                 PROC               EXTERNAL; /* ADJUSTS SEQ TIME BASE FOR MISSED MIDI REAL-TIME CLOCK BYTES */DCL LOOP.JUSTIFY                   PROC               EXTERNAL; /* JUSTIFIES A SAMPLED LOOP POINT */DCL FORWARD.MERGE.INTO.EVENT.QUEUE PROC (FIXED)       EXTERNAL; /* SORTS TRK INTO EVENT QUEUE IF MOVING FORWARD */DCL LOOP.SAMPLE                    PROC               EXTERNAL; /* TAKES SNAP SHOT OF CURRENT SEQUENCER POINTERS */DCL KBD.PHOTO                      PROC (FIXED,FIXED) EXTERNAL; /* SAMPLED LOOP INFO ON KBD NOTE        */DCL HANDLE.LOOP.JUMP               PROC (FIXED,FIXED) EXTERNAL; /* HANDLES LOOP BACK AT LOOP BOUNDARIES */DCL REBUILD.EVENT.QUEUE            PROC               EXTERNAL;DCL INCREMENT.NUM.NOTES            PROC EXTERNAL; /* ASSUMES #PTR IS VALID */DCL DECREMENT.NUM.NOTES            PROC EXTERNAL; /* USE TO DEC NUMBER OF NOTES ON A TRACK *//*********** EXTERNAL DECLARATIONS FOR '161-SEQ1' ***********//* GLOBALS USED BY SEVERAL MAJOR SEQUENCER ROUTINES:      *//*    MAKE USE OF THESE TO AVOID EXTRA VARS, AND TO       *//*    REDUCE PROCEDURE CALL OVERHEAD.                     *//*    THESE VARS SHOULD GENERALLY NOT BE USED AS TEMPS IN *//*    ROUTINES, UNLESS YOU PLAN TO PASS THE INFO TO OTHER *//*    PROCEDURES.  BE ESPECIALLY CAREFUL THAT THE VARS    *//*    HOLD THE CORRECT VALUES WHEN RETURNING FROM PROCS.  *//*    BEWARE OF ROUTINES WHICH ASSUME THE VARS WILL NOT   *//*    ALTERED BY OTHER PROCEDURE CALLS.                   */DCL (#TRK)            FIXED EXTERNAL; /* ABS TRK NUMBER ACTION IS TO TAKE PLACE ON */DCL (#PTR)            FIXED EXTERNAL; /* ABS PTR TO TRACK HEAD */DCL (#NMSB,#NLSB)     FIXED EXTERNAL; /* NEXT TIME CORRESPONDING TO PTR */DCL (#LMSB,#LLSB)     FIXED EXTERNAL; /* LAST TIME CORRESPONDING TO PTR */DCL (#WRD,#SEC)       FIXED EXTERNAL; /* RELATIVE PTR INTO NAH AREA AT WHICH ACTION OCCURS */DCL (#ANYF,#ANYR)     FIXED EXTERNAL; /* ANY REV & FOR FOR THIS POINT   */DCL (#W1,#W2,#W3,#W4) FIXED EXTERNAL; /* 4 WORDS TO HOLD A NOTE RECORD */DCL (#MSB,#LSB)       FIXED EXTERNAL; /* GENERAL 32-BIT VALUE TO PASS OR RETURN */DCL (#RMSB)           FIXED EXTERNAL; /* HANDY TEMP TO HOLD REAL TIME OF */DCL (#RLSB)           FIXED EXTERNAL; /* NOTE (CORRESPONDS TO #NMSB,LSB) */DCL CONT.HELD            FIXED               EXTERNAL; /* TRUE WHEN CONTINUE BUTTON BEING HELD */DCL IGNORE.LOOPS         BOOLEAN             EXTERNAL; /* IF TRUE, ILP'S ARE IGNORED IN SCAN.SEQUENCER.NOTES */DCL STORE.#.INFO              PROC (FIXED)        EXTERNAL; /* COPIES FROM # VARS INTO TRK HEAD */DCL LOAD.#.INFO               PROC (FIXED)        EXTERNAL; /* COPIES FROM TRK HEAD INTO # VARS - MAKE SURE #PTR IS SET BEFORE CALLING */DCL LOAD.SEQ.GLOBALS          PROC(FIXED)         EXTERNAL;DCL STORE.NOTE.INFO           PROC                EXTERNAL;DCL LOOK.UP.NOTE.INFO         PROC                EXTERNAL; /* LOOK UP 4 NOTE WORDSD */DCL ISA.REST.NOTE             PROC                EXTERNAL;DCL ISA.RTE.NOTE              PROC                EXTERNAL;DCL ISA.ILP.NOTE              PROC                EXTERNAL;DCL ISA.NORMAL.OR.ILP.NOTE    PROC RETURNS(FIXED) EXTERNAL;DCL BACKUP.TO.PRIOR.NOTE      PROC RETURNS(FIXED) EXTERNAL; /* BACKS UP GLOBALS TO PRIOR NOTE */DCL BACKUP.TO.PRIOR.REAL.NOTE PROC RETURNS(FIXED) EXTERNAL; /* BACKS UP GLOBALS TO PRIOR NOTE */DCL ADVANCE.TO.NEXT.NOTE      PROC RETURNS(FIXED) EXTERNAL; /* STEPS GLOBALS TO NEXT NOTE */DCL ADVANCE.TO.NEXT.REAL.NOTE PROC RETURNS(FIXED) EXTERNAL; /* STEPS GLOBALS TO NEXT NOTE */DCL SCAN.SEQUENCER.NOTES      PROC (FIXED,FIXED)  EXTERNAL; /* PROCESS NOTES FROM SEQUENCER */DCL ADVANCE.SEQUENCER         PROC (FIXED,FIXED)  EXTERNAL; /* STEP SEQUENCE FORWARD TO DESIRED TIME */DCL BACKUP.SEQUENCER.SUBROUTINE PROC (FIXED,FIXED,FIXED)  EXTERNAL; /* REWINDS SEQUENCER IN NON-REAL TIME */DCL BACKUP.SEQUENCER            PROC (FIXED,FIXED)        EXTERNAL; /* REWINDS SEQUENCER IN NON-REAL TIME */DCL START.UP.NOTES.IN.MIDDLE  PROC                EXTERNAL;/*********** EXTERNAL DECLARATIONS FOR '162-SEQ2' ***********/DCL OVERLAY.STATUS                     FIXED        EXTERNAL; /* SET TO 1 IF IN OVERLAY MODE */DCL NOTES.SKIPPED                      FIXED        EXTERNAL; /* NOTES LEFT TO PLAY IN OVERLAY MODE */DCL MARK.BUTTON.VALM                   FIXED        EXTERNAL; /* MARK BUTTON VALUE AT PLAY.INITIALIZE CALL */DCL MARK.BUTTON.VALL                   FIXED        EXTERNAL; /* MARK BUTTON VALUE AT PLAY.INITIALIZE CALL */DCL MARK.CLICK.RATE                    FIXED        EXTERNAL; /* CLICK RATE DURING MARK BUTTON COMPUTATION */DCL MARK.CLICK.MODE                    FIXED        EXTERNAL;DCL TIME.DELTA                         FIXED        EXTERNAL; /* USED TO JUSTIFY REAL TIME EFFECTS TO JUSTIFIED NOTE */DCL FIRST.PLAY.TIME.MSB                FIXED        EXTERNAL; /* 32-BIT TICK COUNT CORRESPONDING */DCL FIRST.PLAY.TIME.LSB                FIXED        EXTERNAL; /* TO TIME OF FIRST EVENT ON TRACK */DCL FIRST.PLAY.TIME.ACU                FIXED        EXTERNAL;DCL STM.RECORD.ACTIVE                  FIXED        EXTERNAL;DCL FORCE.MIDI.EFFECTS                 FIXED        EXTERNAL;DCL INIT.TRACK.HEAD.FOR.PLAY          PROC (FIXED)  EXTERNAL; /* INITS TRACK HEADER INFO FOR PLAY START */DCL PLAY.INITIALIZE                    PROC         EXTERNAL; /* PROCEDURE TO SET UP VARIABLES FOR PLAYING */DCL START.TIME.BASE                    PROC         EXTERNAL; /* SETS TIME.BASE.MODE TO ENABLE TIME ADVANCING */DCL STOP.TIME.BASE                     PROC         EXTERNAL; /* SETS TIME.BASE.MODE TO DISABLE TIME ADVANCING */DCL START.PLAY                         PROC         EXTERNAL; /* PROCEDURE TO START PLAYING - CALLED ONLY WHEN PLAY=0 */DCL STOP.PLAY                          PROC         EXTERNAL; /* PROCEDURE TO CLEAN UP AT END OF PLAYING */DCL START.MOVING.FORWARD               PROC         EXTERNAL; /* START SEQUENCER FAST FORWARDING SLOWLY */DCL START.MOVING.BACKWARDS             PROC         EXTERNAL; /* START SEQUENCER REWINDING SLOWLY */DCL STOP.MOVE                          PROC         EXTERNAL; /* PROCEDURE TO STOP MOVEMENT - RETURN TO FORWARD PLAY */DCL START.RECORD                       PROC         EXTERNAL; /* SELECT TRACK, COPY PARAMETERS, UPDATE MEMORY SEMAPHORES */DCL STOP.RECORD                        PROC         EXTERNAL; /* PROCEDURE TO STOP RECORDING */DCL STOP.RECD.MOVE.PLAY                PROC         EXTERNAL; /* PROCEDURE TO STOP SEQUENCER */DCL STOP.RECD.MOVE.PLAY.XPOS.CONT.ERAS PROC         EXTERNAL; /* STOP SEQUENCER & CLEAN UP OPTIONS */DCL BACK.UP.100.MSEC                   PROC         EXTERNAL; /* GIVE THE SEQUENCER ROOM TO GET GOING */DCL PRESET.PLAY.TIME                   PROC (FIXED) EXTERNAL; /* STARTS SEQUENCER RUNNING */DCL OK.TO.COPY.TIMBRE                  PROC (FIXED,FIXED) RETURNS(FIXED) EXTERNAL; /* COMPARES TIMBRES ON SOURCE AND DEST TRKS */DCL UPDATE.MIDI                        FIXED        EXTERNAL;/*********** EXTERNAL DECLARATIONS FOR '163-SEQ3' ***********/DCL ALLOCATE.NAH.BLOCK    PROC                     RETURNS(FIXED) EXTERNAL;DCL DEALLOCATE.NAH.BLOCK  PROC (FIXED)                            EXTERNAL;DCL ALLOCATE.FIRST.NLS    PROC                     RETURNS(FIXED) EXTERNAL;DCL ALLOCATE.NEXT.NLS     PROC (FIXED)             RETURNS(FIXED) EXTERNAL;DCL ALLOCATE.TRK.HEADER   PROC (FIXED)             RETURNS(FIXED) EXTERNAL; /* ALLOCATES AND INITS NAH BLOCK FOR TRK HEAD */DCL ADJUST.SEQUENCER.PTRS PROC (FIXED,FIXED)                      EXTERNAL;DCL INSERT.REST.RECORD    PROC (FIXED)             RETURNS(FIXED) EXTERNAL; /* INSERT REST RECORD */DCL INSERT.NOTE.RECORD    PROC (FIXED,FIXED)       RETURNS(FIXED) EXTERNAL; /* INSERT NOTE RECORD */DCL APPEND.NOTE.DURING.PLAY PROC(FIXED,FIXED)      RETURNS(FIXED) EXTERNAL;DCL REMOVE.NOTE.RECORD    PROC                                    EXTERNAL; /* DELETES NOTE */DCL REMOVE.ILP.FROM.TRACK PROC (FIXED)                            EXTERNAL; /* GET RID OF ILP ON TRK POINTED TO BY PTR */DCL CREATE.ILP.ON.TRACK   PROC (FIXED,FIXED,FIXED,FIXED,FIXED) RETURNS(FIXED) EXTERNAL; /* PUTS AN ILP ON A TRACK *//*********** EXTERNAL DECLARATIONS FOR '164-SEQ4' ***********/DCL DISPLAY.PAR         PROC               EXTERNAL; /* PROCEDURE TO DISPLAY TIMBRE INFO */DCL SEQ.INIT            PROC               EXTERNAL; /* INITIALIZE THE SEQUENCER (ERASE FUNCTION) - ALSO CALLED DURING PROGRAM INITIALIZATION */DCL SETUP.SQ            PROC               EXTERNAL; /* INITIALIZE SEQUENCER VARIABLES - USED AFTER SEQUENCE RECALL */DCL TRY.TO.READ.SEQ     PROC (FIXED,FIXED) EXTERNAL; /* READ SEQUENCE, GIVEN DEVICE AND SECTOR */DCL STORE.SEQUENCE.INFO PROC               EXTERNAL; /* STORE GLOBAL INFO FOR SEQUENCE STORE */DCL WRITE.SEQUENCE      PROC (FIXED,FIXED) EXTERNAL; /* WRITE SEQUENCE TO SECTOR OF DISK.  THIS ROUTINE ASSUMES COMPACTED MEMORY. */dcl UndoFile              data external;dcl UndoTree              data external;dcl Tmp.UndoFile          data external;dcl UNDO.SEQUENCE.CHANGES proc external;dcl SAVE.UNDOSEQ          proc external;DCL SAVE.SEQUENCE       PROC (ARRAY, FIXED, FIXED) RETURNS(FIXED) EXTERNAL; DCL INITIALCSEM         FIXED              EXTERNAL; /* CSEM COUNTER             *//*********** EXTERNAL DECLARATIONS FOR '165-SEQ5' ***********/DCL CONVERT.OLD.SEQUENCE PROC (FIXED,FIXED,FIXED,FIXED) RETURNS(FIXED) EXTERNAL; /* CONVERTS PRE-RELEASE M SEQS TO REL M FORMAT *//*********** EXTERNAL DECLARATIONS FOR '190-NEW0' ***********/DCL RETRY.QUE				FIXED                       EXTERNAL; /* HOLDS QUE FOR NOTES TO RETRY NOW (FAILED LAST TIME FOR NO CHANNELS) */DCL MIDI.TO.GTR				FIXED                       EXTERNAL; /* CONVERSION FLAG FOR MIDI TO GUITAR NOTE RECORDS */DCL TRANSPOSE.TRACKS        PROC (FIXED)                EXTERNAL;DCL COMPUTE.KBD.PITCH       PROC (FIXED) RETURNS(FIXED) EXTERNAL; /* COMPUTE PITCH VALUE FROM KEY NUMBER 0-127 */DCL COMPUTE.PATCH.XPOS      PROC (FIXED) RETURNS(FIXED) EXTERNAL; /* COMPUTE PITCH TRANSPOSITION VALUE FROM KEY# FOR SOUND FILE PATCHES */DCL CLEAR.TRIGGERED.NOTES   PROC                        EXTERNAL; /* CLEAR NOTES TRIGGERED FROM EXTERNAL SYNC */DCL CLEAR.ALL.NOTES         PROC                        EXTERNAL; /* CLEAR ALL NOTES FROM THE CLAV.PTR(0) ARRAY SO NONE WILL CONTINUE TO SOUND */DCL CLEAR.POLY.TIMBRE.NOTES PROC (FIXED)                EXTERNAL; /* CLEAR ALL NOTES FROM THE CLAV.PTR(PASSED CHANNEL#) ARRAY SO NONE WILL CONTINUE TO SOUND */DCL SCANKBD                 PROC                        EXTERNAL; /* KEYBOARD SCANNING ROUTINE *//*********** EXTERNAL DECLARATIONS FOR '191-NEW1' ***********/DCL TRIGGER.INFO.NOTES FIXED EXTERNAL;DCL TIMED.INFO.NOTES   FIXED EXTERNAL;DCL INFO.NOTE.TIMER    ARRAY EXTERNAL;DCL INFO.NOTE.DURATION ARRAY EXTERNAL;DCL INFO.TIMER.LAST    FIXED EXTERNAL;DCL PLAY.SEQ.NOTE     PROC (FIXED,FIXED,FIXED,FIXED,FIXED) RETURNS(FIXED) EXTERNAL; /* QUEUES UP A NOTE ONTO SEQLIST */DCL NEW.SEQ.MATCH.W1 FIXED external;DCL NEW.SEQ.MATCH.W2 FIXED external;DCL NEW.SEQ.MATCH.W3 FIXED external;DCL NEW.SEQ.MATCH.W4 FIXED external;DCL STORE.E.TIME      PROC         EXTERNAL; /* SAVES ENDING TIME FOR NOTES DURING RECORD */DCL INFO.NOTE.TRIGGER PROC (FIXED) EXTERNAL; /* TRIGGERS SEQUENCER NOTE DURING INFO MODE */DCL STOP.INFO.NOTE    PROC (FIXED) EXTERNAL; /* STOP INFO NOTE TRIGGER - PASS ABS TRK # */