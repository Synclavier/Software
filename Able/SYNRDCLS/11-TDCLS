/*	:SYNRDCLS:11-TDCLS  $TITLE  External declarations for 11-TIMB

Modified:
1999/10/15 - TY  - Added TDS.PATCH.STR and BUILD.TDS.PATCH.STR()
1992/01/12 - PF  - Made FIND.USABLE.DEST and CHECK.FOR.REDUNDANT.TIMBRE public
1991/06/19 - PF  - Add ADD.POLY.EVENT.TO.LIST for RAM Event editing
1987/12/18 - MWH - Merge poly updates with N-Final plus AEE sources
1987/08/20 - MWH - Merge with other release-N edits
1987/07/16 - MWH - Add POLY.TOGGLE
1986/06/09 - TSS - Deleted CHECK.TIMBRE declaration
1986/05/15 -     - "official" creation of release-M modules
*/


/*	FROM 137-COMP	*/
DCL NOTEADD						FIXED							EXTERNAL;	/*	MUST DECLARE THIS IN ORDER	*/
DCL NOTENUM						FIXED							EXTERNAL;	/*	TO MATCH PARTIAL BLOCK		*/
DCL NOTEINC						FIXED							EXTERNAL;	/*	ORDER FOR FASTER WRITES		*/
DCL POLY.FREQ.TABLE.PTR		FIXED							EXTERNAL;	/*	XMEM PTR TO FREQ LOOKUP TABLE FOR POLY NOTES	*/

DCL COMPUTE.OSYN.FREQ		PROC(FIXED,FIXED)			EXTERNAL;	/*	PASS INTERNAL KEY # FOR TABLE SELECTION	*/
DCL COMPUTE.MSYN.FREQ		PROC(FIXED)					EXTERNAL;	/*	COMPUTE INFO FOR SAMPLING SYSTEM	*/
DCL COMPUTE.PSYN.FREQ		PROC(FIXED)					EXTERNAL;	/*	PASS FREQ NUMBER		*/
DCL COMPUTE.POLY.HZ.INFO	PROC(FIXED,FIXED,FIXED)	EXTERNAL;	/*	PASS ABS TRACK #, KEY#, PARTIAL #	*/

/*	FROM 138-PRE1	*/
DCL  SOLOED.PARTIALS			FIXED			EXTERNAL;	/*	BITS FOR SOLOED PARTIALS	*/
DCL (LP.CUT,HP.CUT)			FIXED			EXTERNAL;
DCL (BP.CUT,BP.WID)			FIXED			EXTERNAL;

DCL COMPUTE.ENV.PARAMS.SUB	PROC(FIXED)	EXTERNAL;	/*	PRECOMPUTE ENVELOPE PARAMETERS	*/
DCL COMPUTE.VOLUME.LEVELS	PROC			EXTERNAL;
DCL COMPUTE.ARLIST			PROC			EXTERNAL;
DCL COMPUTE.MISC.INFO		PROC			EXTERNAL;	/*	PRECOMPUTE MISC INFO (HOPEFULLY QUICKLY!!)	*/
DCL COMPUTE.ENV.PARAMS		PROC(FIXED)	EXTERNAL;	/*	REDUCE UNNECESSARY SWAP TIME IF POSSIBLE	*/

/*	FROM 139-PRE2	*/
DCL SAMPLED.LOOKUP		DATA					EXTERNAL;
DCL CONTINUOUS.LOOKUP	DATA					EXTERNAL;
DCL SPECIAL.LOOKUP		DATA					EXTERNAL;
DCL MEMORIZE.RTE			FIXED					EXTERNAL;	/*	SET TO RECORD VELOCITY	*/

DCL T.AR						ARRAY					EXTERNAL;
DCL PMASK					DATA					EXTERNAL;

DCL LOG1000					PROC(FIXED)			EXTERNAL;	/*	VAL IS 1000 = 1.000   *** NOTE  NOT CALLED FROM REAL-TIME CODE	*/
DCL LOG4400					PROC(FIXED)			EXTERNAL;	/*	SAME AS LOG1000 ONLY 4400=1.000	*/
DCL COMPUTE.LOGS			PROC(FIXED)			EXTERNAL;	/*	PROCEDURE TO COMPUTE LOG DATA FOR SPECIFIED TIMBRE	*/
DCL EXPAND.OLD.RTE		PROC(FIXED,ARRAY)	EXTERNAL;	/*	EXPAND OLD FORMAT RTE'S FOR PROCESSING BY NEW CODE	*/
DCL COMPUTE.RBITS			PROC(FIXED)			EXTERNAL;	/*	COMPUTES REAL TIME EFFECTS FOR SPECIFIED TIMBRE	*/
DCL COMPUTE.ACTIVE.TRKS	PROC					EXTERNAL;	/*	CALL THIS PROCEDURE TO SET UP WORDS	*/

/*	FROM 160-TMB0	*/
DCL (BOUNCE.PTR)				FIXED								EXTERNAL;	/*	IN CASE BOUNCING FRAMES	*/
DCL (SPECIAL.BOUNCE)			FIXED								EXTERNAL;
DCL (RESET.FILTERS)			FIXED								EXTERNAL;	/*	SET TRUE IF SHOULD RESET FILTERS	*/
DCL (LENGTH.OVERFLOW)		FIXED								EXTERNAL;	/*	SET TRUE IF OUT OF MEMORY IN MOVE.TIMBRE.TO	*/
DCL (SUPPRESS.ERR)			FIXED								EXTERNAL;	/*	SUPPRESS ERR11 SOMETIMES	*/

DCL MATCHING.TIMBRE			PROC(FIXED)	RETURNS(FIXED)	EXTERNAL;	/*	RETURNS TIMBRE # OF DUPLICATE TIMBRE OR PAR.NUMT IF NO DUPLICATE EXISTS IN PAR.AREA	*/
DCL COMPUTE.USAGE.KEY#		PROC(FIXED)						EXTERNAL;	/*	COMPUTES USAGE KEY # FOR TIMBRE	*/
DCL EX.ROOMFOR					PROC(FIXED)						EXTERNAL;	/*	EXTERNAL MEMORY - CHECK FOR SPACE IN TIMBRE AREA	*/
DCL CREATE.TIMBRE.FRAME		PROC								EXTERNAL;	/*	PROCEDURE TO CREATE TIMBRE FRAME	*/
DCL DELETE.TIMBRE.FRAME		PROC								EXTERNAL;	/*	PROCEDURE TO DELETE TIMBRE FRAME	*/
DCL CREATE.PATCH.FRAME		PROC(FIXED,FIXED,FIXED)    EXTERNAL;	/*	PROCEDURE TO CREATE PATCH LIST FRAME	*/
DCL CREATE.PATCH.PARTIAL	PROC(FIXED,ARRAY)				EXTERNAL;	/*	PROCEDURE TO CREATE PATCH LIST PARTIAL	*/
DCL EXPAND.PATCH.PARTIAL	PROC(FIXED,FIXED,FIXED)    EXTERNAL;	/*	PROCEDURE TO EXPAND PATCH LIST PARTIAL	*/
DCL DELETE.PATCH.FRAME		PROC(FIXED,FIXED)				EXTERNAL;	/*	PROCEDURE TO DELETE A PATCH FRAME	*/
DCL CREATE.PINFO.FRAME		PROC(FIXED)						EXTERNAL;	/*	PROCEDURE TO CREATE OPTIONAL PINFO BLOCK	*/
DCL CREATE.TINFO.FRAME		PROC								EXTERNAL;	/*	PROCEDURE TO CREATE OPTIONAL TINFO BLOCK	*/
DCL STORE.NEW.TIMBRE.NAME	PROC(ARRAY)						EXTERNAL;	/*	STORE NEW NAME OF KEYBOARD TIMBRE	*/
DCL BOUNCE.PARTIAL			PROC(FIXED,FIXED)				EXTERNAL;	/*	PASS PARTIAL NUMBERS	*/
DCL MOVE.TIMBRE.TO			PROC(FIXED,FIXED,FIXED)		EXTERNAL;	/*	SPECIFY MEMORY POINTER (UPPER, LOWER), TIMBRE #	*/
DCL COPY.KBD.TIMBRES			PROC(FIXED,FIXED)				EXTERNAL;
DCL ERASE.TIMBRE				PROC(FIXED)						EXTERNAL;	/*	ERASE TIMBRE FROM TIMBRE LIST	*/
dcl ERASE.KEYBOARD.TIMBRE	proc								external;	/*	puts null timbre in TIMBRE #0	*/

/*	FROM 161-TMB1	*/
DCL BANK.DEV					FIXED	EXTERNAL;	/*	GLOBAL VAR FOR DEVICE OF CURRENT BANK	*/
DCL BANK.SEC					FIXED	EXTERNAL;	/*	GLOBAL VAR FOR BANK SECTOR		*/
DCL OUR.BANK.STR				FIXED	EXTERNAL;	/*	GLOBAL VAR FOR BANK STRIDE		*/
DCL BANK.MAX					FIXED	EXTERNAL;	/*	NUMBER OF BANKS AVAILABLE		*/
DCL PAT.FORMAT					FIXED	EXTERNAL;	/*	TRUE IF .PATDATA FILE			*/
DCL TDS.LINE#					FIXED	EXTERNAL;	/*	LINE # FROM ASSIGN SCREEN		*/
DCL TDS.PATCH.STR				ARRAY	EXTERNAL;	//	The 14-character patch assignment string

DCL BUILD.TDS.PATCH.STR		PROC										EXTERNAL;	//	Builds the 14-character patch assignment string
DCL GET.NAME.FROM.PARTIAL  PROC(FIXED)                      EXTERNAL;   // Extracts FNBUF and LNBUF from a patch partial frame
DCL CONVERT.SFM.TIMBRES		PROC(FIXED,FIXED,FIXED)				EXTERNAL;	/*	CONVERTS OLD SFM TIMBRE FORMAT TO NEW FORMAT	*/
DCL FIND.NEW.BANK				PROC(FIXED)								EXTERNAL;	/*	PROCEDURE TO TRY TO FIND A NEW TIMBRE BANK ON THE DISK	*/
DCL READ.IN.BANK				PROC										EXTERNAL;	/*	CALL THIS PROCEDURE TO ATTEMPT TO READ IN NEW TIMBRE BANK FROM DISK	*/
DCL COPY.TIMBRE				PROC(FIXED,FIXED)	RETURNS(FIXED)	EXTERNAL;	/*	COPIES A TIMBRE FROM ONE TRK TO ANOTHER	*/
DCL ADD.CUE.TO.LIST			PROC(FIXED,ARRAY,FIXED,FIXED)		EXTERNAL;
DCL ADD.EVENT.TO.LIST		PROC(FIXED,ARRAY,FIXED,FIXED,ARRAY,ARRAY,FIXED)	EXTERNAL;
DCL SETUP.POLY.INFO			PROC										EXTERNAL;	/*	SET UP POLY LOOP INFO	*/
DCL ADD.POLY.EVENT.TO.LIST	PROC(FIXED, FIXED, ARRAY, ARRAY)	EXTERNAL;
DCL LOOP.SEARCH				PROC(FIXED)								EXTERNAL;	/*	PASS 0=COMPLETE SEARCH, 1=SHORT SEARCH	*/
dcl RECALL.TIMBRE.TO.TRACK	proc (fixed, fixed, fixed)			external;

DCL FIND.USABLE.DEST					PROC					RETURNS(FIXED)	EXTERNAL;	/*	FINDS AN UNUSED TIMBRE SLOT	*/
DCL CHECK.FOR.REDUNDANT.TIMBRE	PROC(FIXED,FIXED)	RETURNS(FIXED)	EXTERNAL;	/*	ELIMINATES DUPLICATE COPIES OF A TIMBRE	*/

/*	FROM 198-SYN2	*/

DCL SOUND.FILE.MISSING	FIXED			EXTERNAL;
DCL ALLOC.STATUS			FIXED			EXTERNAL;
DCL POLY.TOGGLE			FIXED			EXTERNAL;	/*	POLY BIN TO LOAD SOUND FILE IN	*/

DCL COMPUTE.WAVE			PROC			EXTERNAL;	/*	COMPUTE WAVEFORM GIVEN HARMONIC CONTENTS	*/
DCL DEALLOC					PROC(FIXED)	EXTERNAL;	/*	SHORT ROUTINE TO FREE UP MEMORIES/BUFFERS BEFORE CHANGING TIMBRES	*/
DCL ALLOC.TIMBRE			PROC(FIXED)	EXTERNAL;	/*	CALLED FROM MAIN LOOP			*/
DCL ALLOC.ALL.TIMBRES	PROC			EXTERNAL;	/*	PROCEDURE TO ALLOCATE ALL MEMORIES (IE SEQUENCE RECALL)	*/
DCL DEALLOC.ALL			PROC			EXTERNAL;	/*	PROCEDURE TO DEALLOCATE ALL TIMBRES	*/
DCL ALLOC.AND.COMPUTE	PROC			EXTERNAL;

