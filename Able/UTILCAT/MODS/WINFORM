/* WINFORM  $SUBTITLE Winchester Disk Formatting Routines *//* modification history:  01/06/94   pf - Allowed CCS to equal 1 or 2 on scsi format*/module format_winchester;configuration modelC, MULDIV;insert ':-xpl:literals'; 	/* literals */insert ':-xpl:syslits'; 	/* system literals */insert ':-xpl:termrout'; 	/* terminal utilities */insert ':-xpl:scsi'; 		/* SCSI drivers */insert ':-xpl:cmdrout'; 	/* SCSI drivers */insert ':-xpl:devutil'; 	/* device handlers *//* $subtitle Format A Winchester Disk */winform: proc(primary, type, devadr, buf) returns (boolean) public; /* format Winchester */   dcl primary boolean; /* TRUE if PRIMARY format desired */   dcl type    fixed; /* configuration format device type */   dcl devadr  fixed; /* configuration format device address of Winchester to format */   dcl buf     fixed array; /* buffer for writing catalog */   dcl status  fixed; /* format status */   dcl (i, j)  fixed;   type = (shr(type, 8) and "3"); /* extract just the Winchester type */   crlf;   pstring('Formatting ');   i = (devadr and "17");   j = (shr(devadr, 8) and "17");      if ((shr(devadr, 4) and "17") == 1)		/* use LUN 0 if board 1 */		j = 0;   		   status = true; /* assume good status at beginning */     if type = 1 then do; /* SCSI Winchester? */      pstring('SCSI device attached to interface '); pnum(shr(devadr, 4) and "17", 0);      pstring(' with SCSI ID '); pnum(i, 0); pstring(' and LUN '); pnum(j, 0); crlf;      if status then do; /* if test pass went ok or primary format */         pstringr ('  *** Beginning Format Pass.'); flush_term;         		 status = IssueFormat (devadr);		/* format it */         if status <> S$Good then do;		/* bad status? */            if status < 0 then do;			/* Connection failure? */               pstring ('  *** SCSI Device Failure - Connection status:  '); pnum (status, 0); crlf;            end;            else do; 						/* Bad sense */               pstring ('  *** SCSI Device Failure - Sense key:  '); hnum (status, 2); crlf;            end;            status = false; /* bad status */         end;         else status = true; /* good status */      end; /* of okay test pass or primary */   end; /* of SCSI Winchester */      else do; /* IMI Winchester */      pstring ('IMI Winchesters are not supported by this software.');      status = false;   end;   if status then do; /* if okay status */      j = 6;      i = find_device(6); /* look for W0 */      if i <> 0 then i = ((devadr == core(i + s#devadr)) and (type == (shr(core(i + s#devtyp), 8) and "17"))); /* see if this drive is W0 (1) */      if not i then do; /* it wasn't */         j = 7;         i = find_device(7); /* look for W1 */         if i <> 0 then i = ((devadr == core(i + s#devadr)) and (type == (shr(core(i + s#devtyp), 8) and "17"))); /* see if this drive is W1 (1) */      end;      if i then do; /* if this is the first drive of either W0 or W1 */         pstringr('  *** Zeroing out Winchester Catalog Area.');         do i = 0 to 1023; buf (i) = 0; end;         call writedata(shl(j, 8), 0, buf, 1024);      end;      pstringr('  *** Format complete.');   end;   return (status); /* return status */end winform;end format_winchester;