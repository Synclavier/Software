/* This module makes a bold attempt at setting the terminal type based  on the terminal actually in use.  It really only handles VT100 vs.  ADM 3,5,11.  It will not work correctly if the terminal is running  at less than 1200 baud [takes 40 ms total (including sending the  command sequence) at 1200 baud].  Changing the timeout will make  it work at slower speeds.  This module MUST be libraried before the terminal utilities.  The screen should also be cleared by your program at start-up since  this routine may write garbage on the screen.  By:  Karim J. Chichakly on 14 Feb 1985 */module set_terminal;   configuration modelC, MULDIV;   insert ':-xpl:literals'; /* general literals */   insert ':-xpl:asciilit'; /* ASCII literals */   insert ':-xpl:syslits'; /* system literals */   dcl timeout   lit 'shl(d03_speed, 2) + d03_speed'; /* timeout for reading status from terminal (currently 50 ms) */   dcl VT100     boolean; /* TRUE if this is a VT100 type terminal */   dcl (i, j, k) fixed;   write(d03) = 0; write(d03) = 0; /* get in sync with D3 clock */   if (read("51") and "2") <> 0 then i = read("50"); /* clear terminal input */   print character(a.esc), '[5n',; /* request VT100 status */   VT100 = true; /* assume we have a VT100 type terminal */   i = 0; j = 0;   do while (i <= timeout); /* get all characters sent in next TIMEOUT (remember sending the above command may take a clock tick) */      if read(d03) then do; /* clock tick */         i = i + 1;         write(d03) = 0; /* clear clock */      end;      if (read("51") and "2") <> 0 then do; /* get next character from terminal */         k = (read("50") and "177"); /* get char (mask off parity) */         do case (j); /* check each character in sequence */            if k <> a.esc                  then VT100 = false; /* ESC */            if k <> a.lbracket             then VT100 = false; /* [ */            if ((k <> a.0) and (k <> a.3)) then VT100 = false; /* 0 or 3 */            if k <> l.n                    then VT100 = false; /* n */         end;         j = j + 1; /* count chars received */      end; /* of get next character from terminal */   end; /* of get all characters sent in next TIMEOUT */   if j < 4 then VT100 = false; /* we have to match ALL four characters */   if VT100 then do; /* if a VT100 */      if terminal.type <> t#vt100 /* if not already a VT100 type terminal */      then terminal_info = shl(t#vt100, 8); /* set config to VT100 */   end;   else do; /* not a VT100 */      if terminal.type = t#vt100 /* if configured as a VT100 */      then terminal_info = shl(t#adm3, 8); /* make a non-VT100 (ADM) */   end;end set_terminal;