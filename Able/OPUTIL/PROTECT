/* Copy Protection Utility - Kip Olson, July 1988 *//*   This program creates a "copy-protected" floppy disk by de-allocating   the last sector on the disk and writing a unique pattern there.   The protected program can then read this sector to verify the pattern,   but no files will get stored there and the pattern cannot be copied.*/insert ':-xpl:termut';insert ':-xpl:catrtns';dcl catbuf(c#dir_max - 1) fixed;dcl fcb(f#len)     fixed;dcl databuf(255)   fixed;Protect: proc(pattern);   dcl pattern    fixed;   dcl LastSector fixed;   dcl i          fixed;   if read_catalog('F0:',1) then do; /* got top level catalog */      LastSector = C#LS_Length - 1; /* get last sector on disk */      do i = 0 to c#dir_max - 1; /* zero out catalog buffer */         catbuf(i) = 0;      end;      fcb(f#LL) = LastSector - 1; /* allocate one less sector */      fcb(f#LS) = 1;      call put_fcb(0,fcb); /* store free block in catalog buffer */      if write_catalog then do;         do i = 0 to 255;            databuf(i) = pattern;         end;         call writedata(shl(2,8),LastSector,databuf,256); /* write pattern to last sector */         pstring('Pattern written to sector '); unum(LastSector,0); crlf;         return;      end;   end;   pstring('ERROR: C#Status = '); pnum(c#status,0); crlf;end;dcl pattern fixed;call set_catbuf(addr(catbuf(0)),0); /* set catalog buffer */pstringr('Copy Protection Utility');crlf;pstringr('WARNING: This program will erase the contents of F0:');crlf;if Get_YN('Do you really wish to do this [Y(es) or N(o)]? ') then do;   crlf;   pstring('Enter pattern to use (in hex): '); pattern = gethex; crlf;   call Protect(pattern);end;else crlf;