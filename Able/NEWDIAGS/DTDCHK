/*

Title           : DTDCHK - Program to identify DTD by presence of PSBMC
Project Engineer: William Leathers
Project Start   : Nov 3, 1987
New England Digital Corporation

release 06/01/88
*/

insert ':-xpl:scsilits';

dcl executing_on_dtd boolean;
/***************************************************************************/
dcl exit_to_firmware lit 'call #exit_to_firmware';
#exit_to_firmware: proc;
   interp_activate_real_time(false);    // Set interpret_at_interrupt_prior == false
   interpret_set_timebase_mode(0);      // Set rtp_is_playing == false; set interpret_at_defrd_prior == false

   if executing_on_dtd then do;
      write("1")   = "H0020";  /* psw reset */
      write("317") = "HFE00";  /* program counter <- firmware SCSI boot */
   end;
   else call exit(0);
end #exit_to_firmware;

/***************************************************************************/

dcl look_for_lun0 lit 'call #look_for_lun0';
#look_for_lun0: proc; /* connect to proprietary LUN */
   dcl i   fixed;

   /* See if any D24's in system                                           */
   if (read("51") & "H4000") = 0 then do;        /*    D24 exist bit BDB14 */
      executing_on_dtd = 0; return;              /* If no D24 then not DTD */
   end;

   /* select D24 number 3 */
   interp_set_scsi_id(interp_set_scsi_id_access_dtd, 3, 0);	

   write(scsisel) = (s$selectenable or shl(1, 8 + 3));
   if (read(scsisel) and s$selmask) <> shl(1, 8 + 3) then do;
      executing_on_dtd = 0; return;
   end;

   write(scsibus) = s$rst; write(scsibus) = 0; /* just toggle SCSI reset */
   write(scsisel) = 0;  write(scsibus) = 0;       /* clear the bus */

   /* Wait for bus free or 500 milliseconds */
   i = 50000;                              /* Wait 500 ms */
   do while ( ((read(ScsiBus) and (S$BSY or S$SEL)) <> 0) and (i <> 0) ); /* Loop takes about 10 us on a Model C processor */
      i = i - 1;
   end;
   if i = 0 then do;                     /* No Bus Free Phase ever occurred (and wait 2.2 us) */
      /*Bus busy before connecting to target zero. */
      executing_on_dtd = 0; return;
   end;

   /* the proprietary target is target zero */
   write(scsidata) = 1;                                /* select target 0 */
   write(scsibus) = s$sel;

   /* Wait until Target asserts BSY or a Selection Timeout Delay (250 ms) goes by */
   i = 25000;                              /* Wait 250 ms */
   do while (((read(scsibus) and s$bsy) = 0) and (i <> 0) ); /* Loop takes about 10 us on a Model C processor */
     i = i - 1;
   end;
   write(scsidata) = 0;                    /* Release data bus */
   write(scsibus) = 0;                     /* release signal bus */

   if i = 0 then do;
     executing_on_dtd = 0;                     /* No device there */
     return;
   end;

   if (read(scsibus) & s$sigmask) = s$command then do; /* in command phase -no dtd */
      write(scsibus) = s$rst;
      do i = 1 to 20; end;
      write(scsibus) = 0;
      executing_on_dtd = 0;
   end;
   else do;
     executing_on_dtd = 1;
     write(scsibus) = s$rst; write(scsibus) = 0; /* LOD_disable -just toggle SCSI reset */
   end;

end #look_for_lun0;
/***************************************************************************/
look_for_lun0;
