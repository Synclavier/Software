/*

Title           : SYSSCAN - Program to display system configuration
Project Engineer: William Leathers
Project Start   : Jan 1987
New England Digital Corporation

Modification History:

02/14/89  WSL - Added PRM, D115D, DSP 70 and D34 GPI identification.

*/

/****************************************/
/* Required for stand-alone compilation */
/*
insert ':NEWDIAGS:dtdchk';
insert ':-xpl:termutil';
insert ':-xpl:intrprtr';
insert ':NEWDIAGS:sysinit';
*/
/****************************************/

dcl display_system_configuration lit 'call #display_system_configuration';
/***************************************************************************/
#display_system_configuration: proc;
  dcl (i,j,k,chr) fixed;

  /*************************************************************************/
  dcl yesrno lit 'call #yesrno';
  #yesrno: proc(flag);
     dcl flag boolean;

     if flag then pstring('Yes');
     else pstring(' No');
  end #yesrno;
  /*************************************************************************/
  /*      1         2         3         4         5         6         7
  2345678901234567890123456789012345678901234567890123456789012345678901234567890
  0
  1                    System configuration - Synclavier
  2                    ---------------------------------
  3
  4  Processor Type   : Model C       External memory  : 512 K
  5
  6  D16 timer        : Yes           Poly Bins:      Bin 1   Bin 2   Bin 3
  7  D72 SMPTE        : Yes           -------------   -----   -----   ----- 
  8  Poly system      : Yes           Megabytes   :     32      32      32
  9  D32X             : Yes           Poly voices :     64      64      64
  0  D100A            : Yes           PSAC #1     :    Yes     Yes     Yes
  1  D110A            :  No           PSAC #2     :    Yes     Yes     Yes
  2  D40Q             : Yes           PSADC       :    Yes     Yes     Yes
  3  M64K             : Yes           DDDAC       :    Yes     Yes     Yes
  4  D34 GPI          :  No           STM  Boxes  :      4       0       0
  5                                   STM  Inputs :     16      16      16
  6  D24 SCSI : 0,1,2,3               PSAD Type   :    Yes      No      No
  8  MIDI     : 0,1,2,3,4,5,6,7       PRM         :    Yes      No      No
  7  D115D    : 0,1,2,3
  9  DSP 70   : 0,1,2,3,4,5,6,7
  0
  1
  2
  3
  */ 
  /*************************************************************************/
  /*************************************************************************/
  clear_screen;
  if executing_on_dtd then do;
    pos(1,20); pstring('System configuration - Direct-to-Disk');
    pos(2,20); pstring('-------------------------------------');
  end;
  else do;
    pos(1,23); pstring('System configuration - Synclavier');
    pos(2,23); pstring('---------------------------------');
  end;

  pos(4,05); pstring('Processor type : ');
  pstring('Model ');
  do case able_processor_type;
     pstring('B');
     pstring('C');
     pstring('D');
  end; /* case */

  pos(4,38); pstring('External memory  : ');
  pos(4,56); 
  if external_memory_exists then do;
    pnum(external_memory_size,4); pstring('K');

    if external_memory_size = 0 then do;
      pos(20,10); pstring('Error: External memory exist bit set, but no memory found.');
      pos(21,10); pstring('Press <RETURN> to continue ... ');
      chr = rchar; pos(20,10); erase_line; pos(21,10); erase_line;
    end;
  end;
  else pstring(' None');

  pos( 6,05);  
  if m64k_exists then pstring('D16 Timer (M64K) : ');
  else                pstring('D16 Timer        : ');  yesrno(d16_exists);

  pos( 7,05);  pstring('SMPTE            : ');  yesrno(smpte_exists);
  pos( 8,05);  pstring('Poly system      : ');  yesrno(poly_exists);
  pos( 9,05);  pstring('D32X             : ');  yesrno(d32x_exists);
  pos(10,05);  pstring('D100A            : ');  yesrno(D100A_exists);
  pos(11,05);  pstring('D110A            : ');  yesrno(D110A_exists);
  pos(12,05);  pstring('D40Q             : ');  yesrno(d40q_exists);
  pos(13,05);  pstring('M64K             : ');  yesrno(m64k_exists);
  pos(14,05);  pstring('D34 GPI          : ');  yesrno(d34_gpi_exists);

  pos(16,05);  pstring('D24 SCSI IDs : ');
  if d24_exists then do;
    if d24_map = 0 then do;
      pos(20,10); pstring('Error: D24 exist bit set, but no IDs found');
      pos(21,10); pstring('Press <RETURN> to continue ... ');
      chr = rchar; pos(20,10); erase_line; pos(21,10); erase_line;
    end;
    else do;
      j = 0;
      do i = 0 to 3;
        if (d24_map & shl(1,i)) > 0 then do;
          if j=0 then pstring('#'); 
          else pstring(',');
          j = j+1;
          pnum(i,0);
        end;
      end;
    end;
  end;
  else pstring('None');

  pos(17,05);  pstring('MIDI Systems : ');
  if midi_exists then do;
    j = 0;
    do i = 0 to 7;
      if (mi70_map & shl(1,i)) <> 0 then do;
        if j=0 then pstring('#');
        else pstring(',');
        j = j+1;
        pnum(i,0);
      end;
    end;
  end;
  else pstring('None');

  pos(18,05);  pstring('D115D  IDs   : ');
  if d115d_exists then do;
   if d115d_map = 0 then do;
      pos(20,10); pstring('Error: D115D exist bit set, but no IDs found');
      pos(21,10); pstring('Press <RETURN> to continue ... ');
      chr = rchar; pos(20,10); erase_line; pos(21,10); erase_line;
    end;
    else do;
      j = 0;
      do i = 0 to 3;
        if (d115d_map & shl(1,i)) > 0 then do;
          if j=0 then pstring('#'); 
          else pstring(',');
          j = j+1;
          pnum(i,0);
        end;
      end;
    end;
  end;
  else pstring('None');

  pos(19,05);  pstring('DSP 70 IDs   : ');
  if dsp70_exists then do;
    if dsp70_map = 0 then do;
      pos(20,10); pstring('Error: DSP 70 exist bit set, but no IDs found');
      pos(21,10); pstring('Press <RETURN> to continue ... ');
      chr = rchar; pos(20,10); erase_line; pos(21,10); erase_line;
    end;
    else do;
      j = 0;
      do i = 0 to 7;
        if (dsp70_map & shl(1,i)) > 0 then do;
          if j=0 then pstring('#'); 
          else pstring(',');
          j = j+1;
          pnum(i,0);
        end;
      end;
    end;
  end;
  else pstring('None');

  pos( 6,38);    pstring('Poly Bins:      Bin 1   Bin 2   Bin 3');
  pos( 7,38);    pstring('-------------   -----   -----   -----');

  pos( 8,38);   pstring('Megabytes   : ');
  pos( 9,38);   pstring('Poly voices : ');
  pos(10,38);   pstring('PSAC #1     : ');
  pos(11,38);   pstring('PSAC #2     : ');
  pos(12,38);   pstring('PSADC       : ');
  pos(13,38);   pstring('DDDAC       : ');
  pos(14,38);   pstring('STM  Boxes  : ');
  pos(15,38);   pstring('STM  Inputs : ');
  pos(16,38);   pstring('PSAD Type   : ');
  pos(17,38);   pstring('PRM         : ');

  if poly_exists then
  do i = 0 to (#_poly_bins-1);
    pos( 8,56 + (i*8));  pnum(#_poly_mbytes(i),3);
    pos( 9,56 + (i*8));  pnum(#_poly_voices(i),3);
    pos(10,56 + (i*8));  yesrno(psac1_exists(i));
    pos(11,56 + (i*8));  yesrno(psac2_exists(i));
    pos(12,56 + (i*8));  yesrno(psadc_exists(i));
    pos(13,56 + (i*8));  yesrno(dddac_exists(i));
    pos(14,56 + (i*8));  pnum(#_stm_boxes(i),3);
    pos(15,56 + (i*8));  pnum(2 * #_daughters(i),3);
    pos(16,54 + (i*8));  
    if #_daughters(i) > 0 then do;
      if daughter_type(i) = 0 then pstring('  NED');
      else pstring('Anal.');
    end;
    else pstring(' None');
    pos(17,56 + (i*8));  yesrno(prm_exists(i));
  end;
  else do;
    pos(8,54); pstring(' NOT');
    pos(9,54); pstring('FOUND');
  end;

  if #_poly_bins < 3 then do;
     pos( 8,70); pstring(' NOT');
     pos( 9,70); pstring('FOUND');
  end;
  if #_poly_bins < 2 then do;
     pos( 8,62); pstring(' NOT');
     pos( 9,62); pstring('FOUND');
  end;

  reverse(true);
  pos(22, 3); pstring('This screen shows you the hardware that was identified in your system.');
  pos(23, 3); pstring('Press <RETURN> to proceed on to the LOGGER test selection screen -->');
  reverse(false);

  chr = rchar;

end #display_system_configuration;
/***************************************************************************/
/*display_system_configuration;*/
