/*

Title           : Serial chain test module  - inserted in LOGGER
Project Engineer: William Leathers
Project Start   : Feb 1986
New England Digital Corporation

Modification History:

  01/13/89  WSL  - Changed addressing to hit Mbyte #512 for PSBMC, Mbyte #32
                   for PSMC.

*/

/***************************************************************************/
/************     Required for stand - alone compilation    ****************/
/*
insert ':-xpl:asciidef';
insert ':-xpl:termutil';
insert ':-xpl:intrprtr';
insert ':NEWDIAGS:sysinit';

dcl status_line1 lit '18,10';  dcl status_line2 lit '19,10'; 
dcl status_line3 lit '20,10';  dcl status_line4 lit '21,10'; 

dcl erase_status_lines lit 'call clr_status';
clr_status: proc;
  pos(status_line4); erase_line;  pos(status_line3); erase_line;
  pos(status_line2); erase_line;  pos(status_line1); erase_line;
end clr_status;
*/
/***************************************************************************/
/***************************************************************************/
/* 
   The goal of this test is to test the bits of the serial chain.  If a non-
   existent sector of memory can be used, functional memory is not required.
   If a non-existent memory location is read, its address mod 64K is clocked
   onto the data bus.

   The most significant 4 bits of the address are asserted, which will be
   ignored by a PSMC.  This means that the memory location will be in Mbyte
   #32 for a PSMC, and Mbyte #512 for a PSBMC.

*/

dcl serial_chain_errors(psmaxbins) fixed;

/*******************************************************************/
dcl test_serial_chain lit 'call test_chain';
test_chain: proc(bin#);
   dcl bin# fixed;
   dcl num_mbytes fixed;


  /*******************************************************************/
  addressing_test:proc(bin#);               /* tests the serial chain          */
     dcl bin# fixed;
     dcl bin_base fixed;
     dcl (sector,word) fixed;

     bin_base = bin# * 64;

     /* Write address mod 64K to memory just in case it exists */
     write(psc) = bin_base;                
     call pbmwrite(bin#,"HFF00","H0F00"); /* last 64K of Mb 32(PSMC) or 512(PSBMC) */
     do sector = 0 to 255;
       do word = 0 to 255;
         write(psd) = (shl(sector,8) + word);
       end;
     end;
     Really.Run.Host();

     /* Now read clocked address or memory (if it exists) */
     call pbmread(bin#,"HFF00","H0F00");
     do sector = 0 to 255;              
       do word = 0 to 255;
         if read(psd) <> (shl(sector,8) + word) then 
           if serial_chain_errors(bin#) <> "HFFFF" then
              serial_chain_errors(bin#) = serial_chain_errors(bin#) + 1;
       end;      
     end;
     Really.Run.Host();

  end addressing_test;
  /*******************************************************************/

   num_mbytes = #_poly_mbytes(bin#);
   pos(status_line1);   pstring('Testing Serial chain in bin ');
   pnum(bin#+1,1); pstring('...  ');
   flush_term;
   Really.Run.Host();
   call addressing_test(bin#);
   Really.Run.Host();
end test_chain;
/*******************************************************************/
/*
begin;   
   dcl i fixed;

   clear_screen;
   do i = 0 to #_poly_bins - 1;
     test_serial_chain(i);
     crlf; pnum(serial_chain_errors(i),5);
   end;
end;
flush_term;
*/
