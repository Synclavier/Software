WHEN BREAK THEN CALL EXIT(0);DCL (I,J,K,L,M,N) FIXED;LIBRARY 'SOFTRTN.';LIBRARY 'HARDRTN.';DCL SM PROC(FIXED,FIXED) RETURNS(FIXED) EXTERNAL;DCL SFM PROC(FIXED,FIXED) RETURNS(FIXED) EXTERNAL;DCL SD PROC(FIXED,FIXED) RETURNS(FIXED) EXTERNAL;DCL SFD PROC(FIXED,FIXED) RETURNS(FIXED) EXTERNAL;DCL HM PROC(FIXED,FIXED) RETURNS(FIXED) EXTERNAL;DCL HFM PROC(FIXED,FIXED) RETURNS(FIXED) EXTERNAL;DCL HD PROC(FIXED,FIXED) RETURNS(FIXED) EXTERNAL;DCL HFD PROC(FIXED,FIXED) RETURNS(FIXED) EXTERNAL;DCL NEXT FIXED; /* GLOBAL VARIABLE - NEXT RANDOM NUMBER */DCL CNTR FIXED; /* COUNTS # OF RND NUMBERS TO PERMUTATE CYCLE */RND:PROC; /* RETURNS RANDOM NUMBER */  DCL I FIXED;  DCL SEED LITERALLY '45';  DO I=0 TO 15;    IF NEXT<0 THEN NEXT=SHL(NEXT,1) XOR SEED;    ELSE NEXT=SHL(NEXT,1);  END;  CNTR=CNTR+1; /* COUNT TIMES */  IF CNTR=0 THEN DO; /* AFTER 65K RANDOM BITS, SHIFT BY ONE TO PERMUTATE */    IF NEXT<0 THEN NEXT=SHL(NEXT,1) XOR SEED;    ELSE NEXT=SHL(NEXT,1);  END;  RETURN NEXT;END;NEXT=1;CNTR=0; /* INITIALIZE RANDOM NUMBER SEQUENCE */DO WHILE 1;   I=RND;   J=RND;   K=SM(I,J);   L=SFM(I,J);   M=HM(I,J);   N=HFM(I,J);   IF (K<>M) OR (L<>N) THEN DO;      PRINT OCTAL(L), ' ', OCTAL(K),' DID NOT MATCH';      PRINT OCTAL(N), ' ', OCTAL(M), ' (MUL)';   END;   K=SD(I,J);   L=SFD(I,J);   M=HD(I,J);   N=HFD(I,J);   IF (K<>M) OR (L<>N) THEN DO;      PRINT OCTAL(L), ' ', OCTAL(K),' DID NOT MATCH';      PRINT OCTAL(N), ' ', OCTAL(M), ' (DIV)';   END;END;