configuration smini;insert ':-xpl:whendisk'; /* disk i/o error routine */when break then call exit(-1);dcl status     lit '"100"'; /* physical device addresses */dcl sector     lit '"102"';dcl device     lit '2'; /* logical device address */dcl track_size lit '30'; /* sectors/cylinder (we COULD look this up, but...) */dcl tracks     lit '80'; /* tracks (we could look this up too, but...) */dcl buf (shl(track_size, 8) - 1) fixed;dcl iter      fixed; /* iteration number */dcl ferrs     fixed; /* number of fatal errors */dcl rerrs     fixed; /* number of recoverable errors */dcl (i, j, k) fixed;if ((device < 2) or (device IGT 5)) then do;   print 'System error:  Device specified is NOT a floppy device.';   call exit(-1);end;print 'D100A Test Program - 15 April 1985';print;print 'Please place the disk to be tested into ',;do case (device - 2);   print 'F0',;   print 'F1',;   print 'R0',;   print 'R1',;end;print ' and press RETURN ->',;linput buf;print;iter = 0;ferrs = 0;rerrs = 0;do while 1;   iter = iter + 1;   print '*** Starting iteration', iter, ' (', ferrs, ' fatal errors,', ferrs + rerrs, ' total errors)';   do i = 0 to shl(track_size, 8) - 1; /* set up buffer */      buf (i) = i;   end;   print '*** Writing disk';   do i = 0 to tracks - 1; /* write out all tracks */      call disk.io.setup; /* set up to handle I/O errors */      call writedata (shl(device, 8), i*track_size, buf, shl(track_size, 8));      if disk.status <> 0 then do; /* oops! */         print 'Track', i, ', sector', read(sector),;         print ':  Unrecoverable write error (status = ', octal(read(status)), ').';         ferrs = ferrs + 1;      end;      else if error.count <> 0 then do; /* recoverable error */         print 'Track', i,;         print ':  Recoverable write error.';         rerrs = rerrs + error.count;      end;   end;   do i = 0 to shl(track_size, 8) - 1; /* zap buffer */      buf (i) = 0;   end;   print '*** Reading disk';   do i = 0 to tracks - 1; /* read back all tracks */      call disk.io.setup; /* set up to handle I/O errors */      call readdata (shl(device, 8), i*track_size, buf, shl(track_size, 8));      if disk.status <> 0 then do; /* oops! */         print 'Track', i, ', sector', read(sector),;         print ':  Unrecoverable read error (status = ', octal(read(status)), ').';         ferrs = ferrs + 1;      end;      else do; /* recoverable or no error */         if error.count <> 0 then do; /* recoverable error */            print 'Track', i,;            print ':  Recoverable read error.';            rerrs = rerrs + error.count;         end;         do j = 0 to shl(track_size, 8) - 1; /* check buffer */            if buf (j) <> j then do; /* oops! */               k = i*track_size + shr(j, 8) + ((j and "377") <> 0); /* compute sector number */               print 'Track', i, ', sector', k,;               print ':  expected ', octal(j), ' got ', octal(buf (j));               ferrs = ferrs + 1;               j = shl(k - i*track_size + 1, 8) - 1; /* move to next sector boundary */            end;            buf (j) = 0;         end; /* of check buffer */      end; /* of recoverable or no error */   end; /* of read back all tracks */end;